<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="310" onload="init(evt)" viewBox="0 0 1200 310" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#e0e0ff" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="310.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Implicit Searches Flame Graph of Scala Steward</text>
<text id="details" x="10.00" y="293" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="293" > </text>
<g id="frames">
<g >
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (893 Î¼s, 0.01%)</title><rect x="640.1" y="101" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="643.06" y="111.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;pin&quot;)]} (id 8341) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,554 Î¼s, 0.03%)</title><rect x="1106.3" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1109.27" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Dependency]{type Out = K} (id 1459) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (2,598 Î¼s, 0.04%)</title><rect x="469.2" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="472.18" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)]} (id 8335) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,092 Î¼s, 0.02%)</title><rect x="1083.0" y="133" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1086.01" y="143.5" ></text>
</g>
<g >
<title>((com.monovore.decline.Opts[Boolean], com.monovore.decline.Opts[Option[Int]], com.monovore.decline.Opts[Boolean])) =&gt; ?{def mapN: ?} (expanded macros 0)  (1,888 Î¼s, 0.03%)</title><rect x="16.4" y="245" width="0.3" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="19.38" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;MavenRepository&quot;)]} (id 2167) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,685 Î¼s, 0.03%)</title><rect x="920.2" y="165" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="923.25" y="175.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;pattern&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,List]{type Lub = Symbol} (expanded macros 0)  (10,524 Î¼s, 0.17%)</title><rect x="979.3" y="149" width="2.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="982.33" y="159.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;scalafmt&quot;)]} (id 7628) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (593 Î¼s, 0.01%)</title><rect x="1053.6" y="149" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1056.64" y="159.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.DependencyInfo]{type Out = K} (id 1592) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,857 Î¼s, 0.03%)</title><rect x="458.5" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="461.54" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.data.Resolver.Header] (expanded macros 0)  (1,754 Î¼s, 0.03%)</title><rect x="992.2" y="101" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="995.23" y="111.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.repoconfig.PostUpdateHookConfig] (expanded macros 0)  (874 Î¼s, 0.01%)</title><rect x="1064.6" y="149" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1067.56" y="159.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucketserver.Json.NewPR]{type Repr = V} (expanded macros 3)   (3,167 Î¼s, 0.05%)</title><rect x="847.6" y="197" width="0.6" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="850.62" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;suffix&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;exact&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;contains&quot;)] :: shapeless.HNil,Option[String] :: Option[String] :: Option[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (3,600 Î¼s, 0.06%)</title><rect x="798.6" y="181" width="0.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="801.63" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;links&quot;)] :: shapeless.HNil,scala.collection.immutable.Map[String,cats.data.NonEmptyList[org.scalasteward.core.forge.bitbucketserver.Json.Link]] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,765 Î¼s, 0.03%)</title><rect x="727.1" y="133" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="730.10" y="143.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (9,640 Î¼s, 0.16%)</title><rect x="1066.0" y="197" width="1.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1068.98" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)]} (id 1970) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,470 Î¼s, 0.02%)</title><rect x="990.5" y="69" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="993.52" y="79.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucket.CreateComment]{type Repr = V} (expanded macros 3)   (1,782 Î¼s, 0.03%)</title><rect x="508.8" y="197" width="0.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="511.81" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucketserver.Json.NewPR]{type Out = K} (id 4035) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (2,725 Î¼s, 0.04%)</title><rect x="846.7" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="849.68" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;configurations&quot;)]} (id 1468) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,685 Î¼s, 0.03%)</title><rect x="473.4" y="101" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="476.39" y="111.5" ></text>
</g>
<g >
<title>cats.Functor[G] (expanded macros 0)  (2,013 Î¼s, 0.03%)</title><rect x="236.0" y="245" width="0.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="239.04" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[cats.data.NonEmptyList[org.scalasteward.core.forge.bitbucketserver.Json.Link]] (expanded macros 0)  (558 Î¼s, 0.01%)</title><rect x="735.5" y="165" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="738.47" y="175.5" ></text>
</g>
<g >
<title>cats.kernel.Order[org.scalasteward.core.data.Resolver] (expanded macros 0)  (650 Î¼s, 0.01%)</title><rect x="285.6" y="213" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="288.60" y="223.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repocache.RepoCache]{type Repr = V} (id 6849) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,267 Î¼s, 0.02%)</title><rect x="652.1" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="655.09" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;filter&quot;)] :: shapeless.HNil,String :: Option[String] :: cats.data.NonEmptyList[org.scalasteward.core.repoconfig.PullRequestUpdateFilter] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (3,352 Î¼s, 0.05%)</title><rect x="889.5" y="197" width="0.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="892.46" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucket.DefaultReviewers]{type Repr = V} (expanded macros 3)   (3,554 Î¼s, 0.06%)</title><rect x="512.1" y="197" width="0.7" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="515.08" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.edit.scalafix.ScalafixMigration]{type Repr = V} (id 2764) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (3,138 Î¼s, 0.05%)</title><rect x="695.4" y="197" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="698.40" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: shapeless.HNil,List]{type Lub = Option[io.circe.generic.extras.JsonKey]} (expanded macros 0)  (663 Î¼s, 0.01%)</title><rect x="1079.0" y="213" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1081.97" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (894 Î¼s, 0.01%)</title><rect x="599.0" y="149" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="601.95" y="159.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.data.GroupId] (expanded macros 0)   (854 Î¼s, 0.01%)</title><rect x="674.8" y="149" width="0.1" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="677.76" y="159.5" ></text>
</g>
<g >
<title>F[Option[org.scalasteward.core.data.Scope[List[org.scalasteward.core.data.Dependency]]]] =&gt; ?{def map: ?} (expanded macros 0)  (1,197 Î¼s, 0.02%)</title><rect x="84.2" y="245" width="0.2" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="87.18" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.git.Branch] (expanded macros 0)  (1,097 Î¼s, 0.02%)</title><rect x="348.3" y="229" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="351.30" y="239.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[Some[List[org.scalasteward.core.repoconfig.PullRequestGroup]] :: Some[Option[scala.util.matching.Regex]] :: Some[List[String]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;grouping&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;includeMatchedLabels&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;customLabels&quot;)] :: shapeless.HNil]{type Out = OutT} (expanded macros 0)  (4,216 Î¼s, 0.07%)</title><rect x="1022.4" y="181" width="0.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1025.42" y="191.5" ></text>
</g>
<g >
<title>cats.Foldable[Array] (expanded macros 0)   (3,389 Î¼s, 0.05%)</title><rect x="29.0" y="229" width="0.6" height="15.0" fill="rgb(220,80,80)" rx="2" ry="2" />
<text  x="32.00" y="239.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.coursier.VersionsCache.Value]{type Repr = R} (expanded macros 0)  (66,800 Î¼s, 1.08%)</title><rect x="424.7" y="213" width="12.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="427.68" y="223.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.GroupId] (expanded macros 0)  (1,773 Î¼s, 0.03%)</title><rect x="478.0" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="481.00" y="191.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[String]] (expanded macros 0)  (1,287 Î¼s, 0.02%)</title><rect x="690.0" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="693.05" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;artifactId&quot;)]} (id 1472) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,102 Î¼s, 0.02%)</title><rect x="471.8" y="165" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="474.77" y="175.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;clone_url&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;default_branch&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;parent&quot;)] :: shapeless.HNil,org.http4s.Uri :: String :: Option[org.scalasteward.core.forge.gitea.GiteaApiAlg.Repository] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (9,089 Î¼s, 0.15%)</title><rect x="623.8" y="117" width="1.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="626.78" y="127.5" ></text>
</g>
<g >
<title>io.circe.Encoder[String] (expanded macros 0)  (595 Î¼s, 0.01%)</title><rect x="486.4" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="489.41" y="191.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.gitea.GiteaApiAlg.EditPullRequestOption]{type Repr = R} (expanded macros 0)  (12,757 Î¼s, 0.21%)</title><rect x="583.9" y="213" width="2.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="586.94" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;contains&quot;)] :: shapeless.HNil,Option[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,535 Î¼s, 0.02%)</title><rect x="893.5" y="149" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="896.50" y="159.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[Long with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)],Long] :: shapeless.HNil]] (id 5311) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (2,223 Î¼s, 0.04%)</title><rect x="763.3" y="213" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="766.29" y="223.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.forge.data.Comment] (expanded macros 0)  (2,206 Î¼s, 0.04%)</title><rect x="385.3" y="245" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="388.28" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.decoding.ConfiguredDecoder[org.scalasteward.core.update.artifact.ArtifactChange]] (id 8713) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (62,050 Î¼s, 1.01%)</title><rect x="1155.7" y="245" width="11.9" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1158.69" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;groupId&quot;)]} (id 7252) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (708 Î¼s, 0.01%)</title><rect x="1016.6" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1019.60" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)] :: shapeless.HNil,List[org.scalasteward.core.data.Update.ForArtifactId] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (3,921 Î¼s, 0.06%)</title><rect x="825.9" y="165" width="0.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="828.90" y="175.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;labels&quot;)]} (id 5486) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (747 Î¼s, 0.01%)</title><rect x="884.1" y="133" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="887.12" y="143.5" ></text>
</g>
<g >
<title>cats.Functor[List] (expanded macros 0)  (1,397 Î¼s, 0.02%)</title><rect x="327.1" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="330.05" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;changes&quot;)] :: shapeless.HNil,List]{type Lub = Symbol} (expanded macros 0)  (968 Î¼s, 0.02%)</title><rect x="1172.7" y="213" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1175.70" y="223.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.repoconfig.PullRequestFrequency] (expanded macros 0)  (1,652 Î¼s, 0.03%)</title><rect x="1033.9" y="165" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1036.89" y="175.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.data.Comment] (expanded macros 0)  (11,807 Î¼s, 0.19%)</title><rect x="534.2" y="229" width="2.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="537.23" y="239.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.util.Timestamp] (expanded macros 0)  (1,592 Î¼s, 0.03%)</title><rect x="643.3" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="646.32" y="191.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.ArtifactId]{type Out = K} (id 1386) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (2,619 Î¼s, 0.04%)</title><rect x="451.7" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="454.66" y="207.5" ></text>
</g>
<g >
<title>dependency.artifactId.type =&gt; ?{def === : ?} (expanded macros 0)  (736 Î¼s, 0.01%)</title><rect x="304.9" y="245" width="0.2" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="307.91" y="255.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[Char] (expanded macros 0)  (1,107 Î¼s, 0.02%)</title><rect x="271.7" y="245" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="274.68" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[org.scalasteward.core.repoconfig.VersionPattern]] (expanded macros 0)  (1,714 Î¼s, 0.03%)</title><rect x="664.8" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="667.78" y="191.5" ></text>
</g>
<g >
<title>Option[F[org.scalasteward.core.forge.bitbucket.RepositoryResponse]] =&gt; ?{def sequence: ?} (expanded macros 0)  (1,597 Î¼s, 0.03%)</title><rect x="172.3" y="245" width="0.3" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="175.27" y="255.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord[org.scalasteward.core.data.Resolver.MavenRepository]{type Out = D} (expanded macros 0)  (11,312 Î¼s, 0.18%)</title><rect x="951.0" y="149" width="2.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="953.98" y="159.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.forge.data.PullRequestNumber] (expanded macros 0)  (1,903 Î¼s, 0.03%)</title><rect x="641.6" y="165" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="644.59" y="175.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[None.type :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;changes&quot;)] :: shapeless.HNil]{type Out = Rec} (expanded macros 0)  (570 Î¼s, 0.01%)</title><rect x="1168.7" y="197" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1171.72" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[List[org.scalasteward.core.data.Scope[List[org.scalasteward.core.data.DependencyInfo]]]] (expanded macros 0)  (6,098 Î¼s, 0.10%)</title><rect x="654.6" y="181" width="1.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="657.62" y="191.5" ></text>
</g>
<g >
<title>coursier.util.Monad[[_]F[_]] (expanded macros 0)  (1,964 Î¼s, 0.03%)</title><rect x="300.2" y="245" width="0.4" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="303.18" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;pullRequests&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;scalafmt&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (21,113 Î¼s, 0.34%)</title><rect x="1068.1" y="197" width="4.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1071.11" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Resolver.IvyRepository]{type Out = K} (id 2061) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,755 Î¼s, 0.03%)</title><rect x="970.6" y="133" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="973.63" y="143.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.gitea.GiteaApiAlg.Repository]{type Repr = R} (expanded macros 0)  (37,771 Î¼s, 0.61%)</title><rect x="618.3" y="213" width="7.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="621.29" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,Option[org.scalasteward.core.data.Resolver.Credentials] :: List[org.scalasteward.core.data.Resolver.Header] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (3,636 Î¼s, 0.06%)</title><rect x="972.5" y="101" width="0.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="975.50" y="111.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)]} (id 2084) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,086 Î¼s, 0.02%)</title><rect x="975.5" y="85" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="978.49" y="95.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Resolver.Credentials]{type Out = K} (id 1642) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,450 Î¼s, 0.02%)</title><rect x="483.3" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="486.26" y="207.5" ></text>
</g>
<g >
<title>((Nothing, Nothing)) =&gt; String (expanded macros 0)   (1,635 Î¼s, 0.03%)</title><rect x="12.2" y="245" width="0.3" height="15.0" fill="rgb(241,111,111)" rx="2" ry="2" />
<text  x="15.23" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.forge.bitbucketserver.Json.Repository]] (id 4187) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (16,240 Î¼s, 0.26%)</title><rect x="856.9" y="245" width="3.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="859.89" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;dependency&quot;)] :: shapeless.HNil,org.scalasteward.core.repoconfig.UpdatePattern :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,060 Î¼s, 0.02%)</title><rect x="659.9" y="181" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="662.86" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (715 Î¼s, 0.01%)</title><rect x="473.7" y="101" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="476.72" y="111.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[org.scalasteward.core.data.GroupId] (expanded macros 0)  (6,362 Î¼s, 0.10%)</title><rect x="400.9" y="229" width="1.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="403.90" y="239.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;changes&quot;)]} (id 8838) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (655 Î¼s, 0.01%)</title><rect x="1170.7" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1173.67" y="191.5" ></text>
</g>
<g >
<title>F[Option[org.scalasteward.core.forge.bitbucket.RepositoryResponse]] =&gt; ?{def map: ?} (expanded macros 0)  (2,533 Î¼s, 0.04%)</title><rect x="85.0" y="245" width="0.5" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="88.04" y="255.5" ></text>
</g>
<g >
<title>response.type =&gt; ?{def as: ?} (expanded macros 0)  (3,890 Î¼s, 0.06%)</title><rect x="412.5" y="245" width="0.8" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="415.54" y="255.5" ></text>
</g>
<g >
<title>F[Unit] =&gt; ?{def handleErrorWith: ?} (expanded macros 0)  (587 Î¼s, 0.01%)</title><rect x="107.6" y="245" width="0.1" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="110.61" y="255.5" ></text>
</g>
<g >
<title>G[B] =&gt; ?{def map: ?} (expanded macros 0)  (5,487 Î¼s, 0.09%)</title><rect x="152.0" y="245" width="1.1" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="155.02" y="255.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.repoconfig.UpdatePattern] (expanded macros 0)   (602 Î¼s, 0.01%)</title><rect x="1098.3" y="149" width="0.1" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="1101.33" y="159.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitlab.ForkPayload]{type Repr = V} (expanded macros 3)   (1,473 Î¼s, 0.02%)</title><rect x="877.6" y="197" width="0.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="880.58" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.update.artifact.ArtifactChange]{type Out = K} (id 8716) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (962 Î¼s, 0.02%)</title><rect x="1158.4" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1161.35" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: shapeless.HNil,String :: shapeless.HNil]{type Out = R} (expanded macros 0)  (1,759 Î¼s, 0.03%)</title><rect x="717.3" y="197" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="720.32" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.github.TokenOut]{type Repr = V} (id 5357) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,031 Î¼s, 0.02%)</title><rect x="786.8" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="789.77" y="207.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.bitbucketserver.Json.Condition]{type Repr = R} (expanded macros 0)  (10,055 Î¼s, 0.16%)</title><rect x="712.3" y="213" width="1.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="715.27" y="223.5" ></text>
</g>
<g >
<title>io.circe.Decoder[String] (expanded macros 0)  (534 Î¼s, 0.01%)</title><rect x="761.5" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="764.52" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.buildtool.sbt.data.SbtVersion]{type Repr = R :: shapeless.HNil} (expanded macros 3)   (12,476 Î¼s, 0.20%)</title><rect x="1115.1" y="197" width="2.4" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="1118.10" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;pin&quot;)]} (id 8327) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,340 Î¼s, 0.02%)</title><rect x="1083.9" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1086.85" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;default_branch&quot;)]} (id 4556) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,320 Î¼s, 0.02%)</title><rect x="624.5" y="85" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="627.54" y="95.5" ></text>
</g>
<g >
<title>List[String] =&gt; ?{def intercalate: ?} (expanded macros 0)  (545 Î¼s, 0.01%)</title><rect x="168.3" y="245" width="0.1" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="171.34" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;includeMatchedLabels&quot;)]} (id 7452) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,325 Î¼s, 0.02%)</title><rect x="1027.5" y="149" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1030.52" y="159.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.azurerepos.ClosePullRequestPayload]{type Repr = V} (id 3414) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,134 Î¼s, 0.02%)</title><rect x="832.5" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="835.45" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;html_url&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;number&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;base&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;head&quot;)] :: shapeless.HNil,org.http4s.Uri :: String :: Int :: String :: org.scalasteward.core.forge.gitea.GiteaApiAlg.PRBranchInfo :: org.scalasteward.core.forge.gitea.GiteaApiAlg.PRBranchInfo :: shapeless.HNil]{type Out = R} (expanded macros 0)  (17,551 Î¼s, 0.28%)</title><rect x="610.5" y="197" width="3.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="613.53" y="207.5" ></text>
</g>
<g >
<title>org.http4s.Header[org.http4s.headers.Authorization, _] (expanded macros 0)  (731 Î¼s, 0.01%)</title><rect x="397.9" y="229" width="0.1" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="400.90" y="239.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.gitea.GiteaApiAlg.BranchResp]] (id 4613) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (24,997 Î¼s, 0.41%)</title><rect x="541.6" y="245" width="4.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="544.57" y="255.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.repoconfig.PullRequestGroup]{type Repr = R} (expanded macros 0)  (9,371 Î¼s, 0.15%)</title><rect x="793.6" y="213" width="1.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="796.58" y="223.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitea.GiteaApiAlg.AttachLabelReq]{type Out = K} (id 4839) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,942 Î¼s, 0.03%)</title><rect x="537.8" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="540.81" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;artifactIdBefore&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;artifactIdAfter&quot;)] :: shapeless.HNil,Option[String] :: String :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,979 Î¼s, 0.03%)</title><rect x="1160.7" y="165" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1163.72" y="175.5" ></text>
</g>
<g >
<title>shapeless.Lazy[shapeless.Generic[org.scalasteward.core.data.Version]{type Repr = R :: shapeless.HNil}] (id 2542) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (113,647 Î¼s, 1.84%)</title><rect x="1124.5" y="213" width="21.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1127.48" y="223.5" >s..</text>
</g>
<g >
<title>cats.Functor[G] (expanded macros 0)  (2,338 Î¼s, 0.04%)</title><rect x="152.6" y="229" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="155.62" y="239.5" ></text>
</g>
<g >
<title>io.circe.Decoder[String] (expanded macros 0)  (1,202 Î¼s, 0.02%)</title><rect x="345.1" y="229" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="348.12" y="239.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord[org.scalasteward.core.edit.scalafix.ScalafixMigrations]{type Out = D} (expanded macros 0)  (3,151 Î¼s, 0.05%)</title><rect x="1150.2" y="213" width="0.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1153.15" y="223.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.forge.data.PullRequestOut] (expanded macros 0)  (1,225 Î¼s, 0.02%)</title><rect x="333.6" y="229" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="336.57" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;labels&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;milestone&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: shapeless.HNil,Option[Vector[Int]] :: Option[Int] :: Option[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (9,094 Î¼s, 0.15%)</title><rect x="577.7" y="101" width="1.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="580.75" y="111.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;entryCreatedAt&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;number&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updateBranch&quot;)] :: shapeless.HNil,org.scalasteward.core.util.Timestamp :: Option[org.scalasteward.core.forge.data.PullRequestNumber] :: Option[org.scalasteward.core.git.Branch] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (7,727 Î¼s, 0.13%)</title><rect x="638.7" y="149" width="1.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="641.75" y="159.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucket.Reviewer]{type Repr = V} (expanded macros 3)   (1,637 Î¼s, 0.03%)</title><rect x="516.4" y="197" width="0.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="519.40" y="207.5" ></text>
</g>
<g >
<title>dependency.version.type =&gt; ?{def &gt; : ?} (expanded macros 0)  (639 Î¼s, 0.01%)</title><rect x="306.1" y="245" width="0.1" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="309.05" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;pattern&quot;)],String] :: Option[org.scalasteward.core.data.Resolver.Credentials] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)],Option[org.scalasteward.core.data.Resolver.Credentials]] :: List[org.scalasteward.core.data.Resolver.Header] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)],List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil]{type Out = F} (expanded macros 0)  (9,027 Î¼s, 0.15%)</title><rect x="981.3" y="149" width="1.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="984.34" y="159.5" ></text>
</g>
<g >
<title>shapeless.Lub[Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)],Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)],Lub0] (expanded macros 0)  (724 Î¼s, 0.01%)</title><rect x="1105.4" y="133" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1108.39" y="143.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (4,525 Î¼s, 0.07%)</title><rect x="551.1" y="165" width="0.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="554.08" y="175.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;links&quot;)] :: shapeless.HNil,String :: org.scalasteward.core.forge.data.PullRequestState :: scala.collection.immutable.Map[String,cats.data.NonEmptyList[org.scalasteward.core.forge.bitbucketserver.Json.Link]] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (4,160 Î¼s, 0.07%)</title><rect x="726.6" y="165" width="0.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="729.65" y="175.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.ReprAsObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;description&quot;)],String] :: Option[List[String]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;labels&quot;)],Option[List[String]]] :: Option[List[Int]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;assignee_ids&quot;)],Option[List[Int]]] :: Option[List[Int]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;reviewer_ids&quot;)],Option[List[Int]]] :: Long with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;target_project_id&quot;)],Long] :: Option[Boolean] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;remove_source_branch&quot;)],Option[Boolean]] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;source_branch&quot;)],String] :: org.scalasteward.core.git.Branch with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;target_branch&quot;)],org.scalasteward.core.git.Branch] :: shapeless.HNil] (id 5492) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveEncoder`)  (8,563 Î¼s, 0.14%)</title><rect x="886.3" y="197" width="1.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="889.33" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;labels&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;description&quot;)] :: shapeless.HNil,String :: Option[List[String]] :: String :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (4,684 Î¼s, 0.08%)</title><rect x="841.9" y="165" width="0.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="844.90" y="175.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;customLabels&quot;)]} (id 7546) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,142 Î¼s, 0.02%)</title><rect x="1040.9" y="149" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1043.87" y="159.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;key&quot;)]} (id 1665) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,113 Î¼s, 0.02%)</title><rect x="490.1" y="181" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="493.06" y="191.5" ></text>
</g>
<g >
<title>io.circe.Decoder[cats.data.NonEmptyList[org.scalasteward.core.data.Update.ForArtifactId]] (expanded macros 0)  (1,409 Î¼s, 0.02%)</title><rect x="682.6" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="685.58" y="191.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[Some[Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]]] :: Some[Option[List[String]]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)] :: shapeless.HNil]{type Out = OutT} (expanded macros 0)  (2,978 Î¼s, 0.05%)</title><rect x="1085.7" y="133" width="0.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1088.73" y="143.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;artifactIds&quot;)]} (id 2782) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,060 Î¼s, 0.02%)</title><rect x="696.8" y="165" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="699.82" y="175.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.data.Update.ForArtifactId]{type Repr = R} (expanded macros 0)  (37,033 Î¼s, 0.60%)</title><rect x="801.5" y="213" width="7.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="804.53" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (8,580 Î¼s, 0.14%)</title><rect x="1066.2" y="181" width="1.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1069.18" y="191.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucketserver.Json.Link]{type Out = K} (id 4019) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,235 Î¼s, 0.02%)</title><rect x="720.3" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="723.30" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitea.GiteaApiAlg.CreateIssueCommentOption]{type Out = K} (id 4771) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,641 Î¼s, 0.03%)</title><rect x="560.4" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="563.39" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;executionOrder&quot;)] :: shapeless.HNil,Option[org.scalasteward.core.edit.scalafix.ScalafixMigration.ExecutionOrder] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (2,631 Î¼s, 0.04%)</title><rect x="699.4" y="69" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="702.39" y="79.5" ></text>
</g>
<g >
<title>F[Unit] =&gt; ?{def &gt;&gt; : ?} (expanded macros 0)  (16,308 Î¼s, 0.26%)</title><rect x="94.2" y="245" width="3.1" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="97.16" y="255.5" ></text>
</g>
<g >
<title>cats.kernel.Semigroup[Option[org.scalasteward.core.repoconfig.RepoConfig]] (expanded macros 0)  (685 Î¼s, 0.01%)</title><rect x="294.9" y="245" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="297.89" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;entryCreatedAt&quot;)]} (id 6588) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,100 Î¼s, 0.02%)</title><rect x="638.9" y="133" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="641.95" y="143.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.repocache.RepoCache]] (id 6843) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (45,112 Î¼s, 0.73%)</title><rect x="649.4" y="245" width="8.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="652.37" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[Boolean]] (expanded macros 0)  (692 Î¼s, 0.01%)</title><rect x="1078.7" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1081.72" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;changes&quot;)]} (id 8847) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (563 Î¼s, 0.01%)</title><rect x="1171.6" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1174.64" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;updateBranch&quot;)] :: shapeless.HNil,Option[org.scalasteward.core.git.Branch] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (3,387 Î¼s, 0.05%)</title><rect x="639.6" y="117" width="0.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="642.58" y="127.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[String] (expanded macros 0)  (12,854 Î¼s, 0.21%)</title><rect x="273.8" y="245" width="2.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="276.85" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[shapeless.Generic[org.scalasteward.core.buildtool.sbt.data.SbtVersion]{type Repr = R :: shapeless.HNil}] (id 996) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (17,334 Î¼s, 0.28%)</title><rect x="1114.2" y="213" width="3.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1117.17" y="223.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.data.Resolver.MavenRepository]{type Repr = R} (expanded macros 0)  (1,354 Î¼s, 0.02%)</title><rect x="983.9" y="149" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="986.90" y="159.5" ></text>
</g>
<g >
<title>cats.Foldable[[+O]fs2.Stream[[x]fs2.Pure[x],O]] (expanded macros 0)   (5,334 Î¼s, 0.09%)</title><rect x="324.4" y="229" width="1.0" height="15.0" fill="rgb(220,80,80)" rx="2" ry="2" />
<text  x="327.42" y="239.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;maybeCrossName&quot;)],Option[String]] :: shapeless.HNil] (id 1395) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (8,778 Î¼s, 0.14%)</title><rect x="454.8" y="197" width="1.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="457.83" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (904 Î¼s, 0.01%)</title><rect x="1096.5" y="101" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1099.47" y="111.5" ></text>
</g>
<g >
<title>Ordering[org.scalasteward.core.data.Update.Single] (expanded macros 0)  (1,542 Î¼s, 0.03%)</title><rect x="175.9" y="245" width="0.3" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="178.91" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Resolver.IvyRepository]{type Repr = V} (id 2062) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (2,413 Î¼s, 0.04%)</title><rect x="971.4" y="133" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="974.42" y="143.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)]} (id 4561) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,297 Î¼s, 0.02%)</title><rect x="622.0" y="165" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="625.01" y="175.5" ></text>
</g>
<g >
<title>cats.kernel.PartialOrder[org.scalasteward.core.data.Version] (expanded macros 0)  (1,136 Î¼s, 0.02%)</title><rect x="403.3" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="406.32" y="239.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucketserver.Json.Link]{type Repr = V} (expanded macros 3)   (2,401 Î¼s, 0.04%)</title><rect x="720.5" y="197" width="0.5" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="723.54" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.bitbucketserver.Json.Link] (expanded macros 0)  (18,310 Î¼s, 0.30%)</title><rect x="719.5" y="229" width="3.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="722.54" y="239.5" ></text>
</g>
<g >
<title>cats.kernel.Order[(Int, String, String)] (expanded macros 0)  (3,772 Î¼s, 0.06%)</title><rect x="285.7" y="245" width="0.7" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="288.72" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;source_branch&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;target_branch&quot;)] :: shapeless.HNil,String :: org.scalasteward.core.git.Branch :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (3,796 Î¼s, 0.06%)</title><rect x="885.5" y="69" width="0.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="888.47" y="79.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (6,973 Î¼s, 0.11%)</title><rect x="1036.1" y="197" width="1.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1039.12" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;body&quot;)] :: shapeless.HNil,String :: shapeless.HNil]{type Out = R} (expanded macros 0)  (1,635 Î¼s, 0.03%)</title><rect x="535.3" y="197" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="538.27" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.data.Update.ForArtifactId] (expanded macros 0)  (47,472 Î¼s, 0.77%)</title><rect x="667.2" y="229" width="9.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="670.22" y="239.5" ></text>
</g>
<g >
<title>shapeless.Lub[Symbol with shapeless.tag.Tagged[String(&quot;artifactId&quot;)],Symbol with shapeless.tag.Tagged[_ &gt;: String(&quot;addToGitBlameIgnoreRevs&quot;) with String(&quot;commitMessage&quot;) with String(&quot;command&quot;) &lt;: String],Lub0] (expanded macros 0)  (878 Î¼s, 0.01%)</title><rect x="1015.3" y="181" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1018.26" y="191.5" ></text>
</g>
<g >
<title>cats.kernel.PartialOrder[org.scalasteward.core.data.Version] (expanded macros 0)  (1,080 Î¼s, 0.02%)</title><rect x="1185.7" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1188.69" y="239.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.codec.ReprAsObjectCodec[Option[Boolean] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;runAfterUpgrading&quot;)],Option[Boolean]] :: shapeless.HNil] (id 8139) (expanded macros 3) (tree from `io.circe.generic.extras.ConfigurableDeriver.deriveConfiguredCodec`)  (3,572 Î¼s, 0.06%)</title><rect x="1078.3" y="197" width="0.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1081.28" y="207.5" ></text>
</g>
<g >
<title>cats.Invariant[Option] (expanded macros 0)  (1,977 Î¼s, 0.03%)</title><rect x="242.5" y="245" width="0.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="245.48" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,109 Î¼s, 0.02%)</title><rect x="562.2" y="181" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="565.24" y="191.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucketserver.Json.Repo]{type Out = K} (id 4170) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (995 Î¼s, 0.02%)</title><rect x="733.2" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="736.23" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;failedAt&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;message&quot;)] :: shapeless.HNil,org.scalasteward.core.util.Timestamp :: String :: shapeless.HNil]{type Out = R} (expanded macros 0)  (3,190 Î¼s, 0.05%)</title><rect x="647.5" y="197" width="0.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="650.47" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[scala.collection.immutable.Map[String,cats.data.NonEmptyList[org.scalasteward.core.forge.bitbucketserver.Json.Link]]] (expanded macros 0)  (1,708 Î¼s, 0.03%)</title><rect x="728.9" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="731.88" y="191.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.data.Version] (expanded macros 0)  (1,799 Î¼s, 0.03%)</title><rect x="480.7" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="483.66" y="191.5" ></text>
</g>
<g >
<title>shapeless.Lazy[shapeless.Generic[org.scalasteward.core.buildtool.sbt.data.ScalaVersion]{type Repr = R :: shapeless.HNil}] (id 1007) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (6,805 Î¼s, 0.11%)</title><rect x="1118.7" y="213" width="1.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1121.69" y="223.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucketserver.Json.Reviewer]{type Repr = V} (id 4212) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (951 Î¼s, 0.02%)</title><rect x="526.4" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="529.42" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)] :: shapeless.HNil,Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]] :: Option[List[String]] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (5,457 Î¼s, 0.09%)</title><rect x="1095.6" y="133" width="1.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1098.60" y="143.5" ></text>
</g>
<g >
<title>cats.FlatMap[List] (expanded macros 0)  (7,656 Î¼s, 0.12%)</title><rect x="227.8" y="245" width="1.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="230.82" y="255.5" ></text>
</g>
<g >
<title>scala.math.Ordering[Int] (expanded macros 0)  (707 Î¼s, 0.01%)</title><rect x="416.3" y="245" width="0.1" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="419.27" y="255.5" ></text>
</g>
<g >
<title>cats.FlatMap[Option] (expanded macros 0)  (565 Î¼s, 0.01%)</title><rect x="410.6" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="413.58" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[List[org.scalasteward.core.edit.scalafix.ScalafixMigration] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;migrations&quot;)],List[org.scalasteward.core.edit.scalafix.ScalafixMigration]] :: shapeless.HNil]{type Out = F} (expanded macros 0)  (2,311 Î¼s, 0.04%)</title><rect x="1155.2" y="213" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1158.25" y="223.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.util.RecordToMap[List[org.scalasteward.core.repoconfig.UpdatePattern] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;pin&quot;)],List[org.scalasteward.core.repoconfig.UpdatePattern]] :: List[org.scalasteward.core.repoconfig.UpdatePattern] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;allow&quot;)],List[org.scalasteward.core.repoconfig.UpdatePattern]] :: List[org.scalasteward.core.repoconfig.UpdatePattern] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;allowPreReleases&quot;)],List[org.scalasteward.core.repoconfig.UpdatePattern]] :: List[org.scalasteward.core.repoconfig.UpdatePattern] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;ignore&quot;)],List[org.scalasteward.core.repoconfig.UpdatePattern]] :: Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)],Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]]] :: Option[List[String]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)],Option[List[String]]] :: shapeless.HNil] (expanded macros 0)  (9,300 Î¼s, 0.15%)</title><rect x="1082.3" y="213" width="1.8" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1085.33" y="223.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.nurture.PullRequestRepository.Entry]{type Repr = V} (expanded macros 3)   (2,261 Î¼s, 0.04%)</title><rect x="636.6" y="197" width="0.4" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="639.57" y="207.5" ></text>
</g>
<g >
<title>cats.effect.kernel.Sync[cats.effect.IO] (expanded macros 0)  (2,361 Î¼s, 0.04%)</title><rect x="270.7" y="245" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="273.73" y="255.5" ></text>
</g>
<g >
<title>String(&quot;ForGroupId&quot;) =&gt; ?{def -&gt; : ?} (expanded macros 0)  (838 Î¼s, 0.01%)</title><rect x="185.0" y="245" width="0.1" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="187.97" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;draft&quot;)]} (id 4974) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (842 Î¼s, 0.01%)</title><rect x="866.1" y="117" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="869.10" y="127.5" ></text>
</g>
<g >
<title>accu.type =&gt; ?{def pure: ?} (expanded macros 0)  (938 Î¼s, 0.02%)</title><rect x="208.4" y="245" width="0.2" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="211.41" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[Option[org.scalasteward.core.data.GroupId] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;groupIdBefore&quot;)],Option[org.scalasteward.core.data.GroupId]] :: org.scalasteward.core.data.GroupId with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;groupIdAfter&quot;)],org.scalasteward.core.data.GroupId] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;artifactIdBefore&quot;)],Option[String]] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;artifactIdAfter&quot;)],String] :: shapeless.HNil]{type Out = F} (expanded macros 0)  (18,799 Î¼s, 0.30%)</title><rect x="1164.0" y="213" width="3.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1166.97" y="223.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.VersionPattern]{type Out = K} (id 8491) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,127 Î¼s, 0.02%)</title><rect x="892.1" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="895.12" y="207.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.data.Version] (expanded macros 0)   (1,935 Î¼s, 0.03%)</title><rect x="446.8" y="149" width="0.4" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="449.79" y="159.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.git.Author] (expanded macros 0)  (1,270 Î¼s, 0.02%)</title><rect x="701.9" y="149" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="704.92" y="159.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;frequency&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;grouping&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;includeMatchedLabels&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;customLabels&quot;)] :: shapeless.HNil,Option[org.scalasteward.core.repoconfig.PullRequestFrequency] :: List[org.scalasteward.core.repoconfig.PullRequestGroup] :: Option[scala.util.matching.Regex] :: List[String] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (10,234 Î¼s, 0.17%)</title><rect x="1029.8" y="197" width="2.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1032.80" y="207.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.edit.scalafix.ScalafixMigrations] =&gt; ?{def map: ?} (expanded macros 0)  (1,133 Î¼s, 0.02%)</title><rect x="130.8" y="245" width="0.3" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="133.84" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)]} (id 2483) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,897 Î¼s, 0.03%)</title><rect x="688.3" y="149" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="691.26" y="159.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (1,879 Î¼s, 0.03%)</title><rect x="1102.4" y="133" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1105.42" y="143.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitea.GiteaApiAlg.CreateLabelReq]{type Out = K} (id 4822) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,965 Î¼s, 0.03%)</title><rect x="564.9" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="567.89" y="207.5" ></text>
</g>
<g >
<title>DependencyMetadata.this.scmUrl.type =&gt; ?{def filterA: ?} (expanded macros 0)  (961 Î¼s, 0.02%)</title><rect x="38.1" y="245" width="0.2" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="41.13" y="255.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.data.Resolver.MavenRepository]{type Repr = R} (expanded macros 0)  (1,308 Î¼s, 0.02%)</title><rect x="953.1" y="149" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="956.14" y="159.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;repository&quot;)] :: shapeless.HNil,org.scalasteward.core.forge.bitbucketserver.Json.Repository :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,437 Î¼s, 0.02%)</title><rect x="856.0" y="181" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="858.98" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.github.UpdatePullRequestPayload]{type Repr = V} (id 5371) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,001 Î¼s, 0.02%)</title><rect x="875.0" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="878.01" y="207.5" ></text>
</g>
<g >
<title>Array[String] =&gt; ?{def take: ?} (expanded macros 0)  (2,371 Î¼s, 0.04%)</title><rect x="25.4" y="245" width="0.4" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="28.38" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.repoconfig.GroupRepoConfig] (expanded macros 0)  (15,057 Î¼s, 0.24%)</title><rect x="658.6" y="229" width="2.9" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="661.59" y="239.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.data.ProcessResult] =&gt; ?{def flatMap: ?} (expanded macros 0)  (546 Î¼s, 0.01%)</title><rect x="129.6" y="245" width="0.1" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="132.61" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.repoconfig.BuildRootConfig] (expanded macros 0)  (894 Î¼s, 0.01%)</title><rect x="1062.4" y="149" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1065.43" y="159.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.ReprDecoder[org.http4s.Uri with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;href&quot;)],org.http4s.Uri] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],Option[String]] :: shapeless.HNil] (id 4028) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveDecoder`)  (4,457 Î¼s, 0.07%)</title><rect x="722.2" y="197" width="0.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="725.19" y="207.5" ></text>
</g>
<g >
<title>((com.monovore.decline.Opts[List[org.scalasteward.core.application.Cli.EnvVar]], com.monovore.decline.Opts[scala.concurrent.duration.FiniteDuration], com.monovore.decline.Opts[org.scalasteward.core.application.Config.SandboxCfg], com.monovore.decline.Opts[Int])) =&gt; ?{def mapN: ?} (expanded macros 0)  (1,966 Î¼s, 0.03%)</title><rect x="18.0" y="245" width="0.4" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="21.03" y="255.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy] (expanded macros 0)  (561 Î¼s, 0.01%)</title><rect x="406.6" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="409.64" y="239.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.forge.bitbucketserver.Json.Page[org.scalasteward.core.forge.bitbucketserver.Json.PR]] =&gt; ?{def map: ?} (expanded macros 0)  (1,361 Î¼s, 0.02%)</title><rect x="134.2" y="245" width="0.2" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="137.19" y="255.5" ></text>
</g>
<g >
<title>(=&gt; names.type) =&gt; ?{def mkString_: ?} (expanded macros 0)   (821 Î¼s, 0.01%)</title><rect x="23.1" y="245" width="0.2" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text  x="26.14" y="255.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.RefType[eu.timepit.refined.api.Refined] (expanded macros 0)  (1,147 Î¼s, 0.02%)</title><rect x="307.1" y="245" width="0.2" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="310.09" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;sha&quot;)]} (id 4641) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,596 Î¼s, 0.03%)</title><rect x="598.6" y="149" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="601.65" y="159.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;links&quot;)]} (id 4103) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (918 Î¼s, 0.01%)</title><rect x="727.2" y="117" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="730.21" y="127.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Long] (expanded macros 0)  (581 Î¼s, 0.01%)</title><rect x="633.7" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="636.69" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;values&quot;)] :: shapeless.HNil,cats.data.NonEmptyList[org.scalasteward.core.forge.bitbucketserver.Json.Branch] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (2,798 Î¼s, 0.05%)</title><rect x="710.2" y="197" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="713.19" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;target_branch&quot;)]} (id 5480) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,130 Î¼s, 0.02%)</title><rect x="885.9" y="37" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="888.89" y="47.5" ></text>
</g>
<g >
<title>io.circe.Encoder[List[String]] (expanded macros 0)  (703 Î¼s, 0.01%)</title><rect x="1100.3" y="165" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1103.28" y="175.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[None.type :: None.type :: None.type :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;groupIdAfter&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;artifactIdBefore&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;artifactIdAfter&quot;)] :: shapeless.HNil]{type Out = OutT} (expanded macros 0)  (937 Î¼s, 0.02%)</title><rect x="1157.5" y="181" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1160.49" y="191.5" ></text>
</g>
<g >
<title>cats.Functor[F] (expanded macros 0)  (22,519 Î¼s, 0.37%)</title><rect x="231.7" y="245" width="4.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="234.73" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.PullRequestsConfig]{type Repr = V} (id 7445) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,798 Î¼s, 0.03%)</title><rect x="1025.9" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1028.92" y="207.5" ></text>
</g>
<g >
<title>String(&quot;state_event&quot;) =&gt; ?{def -&gt; : ?} (expanded macros 0)  (651 Î¼s, 0.01%)</title><rect x="202.9" y="245" width="0.2" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="205.94" y="255.5" ></text>
</g>
<g >
<title>cats.effect.kernel.Async[cats.effect.IO] (expanded macros 0)  (39,713 Î¼s, 0.64%)</title><rect x="258.6" y="245" width="7.6" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="261.57" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.codec.ConfiguredAsObjectCodec[org.scalasteward.core.repoconfig.ScalafmtConfig]] (id 8118) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (24,115 Î¼s, 0.39%)</title><rect x="1074.9" y="245" width="4.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1077.90" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.codec.UnwrappedCodec[org.scalasteward.core.data.Version]] (id 2540) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (119,449 Î¼s, 1.94%)</title><rect x="1123.4" y="245" width="22.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1126.37" y="255.5" >s..</text>
</g>
<g >
<title>F[scala.collection.immutable.Map[org.scalasteward.core.data.Dependency,org.scalasteward.core.coursier.DependencyMetadata]] =&gt; ?{def map: ?} (expanded macros 0)  (844 Î¼s, 0.01%)</title><rect x="150.0" y="245" width="0.2" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="153.01" y="255.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[Option[org.scalasteward.core.repoconfig.VersionPattern]] (expanded macros 0)  (2,107 Î¼s, 0.03%)</title><rect x="1175.5" y="229" width="0.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1178.45" y="239.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.persistence.JsonKeyValueStore[F,org.scalasteward.core.coursier.VersionsCache.Key,org.scalasteward.core.coursier.VersionsCache.Value]] =&gt; ?{def map: ?} (expanded macros 0)  (3,996 Î¼s, 0.06%)</title><rect x="141.6" y="245" width="0.7" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="144.55" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[List[org.scalasteward.core.buildtool.mill.MillModule]] (expanded macros 0)  (4,663 Î¼s, 0.08%)</title><rect x="331.0" y="245" width="0.9" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="334.05" y="255.5" ></text>
</g>
<g >
<title>scala.reflect.ClassTag[String] (expanded macros 1)  (659 Î¼s, 0.01%)</title><rect x="416.6" y="245" width="0.1" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="419.57" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Resolver.IvyRepository]{type Repr = V} (id 1840) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (2,814 Î¼s, 0.05%)</title><rect x="937.9" y="133" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="940.90" y="143.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[Some[Option[List[String]]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)] :: shapeless.HNil]{type Out = OutT} (expanded macros 0)  (1,920 Î¼s, 0.03%)</title><rect x="1085.9" y="117" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1088.94" y="127.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.bitbucketserver.Json.Branches] (expanded macros 0)  (13,639 Î¼s, 0.22%)</title><rect x="708.8" y="229" width="2.6" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="711.81" y="239.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucket.DefaultReviewers]{type Repr = V} (id 3687) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,182 Î¼s, 0.02%)</title><rect x="512.8" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="515.76" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[List[org.scalasteward.core.repoconfig.UpdatePattern]] (expanded macros 0)  (2,165 Î¼s, 0.04%)</title><rect x="1098.1" y="181" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1101.06" y="191.5" ></text>
</g>
<g >
<title>String =&gt; Iterable[Char] (expanded macros 0)  (563 Î¼s, 0.01%)</title><rect x="308.2" y="197" width="0.1" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="311.15" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;addToGitBlameIgnoreRevs&quot;)] :: shapeless.HNil,Option[Boolean] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,186 Î¼s, 0.02%)</title><rect x="1011.3" y="133" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1014.31" y="143.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;filter&quot;)] :: shapeless.HNil,cats.data.NonEmptyList[org.scalasteward.core.repoconfig.PullRequestUpdateFilter] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,161 Î¼s, 0.02%)</title><rect x="889.9" y="165" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="892.88" y="175.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.github.InstallationOut]{type Out = K} (id 5303) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (720 Î¼s, 0.01%)</title><rect x="762.4" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="765.38" y="207.5" ></text>
</g>
<g >
<title>capped.length.type =&gt; ?{def === : ?} (expanded macros 0)  (570 Î¼s, 0.01%)</title><rect x="210.7" y="245" width="0.1" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="213.72" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.PullRequestsConfig]{type Out = K} (id 7459) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,571 Î¼s, 0.03%)</title><rect x="1028.7" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1031.74" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.decoding.ReprDecoder[List[org.scalasteward.core.edit.scalafix.ScalafixMigration] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;migrations&quot;)],List[org.scalasteward.core.edit.scalafix.ScalafixMigration]] :: shapeless.HNil]] (id 2863) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (5,925 Î¼s, 0.10%)</title><rect x="1153.7" y="213" width="1.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1156.66" y="223.5" ></text>
</g>
<g >
<title>buildRoot.relativePath.type =&gt; ?{def dropWhile: ?} (expanded macros 0)  (1,593 Î¼s, 0.03%)</title><rect x="209.0" y="245" width="0.3" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="212.00" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.codec.ConfiguredAsObjectCodec[org.scalasteward.core.repoconfig.PostUpdateHookConfig] (expanded macros 0)  (65,161 Î¼s, 1.06%)</title><rect x="1005.2" y="229" width="12.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1008.16" y="239.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.Validate[Char,eu.timepit.refined.boolean.And[eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less['a']],eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Greater['f']]]]{type R = RB} (expanded macros 0)  (12,413 Î¼s, 0.20%)</title><rect x="308.4" y="181" width="2.4" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="311.41" y="191.5" ></text>
</g>
<g >
<title>cats.Functor[F] (expanded macros 0)  (818 Î¼s, 0.01%)</title><rect x="71.0" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="73.99" y="239.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.data.Update.ForGroupId]{type Repr = R} (expanded macros 0)  (29,467 Î¼s, 0.48%)</title><rect x="813.8" y="213" width="5.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="816.85" y="223.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.github.TokenOut]] (id 5351) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (12,013 Î¼s, 0.19%)</title><rect x="785.5" y="245" width="2.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="788.50" y="255.5" ></text>
</g>
<g >
<title>cats.FunctorFilter[[+O]fs2.Stream[[x]fs2.Pure[x],O]] (expanded macros 0)  (549 Î¼s, 0.01%)</title><rect x="231.5" y="245" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="234.52" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;clone_url&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;default_branch&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;archived&quot;)] :: shapeless.HNil,org.http4s.Uri :: org.scalasteward.core.git.Branch :: Boolean :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (4,998 Î¼s, 0.08%)</title><rect x="756.2" y="149" width="1.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="759.23" y="159.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.update.artifact.ArtifactChanges]{type Repr = V} (expanded macros 3)   (1,817 Î¼s, 0.03%)</title><rect x="1169.9" y="197" width="0.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="1172.87" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;body&quot;)]} (id 4304) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (801 Î¼s, 0.01%)</title><rect x="535.4" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="538.39" y="191.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.UpdatePattern]{type Out = K} (id 8177) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (949 Î¼s, 0.02%)</title><rect x="662.4" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="665.43" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Version]{type Repr = R :: shapeless.HNil} (expanded macros 3)   (110,659 Î¼s, 1.79%)</title><rect x="1125.0" y="197" width="21.2" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="1128.05" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (2,270 Î¼s, 0.04%)</title><rect x="1162.4" y="197" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1165.44" y="207.5" ></text>
</g>
<g >
<title>F[cats.effect.kernel.Ref[F,Option[(K, Option[V])]]] =&gt; ?{def map: ?} (expanded macros 0)  (661 Î¼s, 0.01%)</title><rect x="125.9" y="245" width="0.1" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="128.88" y="255.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.nurture.PullRequestRepository.Entry] (expanded macros 0)   (1,296 Î¼s, 0.02%)</title><rect x="381.2" y="213" width="0.2" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="384.16" y="223.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitea.GiteaApiAlg.EditPullRequestOption]{type Out = K} (id 4707) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,522 Î¼s, 0.02%)</title><rect x="584.6" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="587.60" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucketserver.Json.Ref]{type Out = K} (id 4153) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,095 Î¼s, 0.02%)</title><rect x="854.5" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="857.47" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)] :: shapeless.HNil,Option[String] :: List[org.scalasteward.core.data.Update.ForArtifactId] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (6,687 Î¼s, 0.11%)</title><rect x="825.4" y="181" width="1.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="828.37" y="191.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.PullRequestGroup]{type Out = K} (id 7331) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (929 Î¼s, 0.02%)</title><rect x="793.8" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="796.79" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.gitea.GiteaApiAlg.User] (expanded macros 0)  (23,847 Î¼s, 0.39%)</title><rect x="629.3" y="229" width="4.6" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="632.32" y="239.5" ></text>
</g>
<g >
<title>cats.kernel.Order[(A, List[org.scalasteward.core.data.Resolver])] (expanded macros 0)  (1,960 Î¼s, 0.03%)</title><rect x="285.3" y="245" width="0.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="288.35" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[String] (expanded macros 0)  (541 Î¼s, 0.01%)</title><rect x="507.1" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="510.13" y="191.5" ></text>
</g>
<g >
<title>List[org.scalasteward.core.forge.github.Repository] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;repositories&quot;)],List[org.scalasteward.core.forge.github.Repository]] :: shapeless.HNil &lt;:&lt; (List[org.scalasteward.core.forge.github.Repository] :: shapeless.HNil) (expanded macros 0)  (44,353 Î¼s, 0.72%)</title><rect x="773.1" y="197" width="8.5" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="776.09" y="207.5" ></text>
</g>
<g >
<title>F[(A, org.http4s.Headers)] =&gt; ?{def map: ?} (expanded macros 0)  (1,445 Î¼s, 0.02%)</title><rect x="40.5" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="43.46" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[List[org.scalasteward.core.repoconfig.GroupRepoConfig] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)],List[org.scalasteward.core.repoconfig.GroupRepoConfig]] :: shapeless.HNil] (expanded macros 0)  (1,867 Î¼s, 0.03%)</title><rect x="1074.5" y="69" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1077.54" y="79.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.util.RecordToMap[Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;message&quot;)],Option[String]] :: shapeless.HNil] (expanded macros 0)  (878 Î¼s, 0.01%)</title><rect x="999.1" y="213" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1002.06" y="223.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[org.scalasteward.core.git.Sha1 with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;sha1&quot;)],org.scalasteward.core.git.Sha1] :: List[org.scalasteward.core.data.Scope[List[org.scalasteward.core.data.DependencyInfo]]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;dependencyInfos&quot;)],List[org.scalasteward.core.data.Scope[List[org.scalasteward.core.data.DependencyInfo]]]] :: Option[org.scalasteward.core.repoconfig.RepoConfig] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;maybeRepoConfig&quot;)],Option[org.scalasteward.core.repoconfig.RepoConfig]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;maybeRepoConfigParsingError&quot;)],Option[String]] :: shapeless.HNil]] (id 6860) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (22,430 Î¼s, 0.36%)</title><rect x="653.7" y="213" width="4.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="656.71" y="223.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitea.GiteaApiAlg.CreateIssueCommentOption]{type Repr = V} (expanded macros 3)   (2,439 Î¼s, 0.04%)</title><rect x="560.7" y="197" width="0.5" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="563.70" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Resolver]{type Repr = V} (id 2163) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (2,008 Î¼s, 0.03%)</title><rect x="919.3" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="922.34" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[List[Int]]] (expanded macros 0)  (1,032 Î¼s, 0.02%)</title><rect x="887.2" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="890.24" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (1,509 Î¼s, 0.02%)</title><rect x="1071.9" y="69" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1074.87" y="79.5" ></text>
</g>
<g >
<title>((String, String)) =&gt; org.http4s.Header.ToRaw (expanded macros 0)  (7,477 Î¼s, 0.12%)</title><rect x="14.8" y="245" width="1.4" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="17.76" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.forge.data.PullRequestState] (expanded macros 0)  (1,406 Î¼s, 0.02%)</title><rect x="728.6" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="731.61" y="191.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.github.Repository]{type Out = K} (id 5340) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (843 Î¼s, 0.01%)</title><rect x="784.2" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="787.20" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;newerArtifactId&quot;)] :: shapeless.HNil,Option[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (5,174 Î¼s, 0.08%)</title><rect x="807.6" y="149" width="1.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="810.63" y="159.5" ></text>
</g>
<g >
<title>io.circe.Encoder[List[String]] (expanded macros 0)  (1,668 Î¼s, 0.03%)</title><rect x="843.8" y="165" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="846.82" y="175.5" ></text>
</g>
<g >
<title>F[List[Option[(String, Int)]]] =&gt; ?{def map: ?} (expanded macros 0)  (769 Î¼s, 0.01%)</title><rect x="60.0" y="245" width="0.1" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="62.96" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;exact&quot;)]} (id 8499) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (540 Î¼s, 0.01%)</title><rect x="893.4" y="149" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="896.39" y="159.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.gitea.GiteaApiAlg.CreatePullRequestOption]{type Repr = R} (expanded macros 0)  (42,537 Î¼s, 0.69%)</title><rect x="571.4" y="213" width="8.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="574.35" y="223.5" ></text>
</g>
<g >
<title>cats.effect.kernel.GenConcurrent[[x]F[x],Throwable] (expanded macros 0)   (1,054 Î¼s, 0.02%)</title><rect x="322.8" y="213" width="0.2" height="15.0" fill="rgb(220,80,80)" rx="2" ry="2" />
<text  x="325.76" y="223.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.data.UserOut]{type Repr = R} (expanded macros 0)  (6,881 Î¼s, 0.11%)</title><rect x="759.8" y="213" width="1.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="762.80" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;allowPreReleases&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;ignore&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)] :: shapeless.HNil,List[org.scalasteward.core.repoconfig.UpdatePattern] :: List[org.scalasteward.core.repoconfig.UpdatePattern] :: Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]] :: Option[List[String]] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (9,888 Î¼s, 0.16%)</title><rect x="1090.4" y="165" width="1.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1093.36" y="175.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.github.RepositoriesOut]{type Repr = V} (expanded macros 3)   (1,199 Î¼s, 0.02%)</title><rect x="781.8" y="197" width="0.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="784.84" y="207.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.repoconfig.PullRequestsConfig]{type Repr = R} (expanded macros 0)   (20,795 Î¼s, 0.34%)</title><rect x="1024.4" y="213" width="4.0" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="1027.43" y="223.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[None.type :: None.type :: Some[List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;pattern&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil]{type Out = OutT} (expanded macros 0)  (2,091 Î¼s, 0.03%)</title><rect x="931.7" y="117" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="934.68" y="127.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.github.GitHubAssignees]{type Repr = V} (expanded macros 3)   (1,264 Î¼s, 0.02%)</title><rect x="868.9" y="197" width="0.2" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="871.89" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;authors&quot;)]} (id 2777) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,020 Î¼s, 0.02%)</title><rect x="698.9" y="85" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="701.86" y="95.5" ></text>
</g>
<g >
<title>Char('=') =&gt; String (expanded macros 0)   (29,761 Î¼s, 0.48%)</title><rect x="31.9" y="245" width="5.7" height="15.0" fill="rgb(234,100,100)" rx="2" ry="2" />
<text  x="34.92" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.buildtool.sbt.data.ScalaVersion] (expanded macros 0)  (2,435 Î¼s, 0.04%)</title><rect x="477.2" y="165" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="480.17" y="175.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = 'f'} (id 6033) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (544 Î¼s, 0.01%)</title><rect x="355.3" y="117" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="358.32" y="127.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.ArtifactId]{type Repr = V} (id 1387) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (2,418 Î¼s, 0.04%)</title><rect x="453.2" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="456.22" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[String] (expanded macros 0)  (601 Î¼s, 0.01%)</title><rect x="568.9" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="571.94" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;artifactId&quot;)],Option[String]] :: cats.data.NonEmptyList[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;command&quot;)],cats.data.NonEmptyList[String]] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;commitMessage&quot;)],String] :: Option[Boolean] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;addToGitBlameIgnoreRevs&quot;)],Option[Boolean]] :: shapeless.HNil] (expanded macros 0)  (4,695 Î¼s, 0.08%)</title><rect x="1016.7" y="197" width="0.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1019.73" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.forge.data.UpdateState] (expanded macros 0)  (11,725 Î¼s, 0.19%)</title><rect x="860.6" y="229" width="2.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="863.63" y="239.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.forge.bitbucketserver.Json.PR] =&gt; ?{def flatMap: ?} (expanded macros 0)  (1,726 Î¼s, 0.03%)</title><rect x="133.6" y="245" width="0.3" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="136.59" y="255.5" ></text>
</g>
<g >
<title>cats.kernel.Order[cats.data.NonEmptyList[org.scalasteward.core.data.Version]] (expanded macros 0)  (875 Î¼s, 0.01%)</title><rect x="288.7" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="291.66" y="239.5" ></text>
</g>
<g >
<title>cats.NotNull[java.util.regex.PatternSyntaxException] (expanded macros 0)  (570 Î¼s, 0.01%)</title><rect x="244.9" y="245" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="247.94" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[String]] (expanded macros 0)  (1,177 Î¼s, 0.02%)</title><rect x="558.3" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="561.33" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)]} (id 2117) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (920 Î¼s, 0.01%)</title><rect x="982.5" y="101" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="985.54" y="111.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repocache.RefreshErrorAlg.Entry]{type Repr = V} (expanded macros 3)   (1,310 Î¼s, 0.02%)</title><rect x="647.0" y="197" width="0.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="650.00" y="207.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[Option[String]] (expanded macros 0)  (788 Î¼s, 0.01%)</title><rect x="317.7" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="320.74" y="239.5" ></text>
</g>
<g >
<title>cats.kernel.Order[(org.scalasteward.core.data.GroupId, String, org.scalasteward.core.data.Version, cats.data.NonEmptyList[org.scalasteward.core.data.Version])] (expanded macros 0)  (2,987 Î¼s, 0.05%)</title><rect x="287.5" y="245" width="0.6" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="290.51" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[String] (expanded macros 0)  (683 Î¼s, 0.01%)</title><rect x="594.0" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="596.96" y="191.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;uuid&quot;)],String] :: shapeless.HNil]] (id 3725) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (4,440 Î¼s, 0.07%)</title><rect x="517.3" y="213" width="0.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="520.29" y="223.5" ></text>
</g>
<g >
<title>List[org.http4s.Uri] =&gt; ?{def flatTraverse: ?} (expanded macros 0)  (1,262 Î¼s, 0.02%)</title><rect x="169.7" y="245" width="0.2" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="172.68" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.data.Update.Grouped] (expanded macros 0)  (32,912 Î¼s, 0.53%)</title><rect x="684.1" y="229" width="6.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="687.09" y="239.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.forge.bitbucket.CreateComment] (expanded macros 0)  (1,468 Î¼s, 0.02%)</title><rect x="384.1" y="245" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="387.12" y="255.5" ></text>
</g>
<g >
<title>F[Option[String]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (3,801 Î¼s, 0.06%)</title><rect x="79.9" y="245" width="0.7" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="82.87" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.util.RecordToMap[List[org.scalasteward.core.repoconfig.UpdatePattern] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;allow&quot;)],List[org.scalasteward.core.repoconfig.UpdatePattern]] :: List[org.scalasteward.core.repoconfig.UpdatePattern] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;allowPreReleases&quot;)],List[org.scalasteward.core.repoconfig.UpdatePattern]] :: List[org.scalasteward.core.repoconfig.UpdatePattern] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;ignore&quot;)],List[org.scalasteward.core.repoconfig.UpdatePattern]] :: Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)],Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]]] :: Option[List[String]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)],Option[List[String]]] :: shapeless.HNil] (expanded macros 0)  (7,505 Î¼s, 0.12%)</title><rect x="1082.4" y="197" width="1.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1085.42" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)]} (id 4791) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,859 Î¼s, 0.03%)</title><rect x="550.7" y="165" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="553.72" y="175.5" ></text>
</g>
<g >
<title>shapeless.Lub[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)],Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)],Lub0] (expanded macros 0)  (1,077 Î¼s, 0.02%)</title><rect x="996.0" y="101" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="998.99" y="111.5" ></text>
</g>
<g >
<title>recurse.type =&gt; ?{def &gt;&gt; : ?} (expanded macros 0)  (1,740 Î¼s, 0.03%)</title><rect x="410.4" y="245" width="0.3" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="413.36" y="255.5" ></text>
</g>
<g >
<title>sbtCommands.type =&gt; ?{def mkString_(x$1: ? &gt;: String(&quot; (2,635 Î¼s, 0.04%)</title><rect x="413.8" y="245" width="0.5" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="416.81" y="255.5" ></text>
</g>
<g >
<title>info.dependency.groupId.type =&gt; ?{def === : ?} (expanded macros 0)  (1,458 Î¼s, 0.02%)</title><rect x="329.3" y="245" width="0.2" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="332.26" y="255.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.gitlab.MergeRequestPayload]{type Repr = R} (expanded macros 0)  (28,522 Î¼s, 0.46%)</title><rect x="880.7" y="213" width="5.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="883.74" y="223.5" ></text>
</g>
<g >
<title>F[Boolean] =&gt; ?{def flatMap: ?} (expanded macros 0)  (5,257 Î¼s, 0.09%)</title><rect x="53.2" y="245" width="1.0" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="56.21" y="255.5" ></text>
</g>
<g >
<title>Unit &lt;:&lt; Unit (expanded macros 0)  (8,197 Î¼s, 0.13%)</title><rect x="206.0" y="245" width="1.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="209.02" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.ReprAsObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;content&quot;)],String] :: shapeless.HNil]] (id 3433) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (3,540 Î¼s, 0.06%)</title><rect x="830.2" y="213" width="0.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="833.22" y="223.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.RepoConfig]{type Out = Labels} (id 7831) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,553 Î¼s, 0.03%)</title><rect x="1049.2" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1052.23" y="207.5" ></text>
</g>
<g >
<title>cats.FunctorFilter[cats.parse.Parser] (expanded macros 0)  (527 Î¼s, 0.01%)</title><rect x="231.6" y="245" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="234.63" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;color&quot;)]} (id 4829) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,650 Î¼s, 0.03%)</title><rect x="567.5" y="165" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="570.51" y="175.5" ></text>
</g>
<g >
<title>io.circe.Decoder[List[org.scalasteward.core.forge.bitbucket.Reviewer]] (expanded macros 0)  (2,191 Î¼s, 0.04%)</title><rect x="514.1" y="181" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="517.13" y="191.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.ReprDecoder[org.scalasteward.core.data.CrossDependency with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;crossDependency&quot;)],org.scalasteward.core.data.CrossDependency] :: cats.data.NonEmptyList[org.scalasteward.core.data.Version] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;newerVersions&quot;)],cats.data.NonEmptyList[org.scalasteward.core.data.Version]] :: Option[org.scalasteward.core.data.GroupId] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;newerGroupId&quot;)],Option[org.scalasteward.core.data.GroupId]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;newerArtifactId&quot;)],Option[String]] :: shapeless.HNil] (id 2366) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveDecoder`)  (16,758 Î¼s, 0.27%)</title><rect x="673.1" y="197" width="3.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="676.09" y="207.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[Option[String]] (expanded macros 0)  (880 Î¼s, 0.01%)</title><rect x="319.1" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="322.06" y="239.5" ></text>
</g>
<g >
<title>F[List[org.scalasteward.core.buildtool.BuildToolAlg[F]]] =&gt; ?{def map: ?} (expanded macros 0)  (1,298 Î¼s, 0.02%)</title><rect x="68.0" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="70.96" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;owner&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;archived&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;clone_url&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;default_branch&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;parent&quot;)] :: shapeless.HNil,Long :: org.scalasteward.core.forge.gitea.GiteaApiAlg.User :: String :: Boolean :: org.http4s.Uri :: String :: Option[org.scalasteward.core.forge.gitea.GiteaApiAlg.Repository] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (19,658 Î¼s, 0.32%)</title><rect x="621.8" y="181" width="3.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="624.76" y="191.5" ></text>
</g>
<g >
<title>F[(org.scalasteward.core.forge.data.Comment, org.scalasteward.core.git.Branch)] =&gt; ?{def flatMap: ?} (expanded macros 0)  (567 Î¼s, 0.01%)</title><rect x="50.6" y="245" width="0.1" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="53.59" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[org.scalasteward.core.buildtool.sbt.data.ScalaVersion]] (expanded macros 0)  (3,114 Î¼s, 0.05%)</title><rect x="477.0" y="181" width="0.6" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="480.04" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;pullRequests&quot;)]} (id 7629) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (575 Î¼s, 0.01%)</title><rect x="1053.3" y="165" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1056.31" y="175.5" ></text>
</g>
<g >
<title>io.circe.Encoder[String] (expanded macros 0)  (557 Î¼s, 0.01%)</title><rect x="856.8" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="859.77" y="191.5" ></text>
</g>
<g >
<title>F[Option[org.http4s.Uri]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (2,244 Î¼s, 0.04%)</title><rect x="83.2" y="245" width="0.4" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="86.19" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;content&quot;)] :: shapeless.HNil,org.scalasteward.core.forge.bitbucket.CommentContent :: shapeless.HNil]{type Out = R} (expanded macros 0)  (2,121 Î¼s, 0.03%)</title><rect x="509.4" y="197" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="512.39" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;artifactIdAfter&quot;)] :: shapeless.HNil,String :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,045 Î¼s, 0.02%)</title><rect x="1159.6" y="149" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1162.55" y="159.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.data.Dependency]{type Repr = R} (expanded macros 0)  (29,756 Î¼s, 0.48%)</title><rect x="468.2" y="213" width="5.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="471.16" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;allow&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;allowPreReleases&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;ignore&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (14,419 Î¼s, 0.23%)</title><rect x="1103.2" y="197" width="2.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1106.22" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Update.Grouped]{type Repr = V} (expanded macros 3)   (2,746 Î¼s, 0.04%)</title><rect x="685.7" y="197" width="0.5" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="688.69" y="207.5" ></text>
</g>
<g >
<title>F[ProcessBuilder] =&gt; ?{def flatMap: ?} (expanded macros 0)  (798 Î¼s, 0.01%)</title><rect x="88.2" y="245" width="0.2" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="91.23" y="255.5" ></text>
</g>
<g >
<title>F[(org.scalasteward.core.util.UrlChecker[F], Some[String])] =&gt; ?{def flatMap: ?} (expanded macros 0)  (3,797 Î¼s, 0.06%)</title><rect x="52.0" y="245" width="0.7" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="54.99" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: None.type :: None.type :: shapeless.HNil,List]{type Lub = Option[io.circe.generic.extras.JsonKey]} (expanded macros 0)  (3,019 Î¼s, 0.05%)</title><rect x="1162.3" y="213" width="0.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1165.30" y="223.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Resolver.IvyRepository]{type Out = Labels} (id 1876) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,808 Î¼s, 0.03%)</title><rect x="932.1" y="133" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="935.08" y="143.5" ></text>
</g>
<g >
<title>updates1.type =&gt; ?{def widen: ?} (expanded macros 0)  (650 Î¼s, 0.01%)</title><rect x="1176.9" y="245" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1179.92" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitea.GiteaApiAlg.Repository]{type Out = K} (id 4544) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (2,680 Î¼s, 0.04%)</title><rect x="619.4" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="622.38" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[String] (expanded macros 0)  (556 Î¼s, 0.01%)</title><rect x="615.7" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="618.68" y="191.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;maybeCrossName&quot;)],Option[String]] :: shapeless.HNil]] (id 1394) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (9,787 Î¼s, 0.16%)</title><rect x="454.6" y="213" width="1.9" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="457.64" y="223.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.forge.bitbucket.Reviewer] (expanded macros 0)  (1,427 Î¼s, 0.02%)</title><rect x="514.3" y="165" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="517.28" y="175.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;doc&quot;)]} (id 2779) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,511 Î¼s, 0.02%)</title><rect x="698.0" y="117" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="701.03" y="127.5" ></text>
</g>
<g >
<title>Ordering[A] (expanded macros 0)  (1,709 Î¼s, 0.03%)</title><rect x="174.6" y="245" width="0.3" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="177.58" y="255.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.forge.gitlab.MergeRequestOut] =&gt; ?{def flatMap: ?} (expanded macros 0)  (1,718 Î¼s, 0.03%)</title><rect x="139.1" y="245" width="0.3" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="142.10" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[String] (expanded macros 0)  (671 Î¼s, 0.01%)</title><rect x="533.1" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="536.11" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;number&quot;)]} (id 6587) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,172 Î¼s, 0.02%)</title><rect x="639.4" y="117" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="642.35" y="127.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;prefix&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;suffix&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;exact&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;contains&quot;)] :: shapeless.HNil,Option[String] :: Option[String] :: Option[String] :: Option[String] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (4,871 Î¼s, 0.08%)</title><rect x="892.9" y="197" width="0.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="895.86" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;location&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,String :: Option[org.scalasteward.core.data.Resolver.Credentials] :: List[org.scalasteward.core.data.Resolver.Header] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (5,514 Î¼s, 0.09%)</title><rect x="989.8" y="117" width="1.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="992.82" y="127.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.data.Resolver.IvyRepository]{type Repr = R} (expanded macros 0)  (17,500 Î¼s, 0.28%)</title><rect x="936.6" y="149" width="3.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="939.55" y="159.5" ></text>
</g>
<g >
<title>F[Vector[org.scalasteward.core.forge.gitea.GiteaApiAlg.PullRequestResp]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (1,409 Î¼s, 0.02%)</title><rect x="118.8" y="245" width="0.3" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="121.79" y="255.5" ></text>
</g>
<g >
<title>(=&gt; (Nothing, Nothing)) =&gt; Int (expanded macros 0)   (694 Î¼s, 0.01%)</title><rect x="21.1" y="245" width="0.1" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text  x="24.12" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.update.artifact.ArtifactChanges]{type Out = K} (id 8843) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (685 Î¼s, 0.01%)</title><rect x="1171.0" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1174.02" y="207.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.forge.data.Comment] =&gt; ?{def map: ?} (expanded macros 0)  (948 Î¼s, 0.02%)</title><rect x="134.9" y="245" width="0.2" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="137.89" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;artifactIds&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;newVersion&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;rewriteRules&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;doc&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;scalacOptions&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;authors&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;target&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;executionOrder&quot;)] :: shapeless.HNil,cats.data.NonEmptyList[String] :: org.scalasteward.core.data.Version :: cats.data.NonEmptyList[String] :: Option[String] :: Option[cats.data.NonEmptyList[String]] :: Option[cats.data.NonEmptyList[org.scalasteward.core.git.Author]] :: Option[org.scalasteward.core.edit.scalafix.ScalafixMigration.Target] :: Option[org.scalasteward.core.edit.scalafix.ScalafixMigration.ExecutionOrder] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (17,132 Î¼s, 0.28%)</title><rect x="696.6" y="181" width="3.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="699.61" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Resolver.MavenRepository]{type Repr = V} (expanded macros 3)   (3,505 Î¼s, 0.06%)</title><rect x="985.2" y="133" width="0.7" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="988.20" y="143.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.forge.bitbucketserver.Json.Condition] (expanded macros 0)  (1,467 Î¼s, 0.02%)</title><rect x="332.9" y="229" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="335.93" y="239.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[org.scalasteward.core.git.Sha1 with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)],org.scalasteward.core.git.Sha1] :: shapeless.HNil] (id 4594) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (7,117 Î¼s, 0.12%)</title><rect x="604.8" y="197" width="1.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="607.77" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (6,469 Î¼s, 0.10%)</title><rect x="1066.6" y="149" width="1.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1069.58" y="159.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.git.Sha1] (expanded macros 0)   (700 Î¼s, 0.01%)</title><rect x="606.0" y="165" width="0.1" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="608.98" y="175.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.PostUpdateHookConfig]{type Out = K} (id 7169) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,265 Î¼s, 0.02%)</title><rect x="1007.3" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1010.30" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;user&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;pass&quot;)],String] :: shapeless.HNil]] (id 1650) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (6,901 Î¼s, 0.11%)</title><rect x="485.2" y="213" width="1.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="488.20" y="223.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.forge.bitbucketserver.Json.Comment] (expanded macros 0)  (2,233 Î¼s, 0.04%)</title><rect x="366.8" y="245" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="369.84" y="255.5" ></text>
</g>
<g >
<title>F[(Unit, List[(org.scalasteward.core.data.Version, org.scalasteward.core.data.Dependency)], List[org.scalasteward.core.data.Resolver])] =&gt; ?{def flatMap: ?} (expanded macros 0)  (560 Î¼s, 0.01%)</title><rect x="46.1" y="245" width="0.1" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="49.12" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.util.Timestamp] (expanded macros 0)  (1,631 Î¼s, 0.03%)</title><rect x="645.2" y="181" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="648.24" y="191.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.data.Resolver.Header]] (id 1654) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (28,685 Î¼s, 0.47%)</title><rect x="486.5" y="245" width="5.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="489.53" y="255.5" ></text>
</g>
<g >
<title>scala.collection.immutable.LazyList[List[org.scalasteward.core.edit.update.data.VersionPosition]] =&gt; ?{def #:: : ?} (expanded macros 0)   (628 Î¼s, 0.01%)</title><rect x="415.8" y="245" width="0.1" height="15.0" fill="rgb(244,114,114)" rx="2" ry="2" />
<text  x="418.77" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)]} (id 7876) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (620 Î¼s, 0.01%)</title><rect x="1073.6" y="117" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1076.63" y="127.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitlab.ForkPayload]{type Repr = V} (id 5399) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,160 Î¼s, 0.02%)</title><rect x="877.9" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="880.86" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)]} (id 2119) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (852 Î¼s, 0.01%)</title><rect x="982.9" y="85" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="985.87" y="95.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;filter&quot;)] :: shapeless.HNil,Option[String] :: cats.data.NonEmptyList[org.scalasteward.core.repoconfig.PullRequestUpdateFilter] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (2,109 Î¼s, 0.03%)</title><rect x="795.0" y="181" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="797.97" y="191.5" ></text>
</g>
<g >
<title>List[String] =&gt; ?{def mkString_(x$1: ? &gt;: String(&quot;\n&quot;), x$2: ? &gt;: String(&quot;\n&quot;), x$3: ? &gt;: String(&quot;\n&quot;)): ?} (expanded macros 0)  (734 Î¼s, 0.01%)</title><rect x="168.5" y="245" width="0.2" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="171.53" y="255.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.forge.bitbucket.RepositoryResponse] =&gt; ?{def flatMap: ?} (expanded macros 0)  (2,223 Î¼s, 0.04%)</title><rect x="132.3" y="245" width="0.4" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="135.32" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.update.artifact.ArtifactChanges]{type Out = K} (id 8832) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (703 Î¼s, 0.01%)</title><rect x="1169.6" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1172.55" y="207.5" ></text>
</g>
<g >
<title>scala.collection.immutable.LazyList[A] =&gt; ?{def #:: : ?} (expanded macros 0)   (827 Î¼s, 0.01%)</title><rect x="415.6" y="245" width="0.2" height="15.0" fill="rgb(244,114,114)" rx="2" ry="2" />
<text  x="418.61" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;location&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,String :: String :: Option[org.scalasteward.core.data.Resolver.Credentials] :: List[org.scalasteward.core.data.Resolver.Header] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (8,320 Î¼s, 0.13%)</title><rect x="955.4" y="133" width="1.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="958.36" y="143.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy] (expanded macros 0)  (938 Î¼s, 0.02%)</title><rect x="1063.0" y="165" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1065.98" y="175.5" ></text>
</g>
<g >
<title>shapeless.Annotations[io.circe.generic.extras.JsonKey,org.scalasteward.core.update.artifact.ArtifactChange]{type Out = K} (id 8807) (expanded macros 3) (tree from `shapeless.AnnotationMacros.materializeVariableAnnotations`)  (790 Î¼s, 0.01%)</title><rect x="1157.2" y="213" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1160.17" y="223.5" ></text>
</g>
<g >
<title>cats.data.NonEmptyList[org.scalasteward.core.application.Cli.EnvVar] &lt;:&lt; cats.data.NonEmptyList[org.scalasteward.core.application.Cli.EnvVar] (expanded macros 0)  (11,269 Î¼s, 0.18%)</title><rect x="255.5" y="245" width="2.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="258.48" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;addToGitBlameIgnoreRevs&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (1,272 Î¼s, 0.02%)</title><rect x="1016.2" y="149" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1019.21" y="159.5" ></text>
</g>
<g >
<title>shapeless.ops.nat.ToInt['a'] (expanded macros 3)   (1,435 Î¼s, 0.02%)</title><rect x="310.5" y="117" width="0.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="313.51" y="127.5" ></text>
</g>
<g >
<title>a1.value.type =&gt; ?{def compare: ?} (expanded macros 0)  (1,427 Î¼s, 0.02%)</title><rect x="208.1" y="245" width="0.3" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="211.14" y="255.5" ></text>
</g>
<g >
<title>F[(org.typelevel.log4cats.SelfAwareStructuredLogger[F], org.scalasteward.core.io.FileAlg[[_]F[_]], org.scalasteward.core.application.ValidateRepoConfigContext[[_]F[_]])] =&gt; ?{def map: ?} (expanded macros 0)  (1,528 Î¼s, 0.02%)</title><rect x="52.7" y="245" width="0.3" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="55.71" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;migrations&quot;)] :: shapeless.HNil,List[org.scalasteward.core.edit.scalafix.ScalafixMigration] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (1,574 Î¼s, 0.03%)</title><rect x="1153.4" y="197" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1156.35" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;text&quot;)] :: shapeless.HNil,String :: shapeless.HNil]{type Out = R} (expanded macros 0)  (1,906 Î¼s, 0.03%)</title><rect x="520.6" y="197" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="523.56" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;scalacOptions&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;authors&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;target&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;executionOrder&quot;)] :: shapeless.HNil,Option[cats.data.NonEmptyList[String]] :: Option[cats.data.NonEmptyList[org.scalasteward.core.git.Author]] :: Option[org.scalasteward.core.edit.scalafix.ScalafixMigration.Target] :: Option[org.scalasteward.core.edit.scalafix.ScalafixMigration.ExecutionOrder] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (8,228 Î¼s, 0.13%)</title><rect x="698.3" y="117" width="1.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="701.32" y="127.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.forge.data.UpdateState]] (id 4464) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (15,003 Î¼s, 0.24%)</title><rect x="860.0" y="245" width="2.9" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="863.00" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil,List[String] :: List[String] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (6,152 Î¼s, 0.10%)</title><rect x="1054.9" y="85" width="1.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1057.87" y="95.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil,List[org.scalasteward.core.repoconfig.GroupRepoConfig] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (2,592 Î¼s, 0.04%)</title><rect x="1055.6" y="53" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1058.55" y="63.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)],Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy]] :: Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)],Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)],List[String]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)],List[String]] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)],List[org.scalasteward.core.repoconfig.GroupRepoConfig]] :: shapeless.HNil] (expanded macros 0)  (7,391 Î¼s, 0.12%)</title><rect x="1073.5" y="133" width="1.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1076.49" y="143.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.decoding.ConfiguredDecoder[org.scalasteward.core.data.Resolver.IvyRepository] (expanded macros 0)  (92,282 Î¼s, 1.50%)</title><rect x="930.4" y="165" width="17.6" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="933.37" y="175.5" ></text>
</g>
<g >
<title>PostUpdateHook.this.command.type =&gt; ?{def mkString_: ?} (expanded macros 0)   (2,393 Î¼s, 0.04%)</title><rect x="177.0" y="245" width="0.5" height="15.0" fill="rgb(248,120,120)" rx="2" ry="2" />
<text  x="180.05" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.forge.github.GitHubLabels] (expanded macros 0)  (1,381 Î¼s, 0.02%)</title><rect x="386.6" y="245" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="389.55" y="255.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.github.CreatePullRequestPayload]{type Repr = R} (expanded macros 0)  (13,106 Î¼s, 0.21%)</title><rect x="863.8" y="213" width="2.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="866.80" y="223.5" ></text>
</g>
<g >
<title>update.type =&gt; ?{def asJson: ?} (expanded macros 0)  (1,573 Î¼s, 0.03%)</title><rect x="1175.9" y="245" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1178.86" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.GroupRepoConfig]{type Repr = V} (id 7111) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (759 Î¼s, 0.01%)</title><rect x="659.4" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="662.38" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.VersionPattern]{type Repr = V} (expanded macros 3)   (1,367 Î¼s, 0.02%)</title><rect x="892.3" y="197" width="0.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="895.34" y="207.5" ></text>
</g>
<g >
<title>shapeless.Default[org.scalasteward.core.update.artifact.ArtifactChange]{type Out = Options} (id 8770) (expanded macros 3) (tree from `shapeless.DefaultMacros.materialize`)  (929 Î¼s, 0.02%)</title><rect x="1157.8" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1160.80" y="207.5" ></text>
</g>
<g >
<title>RunResults.this.results.type =&gt; ?{def separate: ?} (expanded macros 0)  (1,980 Î¼s, 0.03%)</title><rect x="177.7" y="245" width="0.3" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="180.65" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Resolver.MavenRepository]{type Out = K} (id 1715) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,648 Î¼s, 0.03%)</title><rect x="957.3" y="133" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="960.33" y="143.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.ReprAsObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;status&quot;)],String] :: shapeless.HNil] (id 3420) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveEncoder`)  (3,117 Î¼s, 0.05%)</title><rect x="833.1" y="197" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="836.11" y="207.5" ></text>
</g>
<g >
<title>F[(List[String], List[org.scalasteward.core.data.Dependency], List[org.scalasteward.core.data.Resolver])] =&gt; ?{def map: ?} (expanded macros 0)  (1,457 Î¼s, 0.02%)</title><rect x="41.2" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="44.16" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.repoconfig.UpdatePattern] (expanded macros 0)  (18,972 Î¼s, 0.31%)</title><rect x="662.1" y="229" width="3.7" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="665.13" y="239.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],Option[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;organization&quot;)],Option[String]] :: shapeless.HNil]] (id 4514) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (6,453 Î¼s, 0.10%)</title><rect x="557.5" y="213" width="1.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="560.53" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;target&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;executionOrder&quot;)] :: shapeless.HNil,Option[org.scalasteward.core.edit.scalafix.ScalafixMigration.Target] :: Option[org.scalasteward.core.edit.scalafix.ScalafixMigration.ExecutionOrder] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (4,365 Î¼s, 0.07%)</title><rect x="699.1" y="85" width="0.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="702.06" y="95.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.repoconfig.UpdatesConfig] (expanded macros 0)  (873 Î¼s, 0.01%)</title><rect x="1065.4" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1068.41" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;namespace&quot;)] :: shapeless.HNil,String :: String :: shapeless.HNil]{type Out = R} (expanded macros 0)  (2,989 Î¼s, 0.05%)</title><rect x="878.1" y="197" width="0.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="881.09" y="207.5" ></text>
</g>
<g >
<title>Char('/') =&gt; String (expanded macros 0)   (523 Î¼s, 0.01%)</title><rect x="30.3" y="245" width="0.1" height="15.0" fill="rgb(234,100,100)" rx="2" ry="2" />
<text  x="33.28" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;links&quot;)]} (id 4177) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (703 Î¼s, 0.01%)</title><rect x="734.6" y="165" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="737.56" y="175.5" ></text>
</g>
<g >
<title>v.alnumComponents.type =&gt; ?{def === : ?} (expanded macros 0)  (2,296 Î¼s, 0.04%)</title><rect x="1178.8" y="245" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1181.80" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[org.scalasteward.core.repoconfig.CommitsConfig with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;commits&quot;)],org.scalasteward.core.repoconfig.CommitsConfig] :: org.scalasteward.core.repoconfig.PullRequestsConfig with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;pullRequests&quot;)],org.scalasteward.core.repoconfig.PullRequestsConfig] :: org.scalasteward.core.repoconfig.ScalafmtConfig with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;scalafmt&quot;)],org.scalasteward.core.repoconfig.ScalafmtConfig] :: org.scalasteward.core.repoconfig.UpdatesConfig with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)],org.scalasteward.core.repoconfig.UpdatesConfig] :: Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)],Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]]] :: Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)],Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy]] :: Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)],Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)],List[String]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)],List[String]] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)],List[org.scalasteward.core.repoconfig.GroupRepoConfig]] :: shapeless.HNil]{type Out = F} (expanded macros 0)  (14,358 Î¼s, 0.23%)</title><rect x="1072.2" y="213" width="2.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1075.15" y="223.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.forge.bitbucketserver.Json.PR] =&gt; ?{def map: ?} (expanded macros 0)  (1,378 Î¼s, 0.02%)</title><rect x="133.9" y="245" width="0.3" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="136.92" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.gitea.GiteaApiAlg.CreateForkOption]] (id 4501) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (29,845 Î¼s, 0.48%)</title><rect x="553.0" y="245" width="5.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="556.05" y="255.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.forge.gitea.GiteaApiAlg.CommentResp] =&gt; ?{def map: ?} (expanded macros 0)  (1,434 Î¼s, 0.02%)</title><rect x="137.1" y="245" width="0.3" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="140.10" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (1,578 Î¼s, 0.03%)</title><rect x="944.1" y="101" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="947.09" y="111.5" ></text>
</g>
<g >
<title>shapeless.Lub[Symbol with shapeless.tag.Tagged[String(&quot;pattern&quot;)],Symbol with shapeless.tag.Tagged[_ &gt;: String(&quot;headers&quot;) with String(&quot;credentials&quot;) &lt;: String],Lub0] (expanded macros 0)  (1,873 Î¼s, 0.03%)</title><rect x="980.0" y="117" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="983.03" y="127.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;targetRefName&quot;)]} (id 3399) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (703 Î¼s, 0.01%)</title><rect x="841.8" y="165" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="844.76" y="175.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)]} (id 1769) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (879 Î¼s, 0.01%)</title><rect x="968.7" y="85" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="971.70" y="95.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.git.Sha1] (expanded macros 0)  (949 Î¼s, 0.02%)</title><rect x="657.8" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="660.82" y="191.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.ReprAsObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;body&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;head&quot;)],String] :: org.scalasteward.core.git.Branch with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;base&quot;)],org.scalasteward.core.git.Branch] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;draft&quot;)],Boolean] :: shapeless.HNil] (id 4981) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveEncoder`)  (4,750 Î¼s, 0.08%)</title><rect x="866.4" y="197" width="0.9" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="869.43" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.bitbucketserver.Json.Reviewer]] (id 4206) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (14,224 Î¼s, 0.23%)</title><rect x="524.9" y="245" width="2.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="527.88" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.repocache.RefreshErrorAlg.Entry]] (id 6800) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (19,417 Î¼s, 0.31%)</title><rect x="645.7" y="245" width="3.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="648.65" y="255.5" ></text>
</g>
<g >
<title>F[(Unit, String, String, String)] =&gt; ?{def flatMap: ?} (expanded macros 0)  (781 Î¼s, 0.01%)</title><rect x="46.7" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="49.72" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[org.scalasteward.core.forge.bitbucket.CommentContent with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;content&quot;)],org.scalasteward.core.forge.bitbucket.CommentContent] :: shapeless.HNil] (id 3636) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (3,289 Î¼s, 0.05%)</title><rect x="509.9" y="197" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="512.91" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.git.Branch] (expanded macros 0)  (1,723 Î¼s, 0.03%)</title><rect x="642.1" y="165" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="645.09" y="175.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;commits&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;pullRequests&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;scalafmt&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil,List]{type Lub = Symbol} (expanded macros 0)  (22,651 Î¼s, 0.37%)</title><rect x="1067.8" y="213" width="4.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1070.82" y="223.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.codec.ConfiguredAsObjectCodec[org.scalasteward.core.repoconfig.RepoConfig]] (id 7603) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (176,461 Î¼s, 2.86%)</title><rect x="1041.1" y="245" width="33.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1044.14" y="255.5" >sh..</text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.forge.github.InstallationOut] (expanded macros 0)  (1,464 Î¼s, 0.02%)</title><rect x="334.1" y="229" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="337.06" y="239.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[Boolean]] (expanded macros 0)  (590 Î¼s, 0.01%)</title><rect x="887.1" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="890.12" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;number&quot;)]} (id 4390) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (580 Î¼s, 0.01%)</title><rect x="750.2" y="149" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="753.15" y="159.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;message&quot;)]} (id 7090) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (624 Î¼s, 0.01%)</title><rect x="999.1" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1002.10" y="207.5" ></text>
</g>
<g >
<title>BuildToolDispatcher.this.allBuildTools.type =&gt; ?{def filterA: ?} (expanded macros 0)  (1,131 Î¼s, 0.02%)</title><rect x="29.9" y="245" width="0.2" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="32.88" y="255.5" ></text>
</g>
<g >
<title>F[Unit] =&gt; ?{def flatMap: ?} (expanded macros 0)  (37,636 Î¼s, 0.61%)</title><rect x="100.4" y="245" width="7.2" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="103.40" y="255.5" ></text>
</g>
<g >
<title>Array[String] =&gt; ?{def filter: ?} (expanded macros 0)  (4,652 Î¼s, 0.08%)</title><rect x="24.0" y="245" width="0.9" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="26.98" y="255.5" ></text>
</g>
<g >
<title>F[Long] =&gt; ?{def flatMap: ?} (expanded macros 0)  (2,124 Î¼s, 0.03%)</title><rect x="77.1" y="245" width="0.4" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="80.13" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucketserver.Json.Branch]{type Out = K} (id 3925) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,291 Î¼s, 0.02%)</title><rect x="704.9" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="707.88" y="207.5" ></text>
</g>
<g >
<title>v.type =&gt; ?{def &lt; : ?} (expanded macros 0)  (932 Î¼s, 0.02%)</title><rect x="1179.2" y="245" width="0.2" height="15.0" fill="rgb(83,231,83)" rx="2" ry="2" />
<text  x="1182.24" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[org.scalasteward.core.forge.bitbucketserver.Json.User with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;user&quot;)],org.scalasteward.core.forge.bitbucketserver.Json.User] :: shapeless.HNil] (id 4218) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (3,020 Î¼s, 0.05%)</title><rect x="527.0" y="197" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="530.02" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitea.GiteaApiAlg.AttachLabelReq]{type Repr = V} (id 4842) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (2,048 Î¼s, 0.03%)</title><rect x="539.1" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="542.06" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[List[A] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;values&quot;)],List[A]] :: shapeless.HNil]] (id 4086) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (3,164 Î¼s, 0.05%)</title><rect x="731.6" y="213" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="734.57" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;groupIdAfter&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;artifactIdBefore&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;artifactIdAfter&quot;)] :: shapeless.HNil,org.scalasteward.core.data.GroupId :: Option[String] :: String :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (2,663 Î¼s, 0.04%)</title><rect x="1160.6" y="181" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1163.59" y="191.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.data.Comment]{type Out = K} (id 4298) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (908 Î¼s, 0.01%)</title><rect x="534.5" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="537.53" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.forge.bitbucketserver.Json.NewPR]] (id 4032) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (47,343 Î¼s, 0.77%)</title><rect x="844.4" y="245" width="9.0" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="847.36" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;ignore&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)] :: shapeless.HNil,List[org.scalasteward.core.repoconfig.UpdatePattern] :: Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]] :: Option[List[String]] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (7,613 Î¼s, 0.12%)</title><rect x="1090.8" y="149" width="1.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1093.79" y="159.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;latestCommit&quot;)]} (id 3932) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (810 Î¼s, 0.01%)</title><rect x="706.6" y="165" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="709.61" y="175.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Scope[A]]{type Repr = V} (expanded macros 3)   (8,263 Î¼s, 0.13%)</title><rect x="496.2" y="197" width="1.6" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="499.20" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[List[String]]] (expanded macros 0)  (2,475 Î¼s, 0.04%)</title><rect x="843.7" y="181" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="846.67" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;owner&quot;)]} (id 4560) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,416 Î¼s, 0.02%)</title><rect x="622.5" y="149" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="625.50" y="159.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.update.artifact.ArtifactChanges]{type Repr = R} (expanded macros 0)  (753 Î¼s, 0.01%)</title><rect x="1169.2" y="213" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1172.17" y="223.5" ></text>
</g>
<g >
<title>io.circe.Encoder[List[String]] (expanded macros 0)  (1,689 Î¼s, 0.03%)</title><rect x="873.4" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="876.35" y="191.5" ></text>
</g>
<g >
<title>io.circe.Encoder[List[String]] (expanded macros 0)  (1,502 Î¼s, 0.02%)</title><rect x="377.9" y="245" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="380.94" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)]} (id 5548) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (641 Î¼s, 0.01%)</title><rect x="741.1" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="744.10" y="191.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.Resolver] (expanded macros 0)  (4,833 Î¼s, 0.08%)</title><rect x="359.9" y="245" width="0.9" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="362.86" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (1,652 Î¼s, 0.03%)</title><rect x="946.2" y="101" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="949.17" y="111.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.data.Update] (expanded macros 0)   (590 Î¼s, 0.01%)</title><rect x="642.6" y="165" width="0.1" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="645.60" y="175.5" ></text>
</g>
<g >
<title>millBuildVersion.type =&gt; ?{def toSeq: ?} (expanded macros 0)  (854 Î¼s, 0.01%)</title><rect x="391.4" y="245" width="0.1" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="394.38" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.util.RecordToMap[List[org.scalasteward.core.repoconfig.GroupRepoConfig] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)],List[org.scalasteward.core.repoconfig.GroupRepoConfig]] :: shapeless.HNil] (expanded macros 0)  (1,183 Î¼s, 0.02%)</title><rect x="1046.0" y="69" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1048.96" y="79.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.bitbucketserver.Json.Branch]] (id 3922) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (22,829 Î¼s, 0.37%)</title><rect x="703.6" y="245" width="4.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="706.62" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.data.DependencyInfo] (expanded macros 0)  (34,425 Î¼s, 0.56%)</title><rect x="458.0" y="229" width="6.6" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="461.04" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;values&quot;)] :: shapeless.HNil,List[A] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (2,085 Î¼s, 0.03%)</title><rect x="731.2" y="197" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="734.17" y="207.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[shapeless.HNil,shapeless.HNil]{type Out = OutT} (expanded macros 0)  (899 Î¼s, 0.01%)</title><rect x="1086.1" y="101" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1089.13" y="111.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.RepoConfig]{type Out = K} (id 7608) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,964 Î¼s, 0.03%)</title><rect x="1051.1" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1054.11" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.edit.scalafix.ScalafixMigrations]{type Repr = V} (expanded macros 3)   (1,249 Î¼s, 0.02%)</title><rect x="1152.9" y="197" width="0.2" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="1155.89" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.github.GitHubAssignees]{type Repr = V} (id 5258) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,170 Î¼s, 0.02%)</title><rect x="869.1" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="872.13" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (5,877 Î¼s, 0.10%)</title><rect x="1071.0" y="101" width="1.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1074.03" y="111.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[Boolean]] (expanded macros 0)  (597 Î¼s, 0.01%)</title><rect x="1078.9" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1081.85" y="191.5" ></text>
</g>
<g >
<title>F[Vector[org.scalasteward.core.forge.gitea.GiteaApiAlg.Label]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (2,240 Î¼s, 0.04%)</title><rect x="118.4" y="245" width="0.4" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="121.36" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: shapeless.HNil,Option[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,938 Î¼s, 0.03%)</title><rect x="721.6" y="181" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="724.60" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucketserver.Json.Page[A]]{type Repr = V} (id 4081) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,195 Î¼s, 0.02%)</title><rect x="730.9" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="733.95" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: shapeless.HNil,List]{type Lub = Option[io.circe.generic.extras.JsonKey]} (expanded macros 0)  (819 Î¼s, 0.01%)</title><rect x="1172.5" y="213" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1175.54" y="223.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.UpdatesConfig]{type Repr = V} (id 8258) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,965 Î¼s, 0.03%)</title><rect x="1093.5" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1096.47" y="207.5" ></text>
</g>
<g >
<title>cats.FlatMap[F] (expanded macros 0)  (873 Î¼s, 0.01%)</title><rect x="90.8" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="93.76" y="239.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[Option[org.http4s.Uri.Host]] (expanded macros 0)  (1,905 Î¼s, 0.03%)</title><rect x="272.9" y="245" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="275.88" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.nat.ToInt[shapeless._0] (expanded macros 3)  (25,337 Î¼s, 0.41%)</title><rect x="162.8" y="197" width="4.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="165.84" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucketserver.Json.Condition]{type Out = K} (id 3990) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,143 Î¼s, 0.02%)</title><rect x="712.8" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="715.76" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[List[String]] (expanded macros 0)  (1,067 Î¼s, 0.02%)</title><rect x="1033.2" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1036.19" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)]} (id 7625) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (700 Î¼s, 0.01%)</title><rect x="1054.4" y="101" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1057.45" y="111.5" ></text>
</g>
<g >
<title>NurtureAlg.this.logger.type =&gt; ?{def attemptWarn: ?} (expanded macros 0)  (706 Î¼s, 0.01%)</title><rect x="172.0" y="245" width="0.1" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="174.96" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)]} (id 1847) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,277 Î¼s, 0.02%)</title><rect x="939.2" y="85" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="942.19" y="95.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;IvyRepository&quot;)]} (id 2168) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,304 Î¼s, 0.02%)</title><rect x="919.9" y="181" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="922.91" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)] :: shapeless.HNil,String :: shapeless.HNil]{type Out = R} (expanded macros 0)  (4,038 Î¼s, 0.07%)</title><rect x="585.6" y="197" width="0.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="588.61" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.forge.bitbucket.Page[org.scalasteward.core.forge.data.PullRequestOut]] (expanded macros 0)  (2,975 Î¼s, 0.05%)</title><rect x="362.9" y="245" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="365.86" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.ReprDecoder[org.scalasteward.core.forge.data.PullRequestNumber with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)],org.scalasteward.core.forge.data.PullRequestNumber] :: Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;version&quot;)],Int] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)],String] :: org.scalasteward.core.forge.data.PullRequestState with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)],org.scalasteward.core.forge.data.PullRequestState] :: scala.collection.immutable.Map[String,cats.data.NonEmptyList[org.scalasteward.core.forge.bitbucketserver.Json.Link]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;links&quot;)],scala.collection.immutable.Map[String,cats.data.NonEmptyList[org.scalasteward.core.forge.bitbucketserver.Json.Link]]] :: shapeless.HNil] (id 4110) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveDecoder`)  (8,492 Î¼s, 0.14%)</title><rect x="727.6" y="197" width="1.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="730.58" y="207.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.RefType[F] (expanded macros 0)   (1,166 Î¼s, 0.02%)</title><rect x="24.7" y="229" width="0.2" height="15.0" fill="rgb(236,103,103)" rx="2" ry="2" />
<text  x="27.65" y="239.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[Vector[Int] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;labels&quot;)],Vector[Int]] :: shapeless.HNil] (id 4848) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (5,322 Î¼s, 0.09%)</title><rect x="540.6" y="197" width="1.0" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="543.55" y="207.5" ></text>
</g>
<g >
<title>((Nothing, Nothing)) =&gt; Iterable[Char] (expanded macros 0)   (738 Î¼s, 0.01%)</title><rect x="12.1" y="245" width="0.1" height="15.0" fill="rgb(241,111,111)" rx="2" ry="2" />
<text  x="15.09" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.UpdatesConfig]{type Out = K} (id 8257) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,831 Î¼s, 0.03%)</title><rect x="1092.7" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1095.70" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Long] (expanded macros 0)  (631 Î¼s, 0.01%)</title><rect x="552.7" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="555.68" y="191.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[cats.data.NonEmptyList[org.scalasteward.core.git.Author]]] (expanded macros 0)  (2,278 Î¼s, 0.04%)</title><rect x="701.7" y="181" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="704.73" y="191.5" ></text>
</g>
<g >
<title>F[Option[(K, Option[V])]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (1,128 Î¼s, 0.02%)</title><rect x="78.8" y="245" width="0.2" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="81.77" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[List[A]] (expanded macros 0)  (2,646 Î¼s, 0.04%)</title><rect x="330.5" y="245" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="333.54" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[Option[org.scalasteward.core.data.GroupId] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;groupId&quot;)],Option[org.scalasteward.core.data.GroupId]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;artifactId&quot;)],Option[String]] :: cats.data.NonEmptyList[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;command&quot;)],cats.data.NonEmptyList[String]] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;commitMessage&quot;)],String] :: Option[Boolean] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;addToGitBlameIgnoreRevs&quot;)],Option[Boolean]] :: shapeless.HNil]{type Out = F} (expanded macros 0)  (6,157 Î¼s, 0.10%)</title><rect x="1016.5" y="213" width="1.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1019.45" y="223.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.update.artifact.ArtifactChange]{type Out = K} (id 8718) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (683 Î¼s, 0.01%)</title><rect x="1158.5" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1161.54" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.data.PullRequestOut]{type Repr = V} (expanded macros 3)   (2,093 Î¼s, 0.03%)</title><rect x="748.8" y="197" width="0.4" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="751.84" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Resolver.IvyRepository]{type Out = K} (id 1822) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,840 Î¼s, 0.03%)</title><rect x="933.4" y="133" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="936.42" y="143.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.ReprDecoder[org.scalasteward.core.git.Branch with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;displayId&quot;)],org.scalasteward.core.git.Branch] :: org.scalasteward.core.git.Sha1 with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;latestCommit&quot;)],org.scalasteward.core.git.Sha1] :: shapeless.HNil] (id 3936) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveDecoder`)  (5,566 Î¼s, 0.09%)</title><rect x="706.9" y="197" width="1.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="709.92" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.ReprDecoder[cats.data.NonEmptyList[org.scalasteward.core.forge.bitbucketserver.Json.Branch] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;values&quot;)],cats.data.NonEmptyList[org.scalasteward.core.forge.bitbucketserver.Json.Branch]] :: shapeless.HNil] (id 3967) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveDecoder`)  (2,945 Î¼s, 0.05%)</title><rect x="710.9" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="713.86" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.forge.bitbucketserver.Json.PR] (expanded macros 0)  (3,654 Î¼s, 0.06%)</title><rect x="367.3" y="245" width="0.7" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="370.26" y="255.5" ></text>
</g>
<g >
<title>x$2.type =&gt; ?{def nonEmpty: ?} (expanded macros 0)  (984 Î¼s, 0.02%)</title><rect x="1184.0" y="245" width="0.2" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="1186.99" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.RepoConfig]{type Repr = V} (id 7609) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (3,502 Î¼s, 0.06%)</title><rect x="1052.0" y="197" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1054.97" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.azurerepos.AzureComment]{type Out = K} (id 3427) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,065 Î¼s, 0.02%)</title><rect x="829.1" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="832.14" y="207.5" ></text>
</g>
<g >
<title>shapeless.Annotations[io.circe.generic.extras.JsonKey,org.scalasteward.core.repoconfig.PullRequestsConfig]{type Out = K} (id 7567) (expanded macros 3) (tree from `shapeless.AnnotationMacros.materializeVariableAnnotations`)  (1,626 Î¼s, 0.03%)</title><rect x="1021.4" y="213" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1024.44" y="223.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;namespace&quot;)]} (id 5403) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (751 Î¼s, 0.01%)</title><rect x="878.4" y="165" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="881.45" y="175.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[String] (expanded macros 0)  (894 Î¼s, 0.01%)</title><rect x="1185.0" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1188.04" y="239.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;groupId&quot;)]} (id 1473) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,459 Î¼s, 0.02%)</title><rect x="471.3" y="181" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="474.32" y="191.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.bitbucketserver.Json.Ref]{type Repr = R} (expanded macros 0)  (10,911 Î¼s, 0.18%)</title><rect x="854.2" y="213" width="2.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="857.16" y="223.5" ></text>
</g>
<g >
<title>io.circe.Decoder[List[org.scalasteward.core.repoconfig.PullRequestGroup]] (expanded macros 0)  (2,169 Î¼s, 0.04%)</title><rect x="1033.4" y="181" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1036.39" y="191.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[org.scalasteward.core.util.Timestamp with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;failedAt&quot;)],org.scalasteward.core.util.Timestamp] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;message&quot;)],String] :: shapeless.HNil] (id 6814) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (6,219 Î¼s, 0.10%)</title><rect x="648.2" y="197" width="1.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="651.18" y="207.5" ></text>
</g>
<g >
<title>F[((org.scalasteward.core.forge.data.RepoOut, org.scalasteward.core.forge.data.BranchOut), Option[org.scalasteward.core.repocache.RepoCache])] =&gt; ?{def flatMap: ?} (expanded macros 0)  (547 Î¼s, 0.01%)</title><rect x="40.4" y="245" width="0.1" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="43.36" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.util.RecordToMap[List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)],List[String]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)],List[String]] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)],List[org.scalasteward.core.repoconfig.GroupRepoConfig]] :: shapeless.HNil] (expanded macros 0)  (3,131 Î¼s, 0.05%)</title><rect x="1045.8" y="101" width="0.6" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1048.83" y="111.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.gitea.GiteaApiAlg.Label]{type Repr = R} (expanded macros 0)  (22,090 Î¼s, 0.36%)</title><rect x="588.4" y="213" width="4.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="591.35" y="223.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)]} (id 5261) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (786 Î¼s, 0.01%)</title><rect x="869.6" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="872.55" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (9,228 Î¼s, 0.15%)</title><rect x="1101.0" y="197" width="1.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1104.02" y="207.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.repoconfig.UpdatesConfig]{type Repr = R} (expanded macros 0)   (25,527 Î¼s, 0.41%)</title><rect x="1087.4" y="213" width="4.9" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="1090.37" y="223.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Resolver.MavenRepository]{type Out = K} (id 1698) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,968 Î¼s, 0.03%)</title><rect x="953.7" y="133" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="956.74" y="143.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (928 Î¼s, 0.02%)</title><rect x="586.2" y="181" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="589.21" y="191.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.decoding.ReprDecoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;pattern&quot;)],String] :: Option[org.scalasteward.core.data.Resolver.Credentials] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)],Option[org.scalasteward.core.data.Resolver.Credentials]] :: List[org.scalasteward.core.data.Resolver.Header] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)],List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil] (id 1852) (expanded macros 3) (tree from `io.circe.generic.extras.ConfigurableDeriver.deriveConfiguredDecoder`)  (15,986 Î¼s, 0.26%)</title><rect x="940.1" y="133" width="3.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="943.11" y="143.5" ></text>
</g>
<g >
<title>io.circe.Decoder[scala.collection.immutable.Map[String,cats.data.NonEmptyList[org.scalasteward.core.forge.bitbucketserver.Json.Link]]] (expanded macros 0)  (1,397 Î¼s, 0.02%)</title><rect x="735.3" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="738.32" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)],List[String]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)],List[String]] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)],List[org.scalasteward.core.repoconfig.GroupRepoConfig]] :: shapeless.HNil] (expanded macros 0)  (4,632 Î¼s, 0.08%)</title><rect x="1074.0" y="101" width="0.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1077.01" y="111.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;commit&quot;)]} (id 4272) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (826 Î¼s, 0.01%)</title><rect x="738.0" y="165" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="741.01" y="175.5" ></text>
</g>
<g >
<title>cats.data.NonEmptyList[String] &lt;:&lt; cats.data.NonEmptyList[String] (expanded macros 0)  (1,346 Î¼s, 0.02%)</title><rect x="253.0" y="245" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="256.04" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (2,849 Î¼s, 0.05%)</title><rect x="966.8" y="101" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="969.79" y="111.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.forge.azurerepos.AzureComment]] (id 3422) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (15,132 Î¼s, 0.25%)</title><rect x="828.0" y="245" width="2.9" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="831.00" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[String] (expanded macros 0)  (561 Î¼s, 0.01%)</title><rect x="517.9" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="520.94" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucketserver.Json.User]{type Repr = V} (expanded macros 3)   (4,194 Î¼s, 0.07%)</title><rect x="529.9" y="197" width="0.8" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="532.89" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;toRef&quot;)]} (id 4051) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (858 Î¼s, 0.01%)</title><rect x="850.8" y="85" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="853.84" y="95.5" ></text>
</g>
<g >
<title>org.http4s.Header.Raw =&gt; org.http4s.Header.ToRaw (expanded macros 0)  (6,616 Î¼s, 0.11%)</title><rect x="393.8" y="245" width="1.3" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="396.80" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)],Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)],List[String]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)],List[String]] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)],List[org.scalasteward.core.repoconfig.GroupRepoConfig]] :: shapeless.HNil] (expanded macros 0)  (6,027 Î¼s, 0.10%)</title><rect x="1073.7" y="117" width="1.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1076.75" y="127.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.data.UpdateState]{type Repr = R} (expanded macros 0)  (7,360 Î¼s, 0.12%)</title><rect x="860.7" y="213" width="1.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="863.72" y="223.5" ></text>
</g>
<g >
<title>F[List[org.scalasteward.core.forge.github.RepositoriesOut]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (1,341 Î¼s, 0.02%)</title><rect x="75.6" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="78.58" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.codec.ReprAsObjectCodec[Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;message&quot;)],Option[String]] :: shapeless.HNil] (id 7079) (expanded macros 3) (tree from `io.circe.generic.extras.ConfigurableDeriver.deriveConfiguredCodec`)  (4,102 Î¼s, 0.07%)</title><rect x="1001.8" y="197" width="0.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1004.79" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;token&quot;)]} (id 5360) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (709 Î¼s, 0.01%)</title><rect x="787.1" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="790.09" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;version&quot;)]} (id 4106) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (591 Î¼s, 0.01%)</title><rect x="726.5" y="165" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="729.53" y="175.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;filesContainingVersion&quot;)]} (id 1599) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,417 Î¼s, 0.02%)</title><rect x="460.7" y="165" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="463.72" y="175.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;version&quot;)]} (id 8185) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (685 Î¼s, 0.01%)</title><rect x="663.8" y="149" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="666.82" y="159.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.forge.github.UpdatePullRequestPayload] (expanded macros 0)  (1,258 Î¼s, 0.02%)</title><rect x="387.1" y="245" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="390.07" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.DependencyInfo]{type Repr = V} (expanded macros 3)   (2,406 Î¼s, 0.04%)</title><rect x="459.2" y="197" width="0.5" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="462.21" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[List[org.scalasteward.core.forge.github.Repository]] (expanded macros 0)  (1,934 Î¼s, 0.03%)</title><rect x="783.1" y="181" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="786.09" y="191.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.git.Branch] =&gt; ?{def map: ?} (expanded macros 0)  (1,599 Î¼s, 0.03%)</title><rect x="140.7" y="245" width="0.4" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="143.75" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Resolver.IvyRepository]{type Repr = V} (expanded macros 3)   (2,395 Î¼s, 0.04%)</title><rect x="971.0" y="133" width="0.4" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="973.96" y="143.5" ></text>
</g>
<g >
<title>shapeless.Default[org.scalasteward.core.edit.scalafix.ScalafixMigrations]{type Out = Options} (id 2876) (expanded macros 3) (tree from `shapeless.DefaultMacros.materialize`)  (1,041 Î¼s, 0.02%)</title><rect x="1150.6" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1153.56" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,162 Î¼s, 0.02%)</title><rect x="540.2" y="181" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="543.20" y="191.5" ></text>
</g>
<g >
<title>cats.kernel.Monoid[List[org.scalasteward.core.edit.update.data.VersionPosition]] (expanded macros 0)  (1,415 Î¼s, 0.02%)</title><rect x="280.8" y="245" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="283.78" y="255.5" ></text>
</g>
<g >
<title>cats.Functor[F] (expanded macros 0)  (660 Î¼s, 0.01%)</title><rect x="72.1" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="75.13" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;commitMessage&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;addToGitBlameIgnoreRevs&quot;)] :: shapeless.HNil,String :: Option[Boolean] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (2,121 Î¼s, 0.03%)</title><rect x="1009.3" y="149" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1012.32" y="159.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;head&quot;)] :: shapeless.HNil,org.scalasteward.core.forge.gitea.GiteaApiAlg.PRBranchInfo :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (3,885 Î¼s, 0.06%)</title><rect x="613.1" y="117" width="0.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="616.15" y="127.5" ></text>
</g>
<g >
<title>F[List[org.scalasteward.core.data.Scope[List[org.scalasteward.core.data.Dependency]]]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (3,260 Î¼s, 0.05%)</title><rect x="69.3" y="245" width="0.6" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="72.33" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[org.scalasteward.core.git.Branch with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;displayId&quot;)],org.scalasteward.core.git.Branch] :: org.scalasteward.core.git.Sha1 with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;latestCommit&quot;)],org.scalasteward.core.git.Sha1] :: shapeless.HNil]] (id 3935) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (6,157 Î¼s, 0.10%)</title><rect x="706.8" y="213" width="1.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="709.81" y="223.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.git.Sha1] (expanded macros 0)  (2,362 Î¼s, 0.04%)</title><rect x="600.2" y="181" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="603.23" y="191.5" ></text>
</g>
<g >
<title>ForgeRepoAlg.this.config.forgeCfg.tpe.type =&gt; ?{def === : ?} (expanded macros 0)  (3,619 Î¼s, 0.06%)</title><rect x="151.2" y="245" width="0.7" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="154.21" y="255.5" ></text>
</g>
<g >
<title>defaultReviewers.type =&gt; ?{def map: ?} (expanded macros 0)  (1,129 Î¼s, 0.02%)</title><rect x="304.1" y="245" width="0.2" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="307.13" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)]} (id 8247) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,349 Î¼s, 0.02%)</title><rect x="1091.8" y="101" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1094.82" y="111.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.forge.data.UpdateState] (expanded macros 0)  (1,232 Î¼s, 0.02%)</title><rect x="385.7" y="245" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="388.70" y="255.5" ></text>
</g>
<g >
<title>shapeless.Annotations[io.circe.generic.extras.JsonKey,org.scalasteward.core.update.artifact.ArtifactChanges]{type Out = K} (id 8875) (expanded macros 3) (tree from `shapeless.AnnotationMacros.materializeVariableAnnotations`)  (866 Î¼s, 0.01%)</title><rect x="1168.5" y="213" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1171.46" y="223.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Update.ForArtifactId]{type Out = K} (id 2300) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (3,036 Î¼s, 0.05%)</title><rect x="802.8" y="197" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="805.78" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;fork&quot;)],Boolean] :: Long with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)],Long] :: org.scalasteward.core.forge.gitea.GiteaApiAlg.User with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;owner&quot;)],org.scalasteward.core.forge.gitea.GiteaApiAlg.User] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;archived&quot;)],Boolean] :: org.http4s.Uri with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;clone_url&quot;)],org.http4s.Uri] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;default_branch&quot;)],String] :: Option[org.scalasteward.core.forge.gitea.GiteaApiAlg.Repository] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;parent&quot;)],Option[org.scalasteward.core.forge.gitea.GiteaApiAlg.Repository]] :: shapeless.HNil]] (id 4564) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (14,794 Î¼s, 0.24%)</title><rect x="625.5" y="213" width="2.9" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="628.52" y="223.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;pattern&quot;)]} (id 1848) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (930 Î¼s, 0.02%)</title><rect x="938.9" y="101" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="941.89" y="111.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.ArtifactId]{type Out = K} (id 1384) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (3,097 Î¼s, 0.05%)</title><rect x="451.1" y="197" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="454.07" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitlab.ProjectId]{type Repr = V} (expanded macros 3)   (1,366 Î¼s, 0.02%)</title><rect x="791.6" y="197" width="0.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="794.59" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.nurture.PullRequestRepository.Entry]] (id 6572) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (61,531 Î¼s, 1.00%)</title><rect x="633.9" y="245" width="11.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="636.88" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[Option[List[String]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)],Option[List[String]]] :: shapeless.HNil] (expanded macros 0)  (2,118 Î¼s, 0.03%)</title><rect x="1108.0" y="133" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1111.01" y="143.5" ></text>
</g>
<g >
<title>x.grouping.type =&gt; ?{def |+| : ?} (expanded macros 0)  (2,583 Î¼s, 0.04%)</title><rect x="1188.8" y="245" width="0.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="1191.77" y="255.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.persistence.JsonKeyValueStore[F,org.scalasteward.core.data.Repo,org.scalasteward.core.repocache.RefreshErrorAlg.Entry]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (4,312 Î¼s, 0.07%)</title><rect x="143.3" y="245" width="0.9" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="146.33" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.PullRequestsConfig]{type Out = K} (id 7444) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,638 Î¼s, 0.03%)</title><rect x="1025.2" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1028.17" y="207.5" ></text>
</g>
<g >
<title>scala.util.Either[io.circe.DecodingFailure,org.scalasteward.core.forge.gitea.GiteaApiAlg.User] =&gt; io.circe.Json (expanded macros 0)   (714 Î¼s, 0.01%)</title><rect x="628.2" y="181" width="0.2" height="15.0" fill="rgb(244,114,114)" rx="2" ry="2" />
<text  x="631.21" y="191.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[org.scalasteward.core.data.Repo] (expanded macros 0)  (9,442 Î¼s, 0.15%)</title><rect x="277.3" y="245" width="1.9" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="280.34" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.encoding.ReprAsObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;location&quot;)],String] :: Option[org.scalasteward.core.data.Resolver.Credentials] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)],Option[org.scalasteward.core.data.Resolver.Credentials]] :: List[org.scalasteward.core.data.Resolver.Header] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)],List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil]] (id 1975) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (11,852 Î¼s, 0.19%)</title><rect x="990.9" y="149" width="2.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="993.87" y="159.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.Validate[Char,eu.timepit.refined.numeric.Greater['f']]{type R = R} (expanded macros 0)  (2,298 Î¼s, 0.04%)</title><rect x="355.1" y="149" width="0.5" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="358.15" y="159.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;login&quot;)],String] :: shapeless.HNil]] (id 4497) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (2,655 Î¼s, 0.04%)</title><rect x="761.1" y="213" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="764.12" y="223.5" ></text>
</g>
<g >
<title>io.circe.Encoder[String] (expanded macros 0)  (730 Î¼s, 0.01%)</title><rect x="1118.6" y="213" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1121.55" y="223.5" ></text>
</g>
<g >
<title>F[(Unit, org.scalasteward.core.forge.bitbucketserver.Json.NewPR)] =&gt; ?{def flatMap: ?} (expanded macros 0)  (1,133 Î¼s, 0.02%)</title><rect x="47.4" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="50.36" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[org.scalasteward.core.git.Sha1 with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;baseSha1&quot;)],org.scalasteward.core.git.Sha1] :: org.scalasteward.core.data.Update with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;update&quot;)],org.scalasteward.core.data.Update] :: org.scalasteward.core.forge.data.PullRequestState with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)],org.scalasteward.core.forge.data.PullRequestState] :: org.scalasteward.core.util.Timestamp with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;entryCreatedAt&quot;)],org.scalasteward.core.util.Timestamp] :: Option[org.scalasteward.core.forge.data.PullRequestNumber] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;number&quot;)],Option[org.scalasteward.core.forge.data.PullRequestNumber]] :: Option[org.scalasteward.core.git.Branch] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;updateBranch&quot;)],Option[org.scalasteward.core.git.Branch]] :: shapeless.HNil]] (id 6593) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (28,355 Î¼s, 0.46%)</title><rect x="640.2" y="213" width="5.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="643.23" y="223.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.forge.gitlab.MergeRequestPayload] (expanded macros 0)  (38,576 Î¼s, 0.63%)</title><rect x="880.6" y="229" width="7.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="883.59" y="239.5" ></text>
</g>
<g >
<title>cats.data.NonEmptyList[String] =&gt; ?{def mkString_: ?} (expanded macros 0)   (5,299 Î¼s, 0.09%)</title><rect x="254.0" y="245" width="1.0" height="15.0" fill="rgb(220,80,80)" rx="2" ry="2" />
<text  x="256.98" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,Option[org.scalasteward.core.data.Resolver.Credentials] :: List[org.scalasteward.core.data.Resolver.Header] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (4,045 Î¼s, 0.07%)</title><rect x="990.1" y="101" width="0.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="993.10" y="111.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.repoconfig.PullRequestsConfig]{type Repr = R} (expanded macros 0)  (1,514 Î¼s, 0.02%)</title><rect x="1024.1" y="213" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1027.14" y="223.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.ReprAsObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;status&quot;)],String] :: shapeless.HNil]] (id 3419) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (3,683 Î¼s, 0.06%)</title><rect x="833.0" y="213" width="0.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="836.01" y="223.5" ></text>
</g>
<g >
<title>shapeless.Lub[Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)],Symbol with shapeless.tag.Tagged[_ &gt;: String(&quot;dependencyOverrides&quot;) with String(&quot;reviewers&quot;) &lt;: String],Lub0] (expanded macros 0)  (851 Î¼s, 0.01%)</title><rect x="1071.3" y="85" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1074.28" y="95.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;allowPreReleases&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;ignore&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)] :: shapeless.HNil,List[org.scalasteward.core.repoconfig.UpdatePattern] :: List[org.scalasteward.core.repoconfig.UpdatePattern] :: Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]] :: Option[List[String]] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (9,824 Î¼s, 0.16%)</title><rect x="1094.8" y="165" width="1.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1097.76" y="175.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;assignee_ids&quot;)]} (id 5485) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (841 Î¼s, 0.01%)</title><rect x="884.4" y="117" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="887.41" y="127.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[None.type :: None.type :: Some[Option[Boolean]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;command&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;commitMessage&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;addToGitBlameIgnoreRevs&quot;)] :: shapeless.HNil]{type Out = OutT} (expanded macros 0)  (1,215 Î¼s, 0.02%)</title><rect x="1006.2" y="165" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1009.15" y="175.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.azurerepos.PullRequestCommentPayload]{type Out = K} (id 3441) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,107 Î¼s, 0.02%)</title><rect x="835.0" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="838.01" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil,List[String] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (2,961 Î¼s, 0.05%)</title><rect x="1059.4" y="69" width="0.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1062.43" y="79.5" ></text>
</g>
<g >
<title>F[List[(org.scalasteward.core.buildtool.BuildRoot, List[org.scalasteward.core.buildtool.BuildToolAlg[F]])]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (3,497 Î¼s, 0.06%)</title><rect x="58.7" y="245" width="0.7" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="61.75" y="255.5" ></text>
</g>
<g >
<title>shapeless.Annotations[io.circe.generic.extras.JsonKey,org.scalasteward.core.data.Resolver.MavenRepository]{type Out = K} (id 2027) (expanded macros 3) (tree from `shapeless.AnnotationMacros.materializeVariableAnnotations`)  (1,477 Î¼s, 0.02%)</title><rect x="983.6" y="149" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="986.62" y="159.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[String]] (expanded macros 0)  (1,453 Î¼s, 0.02%)</title><rect x="476.2" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="479.23" y="191.5" ></text>
</g>
<g >
<title>from.major.type =&gt; ?{def === : ?} (expanded macros 0)  (868 Î¼s, 0.01%)</title><rect x="318.2" y="245" width="0.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="321.24" y="255.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.util.Timestamp] =&gt; ?{def map: ?} (expanded macros 0)  (3,565 Î¼s, 0.06%)</title><rect x="148.0" y="245" width="0.7" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="151.03" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitea.GiteaApiAlg.PayloadCommit]{type Out = K} (id 4587) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,536 Î¼s, 0.02%)</title><rect x="602.7" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="605.73" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.update.artifact.ArtifactChanges]{type Out = K} (id 8834) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (989 Î¼s, 0.02%)</title><rect x="1169.7" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1172.68" y="207.5" ></text>
</g>
<g >
<title>sbtCommands.type =&gt; ?{def mkString_: ?} (expanded macros 0)   (6,511 Î¼s, 0.11%)</title><rect x="414.3" y="245" width="1.3" height="15.0" fill="rgb(227,89,89)" rx="2" ry="2" />
<text  x="417.31" y="255.5" ></text>
</g>
<g >
<title>F[coursier.core.Repository] =&gt; ?{def flatMap: ?} (expanded macros 0)  (2,058 Î¼s, 0.03%)</title><rect x="126.7" y="245" width="0.4" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="129.70" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy]] (expanded macros 0)  (1,251 Î¼s, 0.02%)</title><rect x="1062.9" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1065.92" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;runAfterUpgrading&quot;)] :: shapeless.HNil,Option[Boolean] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (1,137 Î¼s, 0.02%)</title><rect x="1077.3" y="197" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1080.31" y="207.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.data.Dependency] (expanded macros 0)   (1,586 Î¼s, 0.03%)</title><rect x="359.5" y="229" width="0.3" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="362.51" y="239.5" ></text>
</g>
<g >
<title>Unit =&gt; Throwable (expanded macros 0)   (1,136 Î¼s, 0.02%)</title><rect x="207.7" y="245" width="0.2" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="210.72" y="255.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[org.scalasteward.core.data.GroupId] (expanded macros 0)  (1,126 Î¼s, 0.02%)</title><rect x="1179.9" y="229" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1182.94" y="239.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.github.GitHubLabels]{type Repr = V} (expanded macros 3)   (2,030 Î¼s, 0.03%)</title><rect x="871.8" y="197" width="0.4" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="874.80" y="207.5" ></text>
</g>
<g >
<title>cats.Traverse[List] (expanded macros 0)  (646 Î¼s, 0.01%)</title><rect x="169.8" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="172.80" y="239.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.data.Resolver.Header] (expanded macros 0)  (21,490 Î¼s, 0.35%)</title><rect x="487.9" y="229" width="4.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="490.90" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;filter&quot;)] :: shapeless.HNil,Option[String] :: cats.data.NonEmptyList[org.scalasteward.core.repoconfig.PullRequestUpdateFilter] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,941 Î¼s, 0.03%)</title><rect x="889.7" y="181" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="892.73" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;scalafmt&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (18,333 Î¼s, 0.30%)</title><rect x="1068.6" y="181" width="3.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1071.65" y="191.5" ></text>
</g>
<g >
<title>from.patch.type =&gt; ?{def =!= : ?} (expanded macros 0)  (1,522 Î¼s, 0.02%)</title><rect x="318.7" y="245" width="0.3" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="321.71" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)]} (id 3398) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (720 Î¼s, 0.01%)</title><rect x="842.0" y="149" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="845.02" y="159.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.codec.ReprAsObjectCodec[Option[Boolean] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;runAfterUpgrading&quot;)],Option[Boolean]] :: shapeless.HNil]] (id 8138) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (4,034 Î¼s, 0.07%)</title><rect x="1078.2" y="213" width="0.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1081.20" y="223.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Update.Grouped]{type Repr = V} (id 2478) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (2,916 Î¼s, 0.05%)</title><rect x="686.2" y="197" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="689.21" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.azurerepos.PullRequestCommentPayload]{type Out = K} (id 3439) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,128 Î¼s, 0.02%)</title><rect x="834.8" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="837.79" y="207.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.forge.bitbucketserver.Json.Branches] =&gt; ?{def map: ?} (expanded macros 0)  (1,225 Î¼s, 0.02%)</title><rect x="133.1" y="245" width="0.2" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="136.11" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitea.GiteaApiAlg.CreateForkOption]{type Out = K} (id 4504) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,752 Î¼s, 0.03%)</title><rect x="554.6" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="557.58" y="207.5" ></text>
</g>
<g >
<title>dependency.groupId.type =&gt; ?{def === : ?} (expanded macros 0)  (876 Î¼s, 0.01%)</title><rect x="305.1" y="245" width="0.1" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="308.05" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.util.RecordToMap[Option[scala.util.matching.Regex] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;includeMatchedLabels&quot;)],Option[scala.util.matching.Regex]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;customLabels&quot;)],List[String]] :: shapeless.HNil] (expanded macros 0)  (2,881 Î¼s, 0.05%)</title><rect x="1020.4" y="181" width="0.6" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1023.40" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;commit&quot;)] :: shapeless.HNil,org.scalasteward.core.git.Branch :: org.scalasteward.core.forge.data.CommitOut :: shapeless.HNil]{type Out = R} (expanded macros 0)  (2,939 Î¼s, 0.05%)</title><rect x="737.7" y="197" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="740.65" y="207.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.data.Resolver.IvyRepository]{type Repr = R} (expanded macros 0)   (17,071 Î¼s, 0.28%)</title><rect x="969.9" y="149" width="3.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="972.93" y="159.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.decoding.ReprDecoder[Option[org.scalasteward.core.data.GroupId] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;groupIdBefore&quot;)],Option[org.scalasteward.core.data.GroupId]] :: org.scalasteward.core.data.GroupId with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;groupIdAfter&quot;)],org.scalasteward.core.data.GroupId] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;artifactIdBefore&quot;)],Option[String]] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;artifactIdAfter&quot;)],String] :: shapeless.HNil]] (id 8745) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (6,251 Î¼s, 0.10%)</title><rect x="1161.1" y="213" width="1.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1164.10" y="223.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.ArtifactId] (expanded macros 0)  (1,909 Î¼s, 0.03%)</title><rect x="477.6" y="181" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="480.63" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)]} (id 8337) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,066 Î¼s, 0.02%)</title><rect x="1082.8" y="117" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1085.81" y="127.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;value&quot;)]} (id 1664) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,579 Î¼s, 0.03%)</title><rect x="490.4" y="165" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="493.38" y="175.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;status&quot;)] :: shapeless.HNil,Int :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,744 Î¼s, 0.03%)</title><rect x="836.3" y="181" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="839.34" y="191.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[Some[org.scalasteward.core.repoconfig.UpdatesConfig] :: Some[Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]]] :: Some[Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy]] :: Some[Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]]] :: Some[List[String]] :: Some[List[String]] :: Some[List[org.scalasteward.core.repoconfig.GroupRepoConfig]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil]{type Out = OutT} (expanded macros 0)  (4,636 Î¼s, 0.08%)</title><rect x="1048.3" y="149" width="0.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1051.34" y="159.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.PostUpdateHookConfig]{type Out = K} (id 7171) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,179 Î¼s, 0.02%)</title><rect x="1007.5" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1010.54" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitea.GiteaApiAlg.Repository]{type Repr = V} (id 4545) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (2,811 Î¼s, 0.05%)</title><rect x="620.6" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="623.59" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[List[org.scalasteward.core.data.Resolver.Header]] (expanded macros 0)  (2,663 Î¼s, 0.04%)</title><rect x="977.1" y="117" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="980.08" y="127.5" ></text>
</g>
<g >
<title>StringContext =&gt; ?{def ci: ?} (expanded macros 0)  (5,061 Î¼s, 0.08%)</title><rect x="203.8" y="245" width="1.0" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="206.84" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.edit.scalafix.ScalafixMigrations]{type Out = K} (id 2855) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (806 Î¼s, 0.01%)</title><rect x="1152.6" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1155.58" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;pass&quot;)]} (id 1647) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,240 Î¼s, 0.02%)</title><rect x="484.9" y="165" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="487.91" y="175.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)]} (id 5524) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (671 Î¼s, 0.01%)</title><rect x="789.6" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="792.56" y="191.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitea.GiteaApiAlg.PayloadCommit]{type Out = K} (id 4585) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,678 Î¼s, 0.03%)</title><rect x="602.4" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="605.41" y="207.5" ></text>
</g>
<g >
<title>eu.timepit.refined.internal.WitnessAs[N,Int] (expanded macros 0)  (1,615 Î¼s, 0.03%)</title><rect x="315.5" y="197" width="0.3" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="318.54" y="207.5" ></text>
</g>
<g >
<title>cats.Functor[io.circe.Decoder] (expanded macros 0)  (1,080 Î¼s, 0.02%)</title><rect x="402.4" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="405.38" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;message&quot;)],Option[String]] :: shapeless.HNil]{type Out = F} (expanded macros 0)  (1,259 Î¼s, 0.02%)</title><rect x="1003.0" y="213" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1005.96" y="223.5" ></text>
</g>
<g >
<title>fs2.compat.NotGiven[List[org.scalasteward.core.data.Repo] &lt;:&lt; Nothing] (expanded macros 0)  (2,223 Î¼s, 0.04%)</title><rect x="325.6" y="245" width="0.4" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="328.59" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Resolver.MavenRepository]{type Repr = V} (id 1949) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (2,623 Î¼s, 0.04%)</title><rect x="985.9" y="133" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="988.87" y="143.5" ></text>
</g>
<g >
<title>F[(List[org.scalasteward.core.buildtool.mill.MillModule], List[org.scalasteward.core.data.Scope[List[org.scalasteward.core.data.Dependency]]])] =&gt; ?{def map: ?} (expanded macros 0)  (2,054 Î¼s, 0.03%)</title><rect x="42.5" y="245" width="0.4" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="45.54" y="255.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[String] (expanded macros 0)  (909 Î¼s, 0.01%)</title><rect x="391.7" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="394.73" y="239.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord[org.scalasteward.core.repoconfig.PullRequestsConfig]{type Out = D} (expanded macros 0)  (12,478 Î¼s, 0.20%)</title><rect x="1021.7" y="213" width="2.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1024.75" y="223.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.data.Update.ForGroupId] (expanded macros 0)  (35,772 Î¼s, 0.58%)</title><rect x="813.7" y="229" width="6.8" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="816.69" y="239.5" ></text>
</g>
<g >
<title>string.type =&gt; ?{def toList: ?} (expanded macros 0)  (537 Î¼s, 0.01%)</title><rect x="1174.1" y="245" width="0.2" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="1177.15" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.github.CreatePullRequestPayload]{type Out = K} (id 4966) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,201 Î¼s, 0.02%)</title><rect x="864.3" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="867.35" y="207.5" ></text>
</g>
<g >
<title>a.value.type =&gt; ?{def headOption: ?} (expanded macros 0)  (786 Î¼s, 0.01%)</title><rect x="208.0" y="245" width="0.1" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="210.99" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[List[String]] (expanded macros 0)  (953 Î¼s, 0.02%)</title><rect x="1034.3" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1037.31" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;login&quot;)]} (id 4495) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (688 Î¼s, 0.01%)</title><rect x="760.9" y="181" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="763.95" y="191.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.forge.bitbucketserver.Json.Branch] (expanded macros 0)  (1,813 Î¼s, 0.03%)</title><rect x="366.1" y="245" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="369.14" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repocache.RefreshErrorAlg.Entry]{type Out = K} (id 6803) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (986 Î¼s, 0.02%)</title><rect x="646.6" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="649.64" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.bitbucketserver.Json.User]] (id 4223) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (30,215 Î¼s, 0.49%)</title><rect x="527.6" y="245" width="5.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="530.60" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)]} (id 2460) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,725 Î¼s, 0.03%)</title><rect x="826.1" y="149" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="829.13" y="159.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]]] (expanded macros 0)  (1,663 Î¼s, 0.03%)</title><rect x="1062.6" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1065.60" y="191.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[org.scalasteward.core.forge.data.PullRequestNumber]] (expanded macros 0)  (1,890 Î¼s, 0.03%)</title><rect x="643.6" y="181" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="646.62" y="191.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitea.GiteaApiAlg.PRBranchInfo]{type Out = K} (id 4633) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,985 Î¼s, 0.03%)</title><rect x="595.8" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="598.80" y="207.5" ></text>
</g>
<g >
<title>cats.Contravariant[cats.kernel.Order] (expanded macros 0)  (612 Î¼s, 0.01%)</title><rect x="215.7" y="245" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="218.72" y="255.5" ></text>
</g>
<g >
<title>cats.FunctorFilter[[+O]fs2.Stream[[x]fs2.Pure[x],O]] (expanded macros 0)  (1,041 Î¼s, 0.02%)</title><rect x="296.2" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="299.16" y="239.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[String] (expanded macros 0)  (1,103 Î¼s, 0.02%)</title><rect x="318.0" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="321.03" y="239.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucket.CommentContent]{type Out = K} (id 3646) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (769 Î¼s, 0.01%)</title><rect x="505.6" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="508.60" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.azurerepos.PullRequestPayload]{type Repr = V} (expanded macros 3)   (2,324 Î¼s, 0.04%)</title><rect x="840.1" y="197" width="0.4" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="843.09" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.util.RecordToMap[List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)],List[String]] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)],List[org.scalasteward.core.repoconfig.GroupRepoConfig]] :: shapeless.HNil] (expanded macros 0)  (2,144 Î¼s, 0.03%)</title><rect x="1045.9" y="85" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1048.90" y="95.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;commit&quot;)] :: shapeless.HNil,org.scalasteward.core.git.Branch :: org.scalasteward.core.forge.data.CommitOut :: shapeless.HNil]{type Out = R} (expanded macros 0)  (2,952 Î¼s, 0.05%)</title><rect x="741.0" y="197" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="743.96" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Vector[Int]] (expanded macros 0)  (829 Î¼s, 0.01%)</title><rect x="581.7" y="165" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="584.67" y="175.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: shapeless.HNil]] (id 4234) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (9,409 Î¼s, 0.15%)</title><rect x="531.6" y="213" width="1.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="534.58" y="223.5" ></text>
</g>
<g >
<title>((Nothing, Nothing)) =&gt; coursier.maven.MavenRepository (expanded macros 0)   (1,253 Î¼s, 0.02%)</title><rect x="12.8" y="245" width="0.2" height="15.0" fill="rgb(241,111,111)" rx="2" ry="2" />
<text  x="15.75" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.ReprDecoder[List[org.scalasteward.core.forge.bitbucketserver.Json.DefaultReviewer] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)],List[org.scalasteward.core.forge.bitbucketserver.Json.DefaultReviewer]] :: shapeless.HNil] (id 3997) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveDecoder`)  (2,823 Î¼s, 0.05%)</title><rect x="714.3" y="197" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="717.32" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.data.Comment]{type Repr = V} (expanded macros 3)   (1,254 Î¼s, 0.02%)</title><rect x="534.8" y="197" width="0.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="537.85" y="207.5" ></text>
</g>
<g >
<title>String =&gt; Iterable[_] (expanded macros 0)  (740 Î¼s, 0.01%)</title><rect x="311.0" y="197" width="0.2" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="314.02" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;remove_source_branch&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;source_branch&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;target_branch&quot;)] :: shapeless.HNil,Option[Boolean] :: String :: org.scalasteward.core.git.Branch :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (5,365 Î¼s, 0.09%)</title><rect x="885.2" y="85" width="1.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="888.17" y="95.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.data.RepoOut]{type Repr = V} (expanded macros 3)   (2,110 Î¼s, 0.03%)</title><rect x="754.5" y="197" width="0.4" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="757.52" y="207.5" ></text>
</g>
<g >
<title>cats.Foldable[F] (expanded macros 0)   (1,980 Î¼s, 0.03%)</title><rect x="398.6" y="229" width="0.4" height="15.0" fill="rgb(220,80,80)" rx="2" ry="2" />
<text  x="401.65" y="239.5" ></text>
</g>
<g >
<title>eu.timepit.refined.internal.WitnessAs['a',Char] (expanded macros 0)  (1,939 Î¼s, 0.03%)</title><rect x="355.8" y="133" width="0.4" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="358.83" y="143.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[org.scalasteward.core.data.GroupId with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;groupId&quot;)],org.scalasteward.core.data.GroupId] :: cats.data.NonEmptyList[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;artifactIds&quot;)],cats.data.NonEmptyList[String]] :: org.scalasteward.core.data.Version with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;newVersion&quot;)],org.scalasteward.core.data.Version] :: cats.data.NonEmptyList[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;rewriteRules&quot;)],cats.data.NonEmptyList[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;doc&quot;)],Option[String]] :: Option[cats.data.NonEmptyList[String]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;scalacOptions&quot;)],Option[cats.data.NonEmptyList[String]]] :: Option[cats.data.NonEmptyList[org.scalasteward.core.git.Author]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;authors&quot;)],Option[cats.data.NonEmptyList[org.scalasteward.core.git.Author]]] :: Option[org.scalasteward.core.edit.scalafix.ScalafixMigration.Target] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;target&quot;)],Option[org.scalasteward.core.edit.scalafix.ScalafixMigration.Target]] :: Option[org.scalasteward.core.edit.scalafix.ScalafixMigration.ExecutionOrder] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;executionOrder&quot;)],Option[org.scalasteward.core.edit.scalafix.ScalafixMigration.ExecutionOrder]] :: shapeless.HNil]] (id 2785) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (19,484 Î¼s, 0.32%)</title><rect x="699.9" y="213" width="3.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="702.89" y="223.5" ></text>
</g>
<g >
<title>cats.Applicative[[+A]cats.effect.kernel.Resource[F,A]] (expanded macros 0)  (11,050 Î¼s, 0.18%)</title><rect x="213.4" y="245" width="2.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="216.37" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucketserver.Json.Repo]{type Repr = V} (expanded macros 3)   (1,478 Î¼s, 0.02%)</title><rect x="733.6" y="197" width="0.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="736.61" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucket.DefaultReviewers]{type Out = K} (id 3686) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (951 Î¼s, 0.02%)</title><rect x="511.9" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="514.90" y="207.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.data.Resolver.MavenRepository]{type Repr = R} (expanded macros 0)  (16,275 Î¼s, 0.26%)</title><rect x="987.8" y="149" width="3.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="990.76" y="159.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)]} (id 1708) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,046 Î¼s, 0.02%)</title><rect x="956.3" y="85" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="959.31" y="95.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.gitlab.ProjectId]{type Repr = R} (expanded macros 0)  (7,101 Î¼s, 0.12%)</title><rect x="791.0" y="213" width="1.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="794.05" y="223.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord[org.scalasteward.core.repoconfig.RepoConfig]{type Out = D} (expanded macros 0)  (12,101 Î¼s, 0.20%)</title><rect x="1047.6" y="213" width="2.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1050.62" y="223.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;forArtifactIds&quot;)]} (id 2443) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (2,591 Î¼s, 0.04%)</title><rect x="680.8" y="181" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="683.78" y="191.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.util.Timestamp] (expanded macros 0)   (1,390 Î¼s, 0.02%)</title><rect x="445.7" y="165" width="0.3" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="448.72" y="175.5" ></text>
</g>
<g >
<title>io.circe.Decoder[List[org.scalasteward.core.repoconfig.BuildRootConfig]] (expanded macros 0)  (1,213 Î¼s, 0.02%)</title><rect x="1062.4" y="165" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1065.37" y="175.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[Option[Boolean] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;runAfterUpgrading&quot;)],Option[Boolean]] :: shapeless.HNil]{type Out = F} (expanded macros 0)  (1,089 Î¼s, 0.02%)</title><rect x="1079.3" y="213" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1082.31" y="223.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.data.DependencyInfo]{type Repr = R} (expanded macros 0)  (14,931 Î¼s, 0.24%)</title><rect x="458.2" y="213" width="2.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="461.20" y="223.5" ></text>
</g>
<g >
<title>F[String] =&gt; ?{def flatMap: ?} (expanded macros 0)  (11,050 Î¼s, 0.18%)</title><rect x="91.3" y="245" width="2.1" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="94.26" y="255.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[org.scalasteward.core.data.Version] (expanded macros 0)  (1,243 Î¼s, 0.02%)</title><rect x="403.7" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="406.67" y="239.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)]} (id 1955) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,316 Î¼s, 0.02%)</title><rect x="987.4" y="69" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="990.44" y="79.5" ></text>
</g>
<g >
<title>fs2.Compiler[[x]F[x],G] (expanded macros 0)  (19,890 Î¼s, 0.32%)</title><rect x="319.3" y="245" width="3.8" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="322.29" y="255.5" ></text>
</g>
<g >
<title>PostUpdateHook.this.command.type =&gt; ?{def mkString_(x$1: ? &gt;: String(&quot;\'&quot;), x$2: ? &gt;: String(&quot; &quot;), x$3: ? &gt;: String(&quot;\'&quot;)): ?} (expanded macros 0)  (941 Î¼s, 0.02%)</title><rect x="176.9" y="245" width="0.1" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="179.87" y="255.5" ></text>
</g>
<g >
<title>cats.kernel.Order[String] (expanded macros 0)  (3,548 Î¼s, 0.06%)</title><rect x="289.8" y="245" width="0.7" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="292.83" y="255.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.git.Commit] =&gt; ?{def map: ?} (expanded macros 0)  (817 Î¼s, 0.01%)</title><rect x="141.1" y="245" width="0.1" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="144.05" y="255.5" ></text>
</g>
<g >
<title>Ordering[org.scalasteward.core.data.Resolver] (expanded macros 0)  (1,348 Î¼s, 0.02%)</title><rect x="175.4" y="245" width="0.3" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="178.43" y="255.5" ></text>
</g>
<g >
<title>F[(Option[String], Option[org.scalasteward.core.data.Version])] =&gt; ?{def map: ?} (expanded macros 0)  (3,341 Î¼s, 0.05%)</title><rect x="44.1" y="245" width="0.6" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="47.10" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;artifactId&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;version&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;sbtVersion&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;scalaVersion&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;configurations&quot;)] :: shapeless.HNil,org.scalasteward.core.data.ArtifactId :: org.scalasteward.core.data.Version :: Option[org.scalasteward.core.buildtool.sbt.data.SbtVersion] :: Option[org.scalasteward.core.buildtool.sbt.data.ScalaVersion] :: Option[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (11,811 Î¼s, 0.19%)</title><rect x="471.6" y="181" width="2.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="474.59" y="191.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[List[String]]] (expanded macros 0)  (1,322 Î¼s, 0.02%)</title><rect x="1098.5" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1101.47" y="191.5" ></text>
</g>
<g >
<title>io.circe.Decoder[List[org.scalasteward.core.data.Resolver.Header]] (expanded macros 0)  (2,656 Î¼s, 0.04%)</title><rect x="961.6" y="117" width="0.6" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="964.65" y="127.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;raw&quot;)],String] :: shapeless.HNil]] (id 3652) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (4,146 Î¼s, 0.07%)</title><rect x="506.5" y="213" width="0.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="509.53" y="223.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitea.GiteaApiAlg.PullRequestResp]{type Out = K} (id 4670) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (2,461 Î¼s, 0.04%)</title><rect x="608.4" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="611.39" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[cats.data.NonEmptyList[org.scalasteward.core.data.CrossDependency]] (expanded macros 0)  (5,125 Î¼s, 0.08%)</title><rect x="352.4" y="245" width="1.0" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="355.43" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;user&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;pass&quot;)],String] :: shapeless.HNil] (id 1651) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (5,795 Î¼s, 0.09%)</title><rect x="485.4" y="197" width="1.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="488.42" y="207.5" ></text>
</g>
<g >
<title>buildTools.type =&gt; ?{def flatTraverse: ?} (expanded macros 0)  (902 Î¼s, 0.01%)</title><rect x="209.5" y="245" width="0.2" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="212.49" y="255.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.data.Resolver.IvyRepository]{type Repr = R} (expanded macros 0)   (18,163 Î¼s, 0.29%)</title><rect x="933.1" y="149" width="3.5" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="936.08" y="159.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.UpdatePattern]{type Out = K} (id 8179) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (806 Î¼s, 0.01%)</title><rect x="662.6" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="665.61" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;commits&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;pullRequests&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;scalafmt&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil,org.scalasteward.core.repoconfig.CommitsConfig :: org.scalasteward.core.repoconfig.PullRequestsConfig :: org.scalasteward.core.repoconfig.ScalafmtConfig :: org.scalasteward.core.repoconfig.UpdatesConfig :: Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]] :: Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy] :: Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]] :: List[String] :: List[String] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (17,787 Î¼s, 0.29%)</title><rect x="1052.6" y="197" width="3.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1055.64" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;label&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;ref&quot;)],String] :: org.scalasteward.core.git.Sha1 with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;sha&quot;)],org.scalasteward.core.git.Sha1] :: shapeless.HNil]] (id 4645) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (10,557 Î¼s, 0.17%)</title><rect x="599.1" y="213" width="2.0" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="602.12" y="223.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.ReprAsObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)],Option[String]] :: List[org.scalasteward.core.data.Update.ForArtifactId] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)],List[org.scalasteward.core.data.Update.ForArtifactId]] :: shapeless.HNil] (id 2465) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveEncoder`)  (6,187 Î¼s, 0.10%)</title><rect x="826.8" y="197" width="1.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="829.82" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitlab.ProjectId]{type Out = K} (id 5453) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (878 Î¼s, 0.01%)</title><rect x="791.4" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="794.42" y="207.5" ></text>
</g>
<g >
<title>F[(List[org.scalasteward.core.update.data.UpdateState], List[org.scalasteward.core.data.Update.ForArtifactId])] =&gt; ?{def map: ?} (expanded macros 0)  (789 Î¼s, 0.01%)</title><rect x="43.3" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="46.31" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.Resolver.Credentials] (expanded macros 0)  (2,059 Î¼s, 0.03%)</title><rect x="962.3" y="101" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="965.29" y="111.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.ReprDecoder[org.http4s.Uri with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;html_url&quot;)],org.http4s.Uri] :: org.scalasteward.core.forge.data.PullRequestState with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)],org.scalasteward.core.forge.data.PullRequestState] :: org.scalasteward.core.forge.data.PullRequestNumber with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;number&quot;)],org.scalasteward.core.forge.data.PullRequestNumber] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)],String] :: shapeless.HNil] (id 4395) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveDecoder`)  (7,198 Î¼s, 0.12%)</title><rect x="750.7" y="197" width="1.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="753.68" y="207.5" ></text>
</g>
<g >
<title>String(&quot;ForArtifactId&quot;) =&gt; ?{def -&gt; : ?} (expanded macros 0)  (879 Î¼s, 0.01%)</title><rect x="184.8" y="245" width="0.2" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="187.80" y="255.5" ></text>
</g>
<g >
<title>cats.Traverse[Option] (expanded macros 0)  (539 Î¼s, 0.01%)</title><rect x="252.1" y="245" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="255.08" y="255.5" ></text>
</g>
<g >
<title>F[Boolean] =&gt; ?{def map: ?} (expanded macros 0)  (1,847 Î¼s, 0.03%)</title><rect x="55.0" y="245" width="0.3" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="57.98" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.repoconfig.VersionPattern]] (id 8464) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (18,905 Î¼s, 0.31%)</title><rect x="796.3" y="245" width="3.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="799.32" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.coproduct.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;MavenRepository&quot;)] :: shapeless.HNil,org.scalasteward.core.data.Resolver.MavenRepository :+: shapeless.CNil] (expanded macros 0)  (2,042 Î¼s, 0.03%)</title><rect x="923.8" y="181" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="926.76" y="191.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;prefix&quot;)],Option[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;suffix&quot;)],Option[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;exact&quot;)],Option[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;contains&quot;)],Option[String]] :: shapeless.HNil]] (id 8481) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (3,192 Î¼s, 0.05%)</title><rect x="799.3" y="213" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="802.32" y="223.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Vector[Int]] (expanded macros 0)  (914 Î¼s, 0.01%)</title><rect x="582.6" y="165" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="585.63" y="175.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.ReprAsObjectEncoder[List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)],List[String]] :: shapeless.HNil] (id 5264) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveEncoder`)  (2,790 Î¼s, 0.05%)</title><rect x="869.9" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="872.86" y="207.5" ></text>
</g>
<g >
<title>F[(org.scalasteward.core.edit.scalafix.ScalafixMigrationsFinder, org.scalasteward.core.repoconfig.RepoConfigLoader[F])] =&gt; ?{def flatMap: ?} (expanded macros 0)  (4,135 Î¼s, 0.07%)</title><rect x="49.8" y="245" width="0.8" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="52.80" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;target_project_id&quot;)]} (id 5483) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (853 Î¼s, 0.01%)</title><rect x="885.0" y="85" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="888.01" y="95.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitea.GiteaApiAlg.User]{type Out = K} (id 4523) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,709 Î¼s, 0.03%)</title><rect x="629.8" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="632.85" y="207.5" ></text>
</g>
<g >
<title>fs2.compat.NotGiven[Iterator[better.files.File] &lt;:&lt; Nothing] (expanded macros 0)  (737 Î¼s, 0.01%)</title><rect x="325.4" y="245" width="0.2" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="328.44" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[String]] (expanded macros 0)  (670 Î¼s, 0.01%)</title><rect x="1002.5" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1005.45" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;draft&quot;)] :: shapeless.HNil,Boolean :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,540 Î¼s, 0.02%)</title><rect x="866.0" y="133" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="869.01" y="143.5" ></text>
</g>
<g >
<title>io.circe.Decoder[List[org.scalasteward.core.data.DependencyInfo]] (expanded macros 0)  (2,659 Î¼s, 0.04%)</title><rect x="655.0" y="149" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="657.98" y="159.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[org.scalasteward.core.data.Version.Component] (expanded macros 0)  (681 Î¼s, 0.01%)</title><rect x="279.3" y="245" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="282.32" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)]} (id 7623) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (873 Î¼s, 0.01%)</title><rect x="1055.0" y="69" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1058.03" y="79.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[org.scalasteward.core.repoconfig.PullRequestFrequency]] (expanded macros 0)  (2,225 Î¼s, 0.04%)</title><rect x="1035.0" y="181" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1038.01" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (4,920 Î¼s, 0.08%)</title><rect x="943.4" y="133" width="1.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="946.45" y="143.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;label&quot;)]} (id 4643) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,196 Î¼s, 0.02%)</title><rect x="597.7" y="181" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="600.74" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)]} (id 8248) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,049 Î¼s, 0.02%)</title><rect x="1091.4" y="117" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1094.43" y="127.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.ReprAsObjectEncoder[org.scalasteward.core.forge.data.PullRequestState with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)],org.scalasteward.core.forge.data.PullRequestState] :: shapeless.HNil]] (id 4475) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (3,895 Î¼s, 0.06%)</title><rect x="862.1" y="213" width="0.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="865.13" y="223.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)]} (id 1710) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (897 Î¼s, 0.01%)</title><rect x="955.7" y="117" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="958.69" y="127.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)]} (id 4978) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (561 Î¼s, 0.01%)</title><rect x="865.3" y="181" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="868.35" y="191.5" ></text>
</g>
<g >
<title>io.circe.Encoder[String] (expanded macros 0)  (5,645 Î¼s, 0.09%)</title><rect x="382.0" y="245" width="1.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="385.04" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;ignore&quot;)]} (id 8333) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,108 Î¼s, 0.02%)</title><rect x="1083.2" y="149" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1086.22" y="159.5" ></text>
</g>
<g >
<title>io.circe.Encoder[List[Int]] (expanded macros 0)  (676 Î¼s, 0.01%)</title><rect x="887.3" y="165" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="890.31" y="175.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil,Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]] :: Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy] :: Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]] :: List[String] :: List[String] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (10,570 Î¼s, 0.17%)</title><rect x="1054.0" y="133" width="2.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1057.02" y="143.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.data.PullRequestOut]{type Out = K} (id 4380) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,427 Î¼s, 0.02%)</title><rect x="748.2" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="751.21" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;includeMatchedLabels&quot;)]} (id 7534) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,038 Î¼s, 0.02%)</title><rect x="1020.8" y="165" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1023.76" y="175.5" ></text>
</g>
<g >
<title>((Nothing, Nothing)) =&gt; java.time.Duration (expanded macros 0)   (749 Î¼s, 0.01%)</title><rect x="13.1" y="245" width="0.1" height="15.0" fill="rgb(241,111,111)" rx="2" ry="2" />
<text  x="16.08" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.GroupId] (expanded macros 0)  (1,221 Î¼s, 0.02%)</title><rect x="703.1" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="706.13" y="191.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.PostUpdateHookConfig]{type Out = K} (id 7188) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (962 Î¼s, 0.02%)</title><rect x="1010.0" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1012.96" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]] (expanded macros 0)  (627 Î¼s, 0.01%)</title><rect x="1100.5" y="165" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1103.49" y="175.5" ></text>
</g>
<g >
<title>scala.util.Either[io.circe.DecodingFailure,org.scalasteward.core.data.CrossDependency] =&gt; io.circe.Json (expanded macros 0)   (722 Î¼s, 0.01%)</title><rect x="812.6" y="181" width="0.2" height="15.0" fill="rgb(244,114,114)" rx="2" ry="2" />
<text  x="815.64" y="191.5" ></text>
</g>
<g >
<title>List[better.files.File] =&gt; ?{def collectFold: ?} (expanded macros 0)  (684 Î¼s, 0.01%)</title><rect x="169.4" y="245" width="0.2" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="172.45" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;pattern&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,String :: Option[org.scalasteward.core.data.Resolver.Credentials] :: List[org.scalasteward.core.data.Resolver.Header] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (5,896 Î¼s, 0.10%)</title><rect x="938.8" y="117" width="1.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="941.77" y="127.5" ></text>
</g>
<g >
<title>elems.type =&gt; ?{def parSequence: ?} (expanded macros 0)  (4,498 Î¼s, 0.07%)</title><rect x="306.2" y="245" width="0.8" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="309.17" y="255.5" ></text>
</g>
<g >
<title>F[List[Either[(org.scalasteward.core.data.Repo, Throwable),org.scalasteward.core.data.Repo]]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (1,839 Î¼s, 0.03%)</title><rect x="59.6" y="245" width="0.4" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="62.61" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Int] (expanded macros 0)  (525 Î¼s, 0.01%)</title><rect x="1146.8" y="213" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1149.76" y="223.5" ></text>
</g>
<g >
<title>F[(scala.collection.immutable.Map[org.scalasteward.core.data.Dependency,org.scalasteward.core.coursier.DependencyMetadata], scala.collection.immutable.Map[String,org.http4s.Uri])] =&gt; ?{def flatMap: ?} (expanded macros 0)  (676 Î¼s, 0.01%)</title><rect x="53.0" y="245" width="0.1" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="56.01" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;entryCreatedAt&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;number&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updateBranch&quot;)] :: shapeless.HNil,org.scalasteward.core.forge.data.PullRequestState :: org.scalasteward.core.util.Timestamp :: Option[org.scalasteward.core.forge.data.PullRequestNumber] :: Option[org.scalasteward.core.git.Branch] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (9,900 Î¼s, 0.16%)</title><rect x="638.3" y="165" width="1.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="641.33" y="175.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: shapeless.HNil,String :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,524 Î¼s, 0.02%)</title><rect x="750.3" y="149" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="753.27" y="159.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)]} (id 4107) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (605 Î¼s, 0.01%)</title><rect x="726.3" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="729.30" y="191.5" ></text>
</g>
<g >
<title>x$3.type =&gt; ?{def &gt; : ?} (expanded macros 0)  (3,570 Î¼s, 0.06%)</title><rect x="1185.2" y="245" width="0.7" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="1188.22" y="255.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.Validate[String,eu.timepit.refined.boolean.And[eu.timepit.refined.collection.Forall[eu.timepit.refined.boolean.Or[eu.timepit.refined.char.Digit,eu.timepit.refined.boolean.And[eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less['a']],eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Greater['f']]]]],eu.timepit.refined.collection.Size[eu.timepit.refined.generic.Equal[40]]]] (expanded macros 0)  (20,738 Î¼s, 0.34%)</title><rect x="307.7" y="229" width="4.0" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="310.72" y="239.5" ></text>
</g>
<g >
<title>io.circe.Decoder[String] (expanded macros 0)  (774 Î¼s, 0.01%)</title><rect x="568.8" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="571.79" y="191.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[org.scalasteward.core.data.GroupId]] (expanded macros 0)  (1,006 Î¼s, 0.02%)</title><rect x="1161.8" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1164.84" y="191.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.github.InstallationOut]] (id 5300) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (10,944 Î¼s, 0.18%)</title><rect x="761.6" y="245" width="2.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="764.62" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)]} (id 7878) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (636 Î¼s, 0.01%)</title><rect x="1073.9" y="101" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1076.89" y="111.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;crossDependency&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;newerVersions&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;newerGroupId&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;newerArtifactId&quot;)] :: shapeless.HNil,org.scalasteward.core.data.CrossDependency :: cats.data.NonEmptyList[org.scalasteward.core.data.Version] :: Option[org.scalasteward.core.data.GroupId] :: Option[String] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (19,517 Î¼s, 0.32%)</title><rect x="804.9" y="197" width="3.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="807.88" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (15,703 Î¼s, 0.25%)</title><rect x="1069.1" y="165" width="3.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1072.15" y="175.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.data.UserOut]] (id 4486) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (13,462 Î¼s, 0.22%)</title><rect x="759.0" y="245" width="2.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="762.05" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: org.scalasteward.core.forge.data.UserOut with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;owner&quot;)],org.scalasteward.core.forge.data.UserOut] :: Option[org.scalasteward.core.forge.data.RepoOut] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;parent&quot;)],Option[org.scalasteward.core.forge.data.RepoOut]] :: org.http4s.Uri with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;clone_url&quot;)],org.http4s.Uri] :: org.scalasteward.core.git.Branch with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;default_branch&quot;)],org.scalasteward.core.git.Branch] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;archived&quot;)],Boolean] :: shapeless.HNil]] (id 4439) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (9,740 Î¼s, 0.16%)</title><rect x="757.2" y="213" width="1.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="760.19" y="223.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)]} (id 1723) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (886 Î¼s, 0.01%)</title><rect x="959.3" y="85" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="962.30" y="95.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.repoconfig.ScalafmtConfig]{type Repr = R} (expanded macros 0)  (3,502 Î¼s, 0.06%)</title><rect x="1077.5" y="213" width="0.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1080.53" y="223.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[org.scalasteward.core.git.Branch]] (expanded macros 0)  (2,461 Î¼s, 0.04%)</title><rect x="642.0" y="181" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="644.95" y="191.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucketserver.Json.Page[A]]{type Out = K} (id 4080) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (876 Î¼s, 0.01%)</title><rect x="730.4" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="733.40" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Update.ForGroupId]{type Out = K} (id 2439) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (2,193 Î¼s, 0.04%)</title><rect x="678.8" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="681.75" y="207.5" ></text>
</g>
<g >
<title>seconds.type =&gt; ?{def seconds: ?} (expanded macros 0)  (4,272 Î¼s, 0.07%)</title><rect x="420.6" y="245" width="0.8" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="423.59" y="255.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.forge.gitlab.MergeRequestOut] =&gt; ?{def map: ?} (expanded macros 0)  (3,355 Î¼s, 0.05%)</title><rect x="139.4" y="245" width="0.7" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="142.43" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.data.RepoOut] (expanded macros 0)  (29,242 Î¼s, 0.47%)</title><rect x="753.5" y="229" width="5.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="756.45" y="239.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)]} (id 2004) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,013 Î¼s, 0.02%)</title><rect x="997.4" y="101" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1000.43" y="111.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.coursier.VersionsCache.Value]{type Out = K} (id 1320) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (4,080 Î¼s, 0.07%)</title><rect x="428.6" y="197" width="0.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="431.57" y="207.5" ></text>
</g>
<g >
<title>F[List[org.scalasteward.core.edit.update.data.ModulePosition]] =&gt; ?{def map: ?} (expanded macros 0)  (1,274 Î¼s, 0.02%)</title><rect x="73.5" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="76.48" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;repositories&quot;)] :: shapeless.HNil,List[org.scalasteward.core.forge.github.Repository] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (2,054 Î¼s, 0.03%)</title><rect x="782.2" y="197" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="785.23" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)]} (id 1722) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,251 Î¼s, 0.02%)</title><rect x="959.6" y="69" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="962.59" y="79.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;body&quot;)],String] :: Long with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)],Long] :: shapeless.HNil]] (id 4794) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (5,768 Î¼s, 0.09%)</title><rect x="551.9" y="213" width="1.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="554.95" y="223.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.github.RepositoriesOut]{type Repr = V} (id 5320) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (846 Î¼s, 0.01%)</title><rect x="782.1" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="785.06" y="207.5" ></text>
</g>
<g >
<title>x$4.type =&gt; ?{def bimap: ?} (expanded macros 0)  (756 Î¼s, 0.01%)</title><rect x="1186.2" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="1189.22" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: None.type :: None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (7,396 Î¼s, 0.12%)</title><rect x="1101.4" y="181" width="1.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1104.37" y="191.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.repoconfig.RepoConfig] (expanded macros 0)  (1,077 Î¼s, 0.02%)</title><rect x="656.0" y="165" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="659.02" y="175.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,List[org.scalasteward.core.data.Resolver.Header] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (2,098 Î¼s, 0.03%)</title><rect x="972.8" y="85" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="975.79" y="95.5" ></text>
</g>
<g >
<title>scala.util.Either[io.circe.DecodingFailure,org.scalasteward.core.forge.gitea.GiteaApiAlg.PRBranchInfo] =&gt; io.circe.Json (expanded macros 0)   (915 Î¼s, 0.01%)</title><rect x="615.8" y="181" width="0.2" height="15.0" fill="rgb(244,114,114)" rx="2" ry="2" />
<text  x="618.84" y="191.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.util.RecordToMap[Option[Boolean] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;runAfterUpgrading&quot;)],Option[Boolean]] :: shapeless.HNil] (expanded macros 0)  (715 Î¼s, 0.01%)</title><rect x="1075.8" y="213" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1078.82" y="223.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Resolver.IvyRepository]{type Out = K} (id 2076) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,665 Î¼s, 0.03%)</title><rect x="973.6" y="133" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="976.57" y="143.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil,Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy] :: Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]] :: List[String] :: List[String] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (9,099 Î¼s, 0.15%)</title><rect x="1054.3" y="117" width="1.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1057.31" y="127.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.git.Sha1] (expanded macros 0)   (694 Î¼s, 0.01%)</title><rect x="600.5" y="165" width="0.2" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="603.52" y="175.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;color&quot;)] :: shapeless.HNil,String :: String :: shapeless.HNil]{type Out = R} (expanded macros 0)  (7,584 Î¼s, 0.12%)</title><rect x="566.6" y="197" width="1.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="569.58" y="207.5" ></text>
</g>
<g >
<title>F[(List[String], String)] =&gt; ?{def map: ?} (expanded macros 0)  (1,815 Î¼s, 0.03%)</title><rect x="41.8" y="245" width="0.3" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="44.78" y="255.5" ></text>
</g>
<g >
<title>to.major.type =&gt; ?{def === : ?} (expanded macros 0)  (714 Î¼s, 0.01%)</title><rect x="1174.8" y="245" width="0.1" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="1177.81" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;dependencyInfos&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;maybeRepoConfig&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;maybeRepoConfigParsingError&quot;)] :: shapeless.HNil,List[org.scalasteward.core.data.Scope[List[org.scalasteward.core.data.DependencyInfo]]] :: Option[org.scalasteward.core.repoconfig.RepoConfig] :: Option[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (4,436 Î¼s, 0.07%)</title><rect x="652.9" y="181" width="0.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="655.86" y="191.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord[org.scalasteward.core.update.artifact.ArtifactChange]{type Out = D} (expanded macros 0)  (3,422 Î¼s, 0.06%)</title><rect x="1157.3" y="213" width="0.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1160.32" y="223.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.Validate[String,eu.timepit.refined.boolean.And[eu.timepit.refined.collection.Forall[eu.timepit.refined.boolean.Or[eu.timepit.refined.char.Digit,eu.timepit.refined.boolean.And[eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less['a']],eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Greater['f']]]]],eu.timepit.refined.collection.Size[eu.timepit.refined.generic.Equal[40]]]] (expanded macros 0)  (13,321 Î¼s, 0.22%)</title><rect x="354.4" y="229" width="2.6" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="357.40" y="239.5" ></text>
</g>
<g >
<title>shapeless.Annotations[io.circe.generic.extras.JsonKey,org.scalasteward.core.repoconfig.RepoConfig]{type Out = K} (id 7935) (expanded macros 3) (tree from `shapeless.AnnotationMacros.materializeVariableAnnotations`)  (1,366 Î¼s, 0.02%)</title><rect x="1047.4" y="213" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1050.35" y="223.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[List[org.scalasteward.core.forge.bitbucket.Reviewer] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;values&quot;)],List[org.scalasteward.core.forge.bitbucket.Reviewer]] :: shapeless.HNil]] (id 3692) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (7,753 Î¼s, 0.13%)</title><rect x="513.5" y="213" width="1.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="516.46" y="223.5" ></text>
</g>
<g >
<title>F[List[org.scalasteward.core.forge.github.InstallationOut]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (1,229 Î¼s, 0.02%)</title><rect x="75.3" y="245" width="0.3" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="78.35" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[org.scalasteward.core.util.Timestamp with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;updatedAt&quot;)],org.scalasteward.core.util.Timestamp] :: List[org.scalasteward.core.data.Version] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;versions&quot;)],List[org.scalasteward.core.data.Version]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;maybeError&quot;)],Option[String]] :: shapeless.HNil]] (id 1330) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (59,028 Î¼s, 0.96%)</title><rect x="437.5" y="213" width="11.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="440.46" y="223.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.forge.data.PullRequestOut] (expanded macros 0)  (4,875 Î¼s, 0.08%)</title><rect x="371.0" y="245" width="0.9" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="373.99" y="255.5" ></text>
</g>
<g >
<title>s.type =&gt; ?{def === : ?} (expanded macros 0)  (631 Î¼s, 0.01%)</title><rect x="413.4" y="245" width="0.1" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="416.40" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.data.CommitOut]] (id 4310) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (22,748 Î¼s, 0.37%)</title><rect x="742.3" y="245" width="4.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="745.25" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;locked&quot;)]} (id 4050) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (897 Î¼s, 0.01%)</title><rect x="851.1" y="69" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="854.13" y="79.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.buildtool.sbt.data.SbtVersion] (expanded macros 0)  (2,036 Î¼s, 0.03%)</title><rect x="479.1" y="165" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="482.07" y="175.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[String]] (expanded macros 0)  (1,188 Î¼s, 0.02%)</title><rect x="478.7" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="481.73" y="191.5" ></text>
</g>
<g >
<title>List[org.http4s.Uri] =&gt; ?{def traverse: ?} (expanded macros 0)  (917 Î¼s, 0.01%)</title><rect x="169.9" y="245" width="0.2" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="172.93" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;description&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;open&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;closed&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;fromRef&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;toRef&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;locked&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: shapeless.HNil,String :: org.scalasteward.core.forge.data.PullRequestState :: Boolean :: Boolean :: org.scalasteward.core.forge.bitbucketserver.Json.Ref :: org.scalasteward.core.forge.bitbucketserver.Json.Ref :: Boolean :: List[org.scalasteward.core.forge.bitbucketserver.Json.Reviewer] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (13,273 Î¼s, 0.22%)</title><rect x="849.2" y="181" width="2.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="852.18" y="191.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.repoconfig.RepoConfig]{type Repr = R} (expanded macros 0)  (1,934 Î¼s, 0.03%)</title><rect x="1049.9" y="213" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1052.93" y="223.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.gitea.GiteaApiAlg.AttachLabelReq]] (id 4836) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (26,585 Î¼s, 0.43%)</title><rect x="536.5" y="245" width="5.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="539.49" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[String]] (expanded macros 0)  (3,077 Î¼s, 0.05%)</title><rect x="447.2" y="181" width="0.6" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="450.20" y="191.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.ReprAsObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)],String] :: org.scalasteward.core.forge.bitbucketserver.Json.Repository with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;repository&quot;)],org.scalasteward.core.forge.bitbucketserver.Json.Repository] :: shapeless.HNil]] (id 4163) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (3,366 Î¼s, 0.05%)</title><rect x="856.3" y="213" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="859.25" y="223.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.forge.bitbucketserver.Json.PR] (expanded macros 0)  (2,445 Î¼s, 0.04%)</title><rect x="368.5" y="229" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="371.45" y="239.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitea.GiteaApiAlg.Label]{type Out = K} (id 4803) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (4,485 Î¼s, 0.07%)</title><rect x="588.8" y="197" width="0.9" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="591.83" y="207.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.data.RepoData] =&gt; ?{def map: ?} (expanded macros 0)  (532 Î¼s, 0.01%)</title><rect x="129.9" y="245" width="0.1" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="132.88" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.nurture.PullRequestRepository.Entry] (expanded macros 0)  (9,963 Î¼s, 0.16%)</title><rect x="341.0" y="229" width="1.9" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="343.95" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;archived&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;clone_url&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;default_branch&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;parent&quot;)] :: shapeless.HNil,Boolean :: org.http4s.Uri :: String :: Option[org.scalasteward.core.forge.gitea.GiteaApiAlg.Repository] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (11,794 Î¼s, 0.19%)</title><rect x="623.3" y="133" width="2.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="626.26" y="143.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil,Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy] :: Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]] :: List[String] :: List[String] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (6,597 Î¼s, 0.11%)</title><rect x="1058.7" y="117" width="1.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1061.73" y="127.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.forge.bitbucketserver.Json.Repository] (expanded macros 0)  (12,542 Î¼s, 0.20%)</title><rect x="857.6" y="229" width="2.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="860.60" y="239.5" ></text>
</g>
<g >
<title>io.circe.Encoder[List[org.scalasteward.core.forge.azurerepos.AzureComment]] (expanded macros 0)  (604 Î¼s, 0.01%)</title><rect x="837.4" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="840.44" y="191.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.data.Version] (expanded macros 0)  (3,294 Î¼s, 0.05%)</title><rect x="811.5" y="165" width="0.6" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="814.48" y="175.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[String]] (expanded macros 0)  (859 Î¼s, 0.01%)</title><rect x="655.8" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="658.79" y="191.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.data.BranchOut]{type Repr = R} (expanded macros 0)  (9,356 Î¼s, 0.15%)</title><rect x="736.4" y="213" width="1.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="739.42" y="223.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[org.scalasteward.core.data.Update.Single] (expanded macros 0)  (904 Î¼s, 0.01%)</title><rect x="279.2" y="245" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="282.15" y="255.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.git.Sha1] (expanded macros 0)   (660 Î¼s, 0.01%)</title><rect x="601.0" y="165" width="0.1" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="604.00" y="175.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.data.Resolver.IvyRepository] (expanded macros 0)   (1,916 Î¼s, 0.03%)</title><rect x="929.4" y="181" width="0.4" height="15.0" fill="rgb(236,103,103)" rx="2" ry="2" />
<text  x="932.42" y="191.5" ></text>
</g>
<g >
<title>cats.effect.kernel.Async[F] (expanded macros 0)  (1,370 Î¼s, 0.02%)</title><rect x="258.1" y="245" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="261.08" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[org.scalasteward.core.git.Branch]] (expanded macros 0)  (1,559 Î¼s, 0.03%)</title><rect x="348.2" y="245" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="351.21" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;executionOrder&quot;)]} (id 2775) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,357 Î¼s, 0.02%)</title><rect x="699.5" y="53" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="702.53" y="63.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.data.UserOut]{type Out = K} (id 4491) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (721 Î¼s, 0.01%)</title><rect x="760.2" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="763.19" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[org.scalasteward.core.buildtool.sbt.data.SbtVersion]] (expanded macros 0)  (2,739 Î¼s, 0.04%)</title><rect x="476.5" y="181" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="479.51" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;base&quot;)]} (id 4682) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,354 Î¼s, 0.02%)</title><rect x="612.9" y="117" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="615.89" y="127.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;description&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;labels&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;assignee_ids&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewer_ids&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;target_project_id&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;remove_source_branch&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;source_branch&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;target_branch&quot;)] :: shapeless.HNil,String :: String :: Option[List[String]] :: Option[List[Int]] :: Option[List[Int]] :: Long :: Option[Boolean] :: String :: org.scalasteward.core.git.Branch :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (14,683 Î¼s, 0.24%)</title><rect x="883.4" y="181" width="2.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="886.39" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucketserver.Json.DefaultReviewer]{type Repr = V} (expanded macros 3)   (2,883 Î¼s, 0.05%)</title><rect x="716.5" y="197" width="0.5" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="719.49" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;groupId&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;artifactId&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;version&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;sbtVersion&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;scalaVersion&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;configurations&quot;)] :: shapeless.HNil,org.scalasteward.core.data.GroupId :: org.scalasteward.core.data.ArtifactId :: org.scalasteward.core.data.Version :: Option[org.scalasteward.core.buildtool.sbt.data.SbtVersion] :: Option[org.scalasteward.core.buildtool.sbt.data.ScalaVersion] :: Option[String] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (14,818 Î¼s, 0.24%)</title><rect x="471.0" y="197" width="2.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="474.02" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Map[org.http4s.Uri,org.scalasteward.core.nurture.PullRequestRepository.Entry]] (expanded macros 0)  (17,503 Î¼s, 0.28%)</title><rect x="378.2" y="245" width="3.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="381.23" y="255.5" ></text>
</g>
<g >
<title>cats.kernel.Semigroup[Option[org.scalasteward.core.repoconfig.RepoConfig]] (expanded macros 0)  (970 Î¼s, 0.02%)</title><rect x="390.7" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="393.66" y="239.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[org.scalasteward.core.data.GroupId with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;groupId&quot;)],org.scalasteward.core.data.GroupId] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;artifactId&quot;)],Option[String]] :: Option[org.scalasteward.core.repoconfig.VersionPattern] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;version&quot;)],Option[org.scalasteward.core.repoconfig.VersionPattern]] :: shapeless.HNil] (id 8190) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (8,673 Î¼s, 0.14%)</title><rect x="664.1" y="197" width="1.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="667.10" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;artifactId&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;command&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;commitMessage&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;addToGitBlameIgnoreRevs&quot;)] :: shapeless.HNil,Option[String] :: cats.data.NonEmptyList[String] :: String :: Option[Boolean] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (3,667 Î¼s, 0.06%)</title><rect x="1010.8" y="181" width="0.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1013.84" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)]} (id 1971) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (977 Î¼s, 0.02%)</title><rect x="990.2" y="85" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="993.22" y="95.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.bitbucketserver.Json.Repo]] (id 4167) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (17,821 Î¼s, 0.29%)</title><rect x="732.2" y="245" width="3.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="735.18" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[cats.data.NonEmptyList[org.scalasteward.core.data.Version]] (expanded macros 0)  (4,372 Î¼s, 0.07%)</title><rect x="811.3" y="181" width="0.8" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="814.28" y="191.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.repoconfig.VersionPattern] (expanded macros 0)  (14,227 Î¼s, 0.23%)</title><rect x="891.6" y="229" width="2.7" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="894.61" y="239.5" ></text>
</g>
<g >
<title>shapeless.Annotations[io.circe.generic.extras.JsonKey,org.scalasteward.core.repoconfig.ScalafmtConfig]{type Out = K} (id 8160) (expanded macros 3) (tree from `shapeless.AnnotationMacros.materializeVariableAnnotations`)  (541 Î¼s, 0.01%)</title><rect x="1076.0" y="213" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1078.96" y="223.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.repoconfig.CommitsConfig]{type Repr = R} (expanded macros 0)  (3,703 Î¼s, 0.06%)</title><rect x="1001.0" y="213" width="0.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1004.00" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;archived&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;clone_url&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;default_branch&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;parent&quot;)] :: shapeless.HNil,String :: Boolean :: org.http4s.Uri :: String :: Option[org.scalasteward.core.forge.gitea.GiteaApiAlg.Repository] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (14,351 Î¼s, 0.23%)</title><rect x="622.8" y="149" width="2.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="625.77" y="159.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;message&quot;)] :: shapeless.HNil,Option[String] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (1,274 Î¼s, 0.02%)</title><rect x="1000.8" y="197" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1003.75" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.edit.scalafix.ScalafixMigration]{type Out = K} (id 2761) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (2,691 Î¼s, 0.04%)</title><rect x="693.5" y="197" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="696.54" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)]} (id 1893) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,020 Î¼s, 0.02%)</title><rect x="947.8" y="85" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="950.78" y="95.5" ></text>
</g>
<g >
<title>cats.effect.kernel.Sync[[x]F[x]] (expanded macros 0)  (711 Î¼s, 0.01%)</title><rect x="323.0" y="213" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="325.96" y="223.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;description&quot;)]} (id 3396) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,074 Î¼s, 0.02%)</title><rect x="842.5" y="117" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="845.52" y="127.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.forge.bitbucket.DefaultReviewers] (expanded macros 0)  (2,178 Î¼s, 0.04%)</title><rect x="362.4" y="245" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="365.44" y="255.5" ></text>
</g>
<g >
<title>org.http4s.QueryParamKeyLike[String] (expanded macros 0)  (1,818 Î¼s, 0.03%)</title><rect x="396.3" y="245" width="0.4" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="399.34" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[Option[org.scalasteward.core.repoconfig.PullRequestFrequency] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;frequency&quot;)],Option[org.scalasteward.core.repoconfig.PullRequestFrequency]] :: List[org.scalasteward.core.repoconfig.PullRequestGroup] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;grouping&quot;)],List[org.scalasteward.core.repoconfig.PullRequestGroup]] :: Option[scala.util.matching.Regex] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;includeMatchedLabels&quot;)],Option[scala.util.matching.Regex]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;customLabels&quot;)],List[String]] :: shapeless.HNil]{type Out = F} (expanded macros 0)  (8,870 Î¼s, 0.14%)</title><rect x="1039.4" y="213" width="1.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1042.44" y="223.5" ></text>
</g>
<g >
<title>g.updates.type =&gt; ?{def fproduct: ?} (expanded macros 0)  (1,844 Î¼s, 0.03%)</title><rect x="327.0" y="245" width="0.3" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="329.97" y="255.5" ></text>
</g>
<g >
<title>repo.full_name.type =&gt; ?{def split(x$1: ? &gt;: Char('/')): ?} (expanded macros 0)  (710 Î¼s, 0.01%)</title><rect x="410.9" y="245" width="0.2" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="413.92" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[String]] (expanded macros 0)  (1,152 Î¼s, 0.02%)</title><rect x="827.7" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="830.69" y="191.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.coursier.VersionsCache.Value] (expanded macros 0)  (4,765 Î¼s, 0.08%)</title><rect x="358.0" y="245" width="1.0" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="361.05" y="255.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.RefType[F] (expanded macros 0)   (542 Î¼s, 0.01%)</title><rect x="149.6" y="229" width="0.1" height="15.0" fill="rgb(236,103,103)" rx="2" ry="2" />
<text  x="152.56" y="239.5" ></text>
</g>
<g >
<title>x$1.type =&gt; ?{def === : ?} (expanded macros 0)  (1,920 Î¼s, 0.03%)</title><rect x="1180.6" y="245" width="0.4" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="1183.63" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;artifactId&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;command&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;commitMessage&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;addToGitBlameIgnoreRevs&quot;)] :: shapeless.HNil,Option[String] :: cats.data.NonEmptyList[String] :: String :: Option[Boolean] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (3,836 Î¼s, 0.06%)</title><rect x="1009.0" y="181" width="0.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1011.99" y="191.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucketserver.Json.Project]{type Out = K} (id 4140) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (765 Î¼s, 0.01%)</title><rect x="523.1" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="526.10" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.coursier.VersionsCache.Value]{type Out = K} (id 1318) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (10,467 Î¼s, 0.17%)</title><rect x="426.6" y="197" width="2.0" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="429.57" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)] :: shapeless.HNil,String :: Option[String] :: List[org.scalasteward.core.data.Update.ForArtifactId] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (10,663 Î¼s, 0.17%)</title><rect x="686.8" y="197" width="2.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="689.77" y="207.5" ></text>
</g>
<g >
<title>x$4.render.type =&gt; ?{def === : ?} (expanded macros 0)  (1,093 Î¼s, 0.02%)</title><rect x="1185.9" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="1188.93" y="255.5" ></text>
</g>
<g >
<title>String =&gt; Iterable[_] (expanded macros 0)  (962 Î¼s, 0.02%)</title><rect x="315.1" y="229" width="0.2" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="318.12" y="239.5" ></text>
</g>
<g >
<title>hook.command.type =&gt; ?{def mkString_(x$1: ? &gt;: String(&quot; &quot;)): ?} (expanded macros 0)  (865 Î¼s, 0.01%)</title><rect x="328.6" y="245" width="0.2" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="331.64" y="255.5" ></text>
</g>
<g >
<title>shapeless.Annotations[io.circe.generic.extras.JsonKey,org.scalasteward.core.data.Resolver.IvyRepository]{type Out = K} (id 1914) (expanded macros 3) (tree from `shapeless.AnnotationMacros.materializeVariableAnnotations`)  (1,636 Î¼s, 0.03%)</title><rect x="931.0" y="149" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="934.04" y="159.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.coursier.VersionsCache.Value] (expanded macros 0)  (126,869 Î¼s, 2.06%)</title><rect x="424.5" y="229" width="24.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="427.48" y="239.5" >i..</text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)]} (id 7649) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (627 Î¼s, 0.01%)</title><rect x="1059.5" y="53" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1062.53" y="63.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.forge.data.PullRequestNumber] (expanded macros 0)   (610 Î¼s, 0.01%)</title><rect x="641.8" y="149" width="0.1" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="644.82" y="159.5" ></text>
</g>
<g >
<title>cutoff.type =&gt; ?{def === : ?} (expanded macros 0)  (1,473 Î¼s, 0.02%)</title><rect x="303.5" y="245" width="0.3" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="306.47" y="255.5" ></text>
</g>
<g >
<title>(=&gt; scala.collection.immutable.LazyList[List[org.scalasteward.core.edit.update.data.VersionPosition]]) =&gt; ?{def #:: : ?} (expanded macros 0)  (946 Î¼s, 0.02%)</title><rect x="23.5" y="245" width="0.1" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="26.46" y="255.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[String] (expanded macros 0)  (807 Î¼s, 0.01%)</title><rect x="1180.3" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1183.27" y="239.5" ></text>
</g>
<g >
<title>up.version.type =&gt; ?{def === : ?} (expanded macros 0)  (2,729 Î¼s, 0.04%)</title><rect x="1175.3" y="245" width="0.6" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="1178.33" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.data.Resolver.Credentials]] (id 1637) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (28,524 Î¼s, 0.46%)</title><rect x="481.1" y="245" width="5.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="484.07" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;assignee&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;base&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;body&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;due_date&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;head&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;labels&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;milestone&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: shapeless.HNil,Option[String] :: Option[Vector[String]] :: Option[String] :: Option[String] :: Option[String] :: Option[String] :: Option[Vector[Int]] :: Option[Int] :: Option[String] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (26,498 Î¼s, 0.43%)</title><rect x="574.4" y="197" width="5.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="577.42" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;target&quot;)]} (id 2776) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (980 Î¼s, 0.02%)</title><rect x="699.2" y="69" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="702.20" y="79.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;labels&quot;)] :: shapeless.HNil,Vector[Int] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (5,077 Î¼s, 0.08%)</title><rect x="539.4" y="197" width="1.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="542.45" y="207.5" ></text>
</g>
<g >
<title>cats.effect.kernel.MonadCancel[F,Throwable] (expanded macros 0)  (3,773 Î¼s, 0.06%)</title><rect x="267.0" y="245" width="0.7" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="269.95" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[String] (expanded macros 0)  (553 Î¼s, 0.01%)</title><rect x="378.1" y="229" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="381.12" y="239.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.GroupRepoConfig]{type Repr = V} (expanded macros 3)   (1,156 Î¼s, 0.02%)</title><rect x="659.2" y="197" width="0.2" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="662.16" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;sha&quot;)] :: shapeless.HNil,org.scalasteward.core.git.Sha1 :: shapeless.HNil]{type Out = R} (expanded macros 0)  (2,045 Î¼s, 0.03%)</title><rect x="744.7" y="197" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="747.67" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;number&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: shapeless.HNil,org.scalasteward.core.forge.data.PullRequestNumber :: String :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (2,571 Î¼s, 0.04%)</title><rect x="750.1" y="165" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="753.07" y="175.5" ></text>
</g>
<g >
<title>F[(Unit, String)] =&gt; ?{def flatMap: ?} (expanded macros 0)  (1,427 Î¼s, 0.02%)</title><rect x="46.2" y="245" width="0.3" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="49.23" y="255.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[org.scalasteward.core.forge.data.PullRequestState] (expanded macros 0)  (921 Î¼s, 0.01%)</title><rect x="280.1" y="245" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="283.14" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;locked&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: shapeless.HNil,Boolean :: List[org.scalasteward.core.forge.bitbucketserver.Json.Reviewer] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (3,723 Î¼s, 0.06%)</title><rect x="851.0" y="85" width="0.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="854.01" y="95.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.repoconfig.CommitsConfig] (expanded macros 0)  (823 Î¼s, 0.01%)</title><rect x="1064.9" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1067.93" y="191.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.git.Branch] (expanded macros 0)  (5,334 Î¼s, 0.09%)</title><rect x="373.9" y="245" width="1.0" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="376.89" y="255.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.data.Update.ForArtifactId]{type Repr = R} (expanded macros 0)  (28,665 Î¼s, 0.46%)</title><rect x="667.4" y="213" width="5.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="670.39" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil,Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]] :: List[String] :: List[String] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (7,653 Î¼s, 0.12%)</title><rect x="1054.6" y="101" width="1.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1057.58" y="111.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;text&quot;)],String] :: shapeless.HNil] (id 3982) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (4,192 Î¼s, 0.07%)</title><rect x="521.1" y="197" width="0.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="524.07" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;crossDependency&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;newerVersions&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;newerGroupId&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;newerArtifactId&quot;)] :: shapeless.HNil,org.scalasteward.core.data.CrossDependency :: cats.data.NonEmptyList[org.scalasteward.core.data.Version] :: Option[org.scalasteward.core.data.GroupId] :: Option[String] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (14,850 Î¼s, 0.24%)</title><rect x="670.0" y="197" width="2.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="673.03" y="207.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.RefType[F] (expanded macros 0)   (564 Î¼s, 0.01%)</title><rect x="46.0" y="229" width="0.1" height="15.0" fill="rgb(236,103,103)" rx="2" ry="2" />
<text  x="49.02" y="239.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.util.Timestamp] (expanded macros 0)   (1,384 Î¼s, 0.02%)</title><rect x="448.2" y="165" width="0.3" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="451.25" y="175.5" ></text>
</g>
<g >
<title>ScalafixMigration.this.authors.type =&gt; ?{def foldMap: ?} (expanded macros 0)  (553 Î¼s, 0.01%)</title><rect x="178.0" y="245" width="0.1" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="181.03" y="255.5" ></text>
</g>
<g >
<title>((Nothing, Nothing)) =&gt; org.http4s.QueryParam[?T] (expanded macros 0)   (3,645 Î¼s, 0.06%)</title><rect x="13.2" y="245" width="0.7" height="15.0" fill="rgb(241,111,111)" rx="2" ry="2" />
<text  x="16.23" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.ReprDecoder[cats.data.NonEmptyList[org.scalasteward.core.data.Update.ForArtifactId] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;forArtifactIds&quot;)],cats.data.NonEmptyList[org.scalasteward.core.data.Update.ForArtifactId]] :: shapeless.HNil] (id 2446) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveDecoder`)  (6,043 Î¼s, 0.10%)</title><rect x="681.7" y="197" width="1.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="684.70" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)],Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]]] :: Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)],Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy]] :: Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)],Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)],List[String]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)],List[String]] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)],List[org.scalasteward.core.repoconfig.GroupRepoConfig]] :: shapeless.HNil] (expanded macros 0)  (8,750 Î¼s, 0.14%)</title><rect x="1073.2" y="149" width="1.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1076.23" y="159.5" ></text>
</g>
<g >
<title>to.minor.type =&gt; ?{def =!= : ?} (expanded macros 0)  (756 Î¼s, 0.01%)</title><rect x="1174.9" y="245" width="0.2" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="1177.95" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;login&quot;)]} (id 4531) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,559 Î¼s, 0.03%)</title><rect x="631.6" y="181" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="634.65" y="191.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.bitbucket.Reviewer]{type Repr = R} (expanded macros 0)  (7,737 Î¼s, 0.13%)</title><rect x="515.8" y="213" width="1.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="518.81" y="223.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.azurerepos.PullRequestPayload]{type Out = K} (id 3388) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,791 Î¼s, 0.03%)</title><rect x="839.7" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="842.74" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;maybeError&quot;)] :: shapeless.HNil,Option[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (13,732 Î¼s, 0.22%)</title><rect x="434.8" y="165" width="2.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="437.83" y="175.5" ></text>
</g>
<g >
<title>replacementsByPath.type =&gt; ?{def traverse_: ?} (expanded macros 0)  (776 Î¼s, 0.01%)</title><rect x="410.8" y="245" width="0.1" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="413.77" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.azurerepos.AzureComment]{type Out = K} (id 3425) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (990 Î¼s, 0.02%)</title><rect x="828.9" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="831.95" y="207.5" ></text>
</g>
<g >
<title>cats.Foldable[F] (expanded macros 0)   (2,120 Î¼s, 0.03%)</title><rect x="397.5" y="229" width="0.4" height="15.0" fill="rgb(220,80,80)" rx="2" ry="2" />
<text  x="400.50" y="239.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[None.type :: None.type :: None.type :: Some[List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;pattern&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil]{type Out = Rec} (expanded macros 0)  (2,895 Î¼s, 0.05%)</title><rect x="931.5" y="133" width="0.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="934.53" y="143.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.util.RecordToMap[Option[org.scalasteward.core.repoconfig.PullRequestFrequency] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;frequency&quot;)],Option[org.scalasteward.core.repoconfig.PullRequestFrequency]] :: List[org.scalasteward.core.repoconfig.PullRequestGroup] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;grouping&quot;)],List[org.scalasteward.core.repoconfig.PullRequestGroup]] :: Option[scala.util.matching.Regex] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;includeMatchedLabels&quot;)],Option[scala.util.matching.Regex]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;customLabels&quot;)],List[String]] :: shapeless.HNil] (expanded macros 0)  (6,232 Î¼s, 0.10%)</title><rect x="1020.2" y="213" width="1.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1023.25" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;pullRequests&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;scalafmt&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil,org.scalasteward.core.repoconfig.PullRequestsConfig :: org.scalasteward.core.repoconfig.ScalafmtConfig :: org.scalasteward.core.repoconfig.UpdatesConfig :: Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]] :: Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy] :: Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]] :: List[String] :: List[String] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (15,127 Î¼s, 0.25%)</title><rect x="1053.2" y="181" width="2.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1056.15" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;prefix&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;suffix&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;exact&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;contains&quot;)] :: shapeless.HNil,Option[String] :: Option[String] :: Option[String] :: Option[String] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (4,977 Î¼s, 0.08%)</title><rect x="798.4" y="197" width="0.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="801.37" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (963 Î¼s, 0.02%)</title><rect x="557.3" y="165" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="560.34" y="175.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;key&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;value&quot;)] :: shapeless.HNil,String :: String :: shapeless.HNil]{type Out = R} (expanded macros 0)  (4,461 Î¼s, 0.07%)</title><rect x="489.9" y="197" width="0.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="492.89" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)]} (id 4512) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,601 Î¼s, 0.03%)</title><rect x="556.5" y="181" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="559.47" y="191.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord[org.scalasteward.core.repoconfig.ScalafmtConfig]{type Out = D} (expanded macros 0)  (2,153 Î¼s, 0.03%)</title><rect x="1076.1" y="213" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1079.06" y="223.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.azurerepos.PullRequestCommentPayload]{type Repr = V} (id 3442) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,328 Î¼s, 0.02%)</title><rect x="835.7" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="838.73" y="207.5" ></text>
</g>
<g >
<title>F[Either[Throwable,Unit]] =&gt; ?{def map: ?} (expanded macros 0)  (2,646 Î¼s, 0.04%)</title><rect x="56.6" y="245" width="0.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="59.59" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;migrations&quot;)]} (id 2852) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (961 Î¼s, 0.02%)</title><rect x="1152.3" y="181" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1155.32" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;scalafmt&quot;)]} (id 7848) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (687 Î¼s, 0.01%)</title><rect x="1046.9" y="165" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1049.94" y="175.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Boolean] (expanded macros 0)  (568 Î¼s, 0.01%)</title><rect x="758.1" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="761.11" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)]} (id 5488) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (796 Î¼s, 0.01%)</title><rect x="883.5" y="165" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="886.53" y="175.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Resolver.MavenRepository]{type Out = K} (id 1961) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,793 Î¼s, 0.03%)</title><rect x="987.8" y="133" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="990.82" y="143.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[org.scalasteward.core.data.Resolver.Credentials]] (expanded macros 0)  (10,070 Î¼s, 0.16%)</title><rect x="345.6" y="245" width="1.9" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="348.59" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.RepoConfig]{type Repr = V} (expanded macros 3)   (2,078 Î¼s, 0.03%)</title><rect x="1056.7" y="197" width="0.4" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="1059.74" y="207.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.forge.data.RepoOut] =&gt; ?{def map: ?} (expanded macros 0)  (2,371 Î¼s, 0.04%)</title><rect x="136.3" y="245" width="0.4" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="139.27" y="255.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.data.CrossDependency] (expanded macros 0)   (1,062 Î¼s, 0.02%)</title><rect x="353.2" y="213" width="0.2" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="356.17" y="223.5" ></text>
</g>
<g >
<title>io.circe.Decoder[List[org.scalasteward.core.data.Resolver.Header]] (expanded macros 0)  (6,985 Î¼s, 0.11%)</title><rect x="343.5" y="229" width="1.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="346.46" y="239.5" ></text>
</g>
<g >
<title>F[List[org.scalasteward.core.edit.EditAttempt]] =&gt; ?{def map: ?} (expanded macros 0)  (2,012 Î¼s, 0.03%)</title><rect x="72.7" y="245" width="0.4" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="75.69" y="255.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.data.Resolver.Header]{type Repr = R} (expanded macros 0)  (14,164 Î¼s, 0.23%)</title><rect x="488.0" y="213" width="2.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="491.03" y="223.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.bitbucketserver.Json.Link]{type Repr = R} (expanded macros 0)  (11,974 Î¼s, 0.19%)</title><rect x="719.7" y="213" width="2.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="722.68" y="223.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)]} (id 4049) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,145 Î¼s, 0.02%)</title><rect x="851.4" y="53" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="854.43" y="63.5" ></text>
</g>
<g >
<title>shapeless.Lub[Symbol with shapeless.tag.Tagged[String(&quot;pullRequests&quot;)],Symbol with shapeless.tag.Tagged[_ &gt;: String(&quot;dependencyOverrides&quot;) with String(&quot;reviewers&quot;) with String(&quot;assignees&quot;) with String(&quot;buildRoots&quot;) with String(&quot;updatePullRequests&quot;) with String(&quot;postUpdateHooks&quot;) with String(&quot;updates&quot;) with String(&quot;scalafmt&quot;) &lt;: String],Lub0] (expanded macros 0)  (1,252 Î¼s, 0.02%)</title><rect x="1068.4" y="181" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1071.41" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (3,354 Î¼s, 0.05%)</title><rect x="978.7" y="117" width="0.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="981.69" y="127.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;body&quot;)],String] :: shapeless.HNil] (id 4307) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (3,968 Î¼s, 0.06%)</title><rect x="535.7" y="197" width="0.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="538.73" y="207.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[String] (expanded macros 0)  (923 Î¼s, 0.01%)</title><rect x="318.5" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="321.53" y="239.5" ></text>
</g>
<g >
<title>eu.timepit.refined.internal.WitnessAs[shapeless._0,Int] (expanded macros 0)  (2,190 Î¼s, 0.04%)</title><rect x="312.0" y="213" width="0.4" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="315.02" y="223.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.decoding.ReprDecoder[Option[org.scalasteward.core.data.GroupId] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;groupIdBefore&quot;)],Option[org.scalasteward.core.data.GroupId]] :: org.scalasteward.core.data.GroupId with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;groupIdAfter&quot;)],org.scalasteward.core.data.GroupId] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;artifactIdBefore&quot;)],Option[String]] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;artifactIdAfter&quot;)],String] :: shapeless.HNil] (id 8746) (expanded macros 3) (tree from `io.circe.generic.extras.ConfigurableDeriver.deriveConfiguredDecoder`)  (5,767 Î¼s, 0.09%)</title><rect x="1161.2" y="197" width="1.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1164.19" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)]} (id 2462) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,596 Î¼s, 0.03%)</title><rect x="825.1" y="181" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="828.06" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;configurations&quot;)] :: shapeless.HNil,Option[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (3,211 Î¼s, 0.05%)</title><rect x="473.2" y="117" width="0.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="476.24" y="127.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.bitbucketserver.Json.PR]] (id 4090) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (32,225 Î¼s, 0.52%)</title><rect x="723.0" y="245" width="6.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="726.04" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucketserver.Json.Repository]{type Repr = V} (id 4193) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,175 Î¼s, 0.02%)</title><rect x="858.6" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="861.58" y="207.5" ></text>
</g>
<g >
<title>F[(better.files.File, org.http4s.Uri.UserInfo, String, String)] =&gt; ?{def flatMap: ?} (expanded macros 0)  (3,560 Î¼s, 0.06%)</title><rect x="48.8" y="245" width="0.7" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="51.84" y="255.5" ></text>
</g>
<g >
<title>mergeRequest.type =&gt; ?{def flatMap: ?} (expanded macros 0)  (620 Î¼s, 0.01%)</title><rect x="390.8" y="245" width="0.2" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="393.85" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;migrations&quot;)]} (id 2861) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (825 Î¼s, 0.01%)</title><rect x="1153.5" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1156.46" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;raw&quot;)] :: shapeless.HNil,String :: shapeless.HNil]{type Out = R} (expanded macros 0)  (1,607 Î¼s, 0.03%)</title><rect x="506.2" y="197" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="509.22" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.DependencyInfo]{type Out = K} (id 1594) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,618 Î¼s, 0.03%)</title><rect x="458.9" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="461.90" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lub[Symbol with shapeless.tag.Tagged[String(&quot;pattern&quot;)],Symbol with shapeless.tag.Tagged[_ &gt;: String(&quot;headers&quot;) with String(&quot;credentials&quot;) &lt;: String],Lub0] (expanded macros 0)  (2,153 Î¼s, 0.03%)</title><rect x="945.2" y="117" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="948.15" y="127.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Resolver.IvyRepository]{type Out = K} (id 1837) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,809 Î¼s, 0.03%)</title><rect x="936.6" y="133" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="939.61" y="143.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucketserver.Json.DefaultReviewer]{type Out = K} (id 4005) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,329 Î¼s, 0.02%)</title><rect x="716.2" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="719.24" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)]} (id 7862) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (647 Î¼s, 0.01%)</title><rect x="1046.1" y="53" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1049.06" y="63.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;version&quot;)] :: shapeless.HNil,Option[org.scalasteward.core.repoconfig.VersionPattern] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,486 Î¼s, 0.02%)</title><rect x="663.7" y="165" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="666.73" y="175.5" ></text>
</g>
<g >
<title>io.circe.Encoder[List[org.scalasteward.core.data.Scope[List[org.scalasteward.core.data.DependencyInfo]]]] (expanded macros 0)  (5,458 Î¼s, 0.09%)</title><rect x="656.4" y="181" width="1.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="659.43" y="191.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.data.Resolver.MavenRepository] (expanded macros 0)   (2,172 Î¼s, 0.04%)</title><rect x="929.8" y="181" width="0.4" height="15.0" fill="rgb(236,103,103)" rx="2" ry="2" />
<text  x="932.79" y="191.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Resolver.MavenRepository]{type Out = K} (id 1700) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,962 Î¼s, 0.03%)</title><rect x="954.1" y="133" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="957.11" y="143.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.PostUpdateHookConfig]{type Repr = V} (expanded macros 3)   (3,614 Î¼s, 0.06%)</title><rect x="1007.8" y="197" width="0.7" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="1010.76" y="207.5" ></text>
</g>
<g >
<title>x$3.type =&gt; ?{def === : ?} (expanded macros 0)  (2,055 Î¼s, 0.03%)</title><rect x="1184.8" y="245" width="0.4" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="1187.82" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (4,948 Î¼s, 0.08%)</title><rect x="978.4" y="133" width="0.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="981.38" y="143.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.data.PullRequestOut]] (id 4377) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (28,467 Î¼s, 0.46%)</title><rect x="746.6" y="245" width="5.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="749.61" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucketserver.Json.Condition]{type Out = K} (id 3988) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,102 Î¼s, 0.02%)</title><rect x="712.5" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="715.55" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.edit.scalafix.ScalafixMigrations]{type Repr = V} (id 2849) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,243 Î¼s, 0.02%)</title><rect x="1151.8" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1154.81" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[org.scalasteward.core.git.Sha1 with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;sha1&quot;)],org.scalasteward.core.git.Sha1] :: List[org.scalasteward.core.data.Scope[List[org.scalasteward.core.data.DependencyInfo]]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;dependencyInfos&quot;)],List[org.scalasteward.core.data.Scope[List[org.scalasteward.core.data.DependencyInfo]]]] :: Option[org.scalasteward.core.repoconfig.RepoConfig] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;maybeRepoConfig&quot;)],Option[org.scalasteward.core.repoconfig.RepoConfig]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;maybeRepoConfigParsingError&quot;)],Option[String]] :: shapeless.HNil] (id 6861) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (21,838 Î¼s, 0.35%)</title><rect x="653.8" y="197" width="4.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="656.82" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.codec.UnwrappedCodec[org.scalasteward.core.buildtool.sbt.data.ScalaVersion] (expanded macros 0)  (9,183 Î¼s, 0.15%)</title><rect x="1118.2" y="229" width="1.8" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1121.24" y="239.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitea.GiteaApiAlg.BranchResp]{type Repr = V} (id 4619) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,801 Î¼s, 0.03%)</title><rect x="544.2" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="547.19" y="207.5" ></text>
</g>
<g >
<title>cats.kernel.Order[String] (expanded macros 0)  (534 Î¼s, 0.01%)</title><rect x="208.3" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="211.31" y="239.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]]] (expanded macros 0)  (5,535 Î¼s, 0.09%)</title><rect x="1098.7" y="181" width="1.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1101.73" y="191.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.encoding.ConfiguredAsObjectEncoder[org.scalasteward.core.data.Resolver.IvyRepository]] (id 2056) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (73,961 Î¼s, 1.20%)</title><rect x="968.9" y="181" width="14.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="971.92" y="191.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.data.GroupId] (expanded macros 0)  (937 Î¼s, 0.02%)</title><rect x="1013.7" y="165" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1016.71" y="175.5" ></text>
</g>
<g >
<title>F[(Option[String], String)] =&gt; ?{def flatMap: ?} (expanded macros 0)  (904 Î¼s, 0.01%)</title><rect x="44.7" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="47.74" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;displayId&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;latestCommit&quot;)] :: shapeless.HNil,org.scalasteward.core.git.Branch :: org.scalasteward.core.git.Sha1 :: shapeless.HNil]{type Out = R} (expanded macros 0)  (2,858 Î¼s, 0.05%)</title><rect x="706.3" y="197" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="709.26" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;frequency&quot;)]} (id 7530) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,351 Î¼s, 0.02%)</title><rect x="1021.2" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1024.18" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;raw&quot;)],String] :: shapeless.HNil] (id 3653) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (3,556 Î¼s, 0.06%)</title><rect x="506.6" y="197" width="0.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="509.64" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.data.Update.Grouped]] (id 2449) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (39,004 Î¼s, 0.63%)</title><rect x="820.5" y="245" width="7.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="823.54" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.data.BranchOut]{type Repr = V} (id 5543) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,043 Î¼s, 0.02%)</title><rect x="740.8" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="743.76" y="207.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.Validate[Char,eu.timepit.refined.boolean.And[eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less['a']],eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Greater['f']]]]{type R = RB} (expanded macros 0)  (6,840 Î¼s, 0.11%)</title><rect x="354.9" y="181" width="1.3" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="357.89" y="191.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord[org.scalasteward.core.repoconfig.PostUpdateHookConfig]{type Out = D} (expanded macros 0)  (4,672 Î¼s, 0.08%)</title><rect x="1005.9" y="213" width="0.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1008.89" y="223.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)]} (id 4591) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,456 Î¼s, 0.02%)</title><rect x="604.2" y="181" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="607.16" y="191.5" ></text>
</g>
<g >
<title>cats.FlatMap[F] (expanded macros 0)  (2,434 Î¼s, 0.04%)</title><rect x="96.8" y="229" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="99.81" y="239.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.forge.github.UpdatePullRequestPayload] (expanded macros 0)  (9,720 Î¼s, 0.16%)</title><rect x="874.2" y="229" width="1.9" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="877.21" y="239.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;sbtVersion&quot;)]} (id 1470) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,117 Î¼s, 0.02%)</title><rect x="472.6" y="133" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="475.61" y="143.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitea.GiteaApiAlg.CreateIssueCommentOption]{type Repr = V} (id 4772) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (2,042 Î¼s, 0.03%)</title><rect x="561.2" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="564.17" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.azurerepos.ClosePullRequestPayload]{type Out = K} (id 3413) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (796 Î¼s, 0.01%)</title><rect x="832.0" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="835.02" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy]] (expanded macros 0)  (1,080 Î¼s, 0.02%)</title><rect x="1064.7" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1067.73" y="191.5" ></text>
</g>
<g >
<title>cats.kernel.Semigroup[List[org.scalasteward.core.repoconfig.PullRequestGroup]] (expanded macros 0)  (1,961 Î¼s, 0.03%)</title><rect x="1188.9" y="229" width="0.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1191.89" y="239.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.GroupId] (expanded macros 0)  (734 Î¼s, 0.01%)</title><rect x="1161.9" y="165" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1164.89" y="175.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[org.scalasteward.core.git.Sha1 with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)],org.scalasteward.core.git.Sha1] :: shapeless.HNil]] (id 5526) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (3,589 Î¼s, 0.06%)</title><rect x="789.7" y="213" width="0.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="792.75" y="223.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.Validate[Char,eu.timepit.refined.numeric.Less['a']]{type R = R} (expanded macros 0)  (7,401 Î¼s, 0.12%)</title><rect x="309.4" y="149" width="1.4" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="312.37" y="159.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.update.artifact.ArtifactChange]{type Repr = V} (id 8734) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (952 Î¼s, 0.02%)</title><rect x="1160.3" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1163.26" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[String] (expanded macros 0)  (736 Î¼s, 0.01%)</title><rect x="491.8" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="494.76" y="191.5" ></text>
</g>
<g >
<title>F[Option[V]] =&gt; ?{def map: ?} (expanded macros 0)  (832 Î¼s, 0.01%)</title><rect x="82.4" y="245" width="0.2" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="85.41" y="255.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[Some[List[org.scalasteward.core.repoconfig.UpdatePattern]] :: Some[Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]]] :: Some[Option[List[String]]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;ignore&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)] :: shapeless.HNil]{type Out = OutT} (expanded macros 0)  (4,059 Î¼s, 0.07%)</title><rect x="1085.5" y="149" width="0.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1088.53" y="159.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.forge.bitbucket.Reviewer] (expanded macros 0)  (1,291 Î¼s, 0.02%)</title><rect x="514.7" y="165" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="517.70" y="175.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.GroupId] (expanded macros 0)  (2,521 Î¼s, 0.04%)</title><rect x="674.5" y="165" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="677.47" y="175.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;pullRequests&quot;)]} (id 7846) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (644 Î¼s, 0.01%)</title><rect x="1047.1" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1050.07" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;customLabels&quot;)] :: shapeless.HNil,List[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (3,322 Î¼s, 0.05%)</title><rect x="1027.8" y="149" width="0.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1030.77" y="159.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;status&quot;)] :: shapeless.HNil,String :: shapeless.HNil]{type Out = R} (expanded macros 0)  (1,760 Î¼s, 0.03%)</title><rect x="832.7" y="197" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="835.67" y="207.5" ></text>
</g>
<g >
<title>org.http4s.headers.Authorization =&gt; org.http4s.Header.ToRaw (expanded macros 0)  (6,462 Î¼s, 0.10%)</title><rect x="396.8" y="245" width="1.2" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="399.81" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Resolver.MavenRepository]{type Repr = V} (expanded macros 3)   (2,324 Î¼s, 0.04%)</title><rect x="957.6" y="133" width="0.5" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="960.64" y="143.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.azurerepos.PullRequestPayload]{type Repr = V} (id 3389) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (2,163 Î¼s, 0.04%)</title><rect x="840.5" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="843.53" y="207.5" ></text>
</g>
<g >
<title>((=&gt; String) =&gt; F[Unit]) =&gt; F[?] (expanded macros 0)   (3,461 Î¼s, 0.06%)</title><rect x="10.0" y="245" width="0.7" height="15.0" fill="rgb(245,116,116)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;html_url&quot;)]} (id 4686) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,263 Î¼s, 0.02%)</title><rect x="610.9" y="181" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="613.92" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;MavenRepository&quot;)]} (id 1679) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,366 Î¼s, 0.02%)</title><rect x="923.9" y="165" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="926.86" y="175.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[org.scalasteward.core.data.ArtifactId] (expanded macros 0)  (661 Î¼s, 0.01%)</title><rect x="276.4" y="245" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="279.35" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucketserver.Json.PR]{type Out = K} (id 4095) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,415 Î¼s, 0.02%)</title><rect x="725.0" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="728.02" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.forge.azurerepos.Paginated[org.scalasteward.core.forge.data.PullRequestOut]] (expanded macros 0)  (4,177 Î¼s, 0.07%)</title><rect x="361.3" y="245" width="0.8" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="364.32" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;status&quot;)]} (id 3446) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,013 Î¼s, 0.02%)</title><rect x="836.4" y="165" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="839.43" y="175.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucket.DefaultReviewers]{type Out = K} (id 3684) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,147 Î¼s, 0.02%)</title><rect x="511.7" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="514.68" y="207.5" ></text>
</g>
<g >
<title>F[scalacache.caffeine.CaffeineCache[[_]F[_],String,org.http4s.Status]] =&gt; ?{def map: ?} (expanded macros 0)  (807 Î¼s, 0.01%)</title><rect x="150.6" y="245" width="0.1" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="153.59" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitea.GiteaApiAlg.Repository]{type Repr = V} (expanded macros 3)   (3,654 Î¼s, 0.06%)</title><rect x="619.9" y="197" width="0.7" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="622.89" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.data.CommitOut]{type Repr = V} (id 4316) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,550 Î¼s, 0.03%)</title><rect x="744.4" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="747.37" y="207.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[org.scalasteward.core.data.Version] (expanded macros 0)  (1,164 Î¼s, 0.02%)</title><rect x="279.5" y="245" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="282.45" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[String]] (expanded macros 0)  (1,048 Î¼s, 0.02%)</title><rect x="558.6" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="561.56" y="191.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Scope[A]]{type Out = K} (id 2193) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (4,321 Î¼s, 0.07%)</title><rect x="495.4" y="197" width="0.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="498.37" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.util.RecordToMap[List[org.scalasteward.core.repoconfig.UpdatePattern] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;allowPreReleases&quot;)],List[org.scalasteward.core.repoconfig.UpdatePattern]] :: List[org.scalasteward.core.repoconfig.UpdatePattern] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;ignore&quot;)],List[org.scalasteward.core.repoconfig.UpdatePattern]] :: Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)],Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]]] :: Option[List[String]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)],Option[List[String]]] :: shapeless.HNil] (expanded macros 0)  (6,022 Î¼s, 0.10%)</title><rect x="1082.5" y="181" width="1.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1085.49" y="191.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.ScalafmtConfig]{type Out = K} (id 8121) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (753 Î¼s, 0.01%)</title><rect x="1076.8" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1079.76" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Scope[A]]{type Out = K} (id 2191) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (4,060 Î¼s, 0.07%)</title><rect x="494.6" y="197" width="0.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="497.59" y="207.5" ></text>
</g>
<g >
<title>eu.timepit.refined.internal.WitnessAs[shapeless._0,Int] (expanded macros 0)  (41,937 Î¼s, 0.68%)</title><rect x="159.7" y="213" width="8.0" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="162.67" y="223.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.data.Resolver]{type Repr = R} (expanded macros 0)   (13,321 Î¼s, 0.22%)</title><rect x="918.0" y="213" width="2.6" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="921.04" y="223.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Resolver]{type Out = K} (id 1674) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (6,959 Î¼s, 0.11%)</title><rect x="920.6" y="197" width="1.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="923.64" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;href&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: shapeless.HNil,org.http4s.Uri :: Option[String] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (3,625 Î¼s, 0.06%)</title><rect x="721.3" y="197" width="0.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="724.28" y="207.5" ></text>
</g>
<g >
<title>org.scalasteward.core.io.WorkspaceAlg[F] (expanded macros 0)  (2,230 Î¼s, 0.04%)</title><rect x="406.0" y="245" width="0.4" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="408.96" y="255.5" ></text>
</g>
<g >
<title>x$12.type =&gt; ?{def max: ?} (expanded macros 0)  (670 Î¼s, 0.01%)</title><rect x="1182.5" y="245" width="0.1" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="1185.46" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lub[Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)],Symbol with shapeless.tag.Tagged[_ &gt;: String(&quot;dependencyOverrides&quot;) with String(&quot;reviewers&quot;) with String(&quot;assignees&quot;) with String(&quot;buildRoots&quot;) with String(&quot;updatePullRequests&quot;) with String(&quot;postUpdateHooks&quot;) &lt;: String],Lub0] (expanded macros 0)  (1,078 Î¼s, 0.02%)</title><rect x="1069.4" y="149" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1072.44" y="159.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.CrossDependency] (id 1423) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,760 Î¼s, 0.03%)</title><rect x="1122.6" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1125.55" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lub[Symbol with shapeless.tag.Tagged[String(&quot;commitMessage&quot;)],Symbol with shapeless.tag.Tagged[String(&quot;addToGitBlameIgnoreRevs&quot;)],Lub0] (expanded macros 0)  (689 Î¼s, 0.01%)</title><rect x="1016.1" y="149" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1019.08" y="159.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.edit.scalafix.ScalafixMigration]{type Repr = V} (expanded macros 3)   (4,486 Î¼s, 0.07%)</title><rect x="694.5" y="197" width="0.9" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="697.54" y="207.5" ></text>
</g>
<g >
<title>F[List[org.scalasteward.core.forge.data.PullRequestOut]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (713 Î¼s, 0.01%)</title><rect x="75.2" y="245" width="0.1" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="78.21" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;dependency&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;filesContainingVersion&quot;)] :: shapeless.HNil,org.scalasteward.core.data.Dependency :: List[String] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (5,356 Î¼s, 0.09%)</title><rect x="460.0" y="197" width="1.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="463.04" y="207.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.coursier.VersionsCache.Value] (expanded macros 0)   (538 Î¼s, 0.01%)</title><rect x="358.8" y="229" width="0.1" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="361.83" y="239.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.PullRequestGroup]{type Repr = V} (expanded macros 3)   (1,491 Î¼s, 0.02%)</title><rect x="794.1" y="197" width="0.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="797.13" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;pattern&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,String :: String :: Option[org.scalasteward.core.data.Resolver.Credentials] :: List[org.scalasteward.core.data.Resolver.Header] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (6,949 Î¼s, 0.11%)</title><rect x="974.8" y="133" width="1.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="977.75" y="143.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;maybeRepoConfigParsingError&quot;)]} (id 6855) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (867 Î¼s, 0.01%)</title><rect x="653.5" y="133" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="656.48" y="143.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Update.ForArtifactId]{type Repr = V} (expanded macros 3)   (4,236 Î¼s, 0.07%)</title><rect x="803.4" y="197" width="0.8" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="806.36" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,Option[org.scalasteward.core.data.Resolver.Credentials] :: List[org.scalasteward.core.data.Resolver.Header] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (3,775 Î¼s, 0.06%)</title><rect x="959.2" y="101" width="0.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="962.18" y="111.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitea.GiteaApiAlg.BranchResp]{type Out = K} (id 4616) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,900 Î¼s, 0.03%)</title><rect x="543.0" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="545.98" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.github.CreatePullRequestPayload]{type Out = K} (id 4964) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,300 Î¼s, 0.02%)</title><rect x="864.1" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="867.10" y="207.5" ></text>
</g>
<g >
<title>F[scala.collection.immutable.Vector[org.scalasteward.core.forge.gitea.GiteaApiAlg.Label]] =&gt; ?{def map: ?} (expanded macros 0)  (1,490 Î¼s, 0.02%)</title><rect x="150.2" y="245" width="0.3" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="153.17" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[String] (expanded macros 0)  (557 Î¼s, 0.01%)</title><rect x="524.7" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="527.68" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.VersionPattern]{type Repr = V} (id 8492) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,344 Î¼s, 0.02%)</title><rect x="892.6" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="895.60" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;maybeError&quot;)]} (id 1326) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (8,550 Î¼s, 0.14%)</title><rect x="435.3" y="149" width="1.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="438.33" y="159.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.repocache.RefreshErrorAlg.Entry] (expanded macros 0)  (4,958 Î¼s, 0.08%)</title><rect x="375.5" y="245" width="1.0" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="378.51" y="255.5" ></text>
</g>
<g >
<title>((com.monovore.decline.Opts[org.scalasteward.core.forge.ForgeType], com.monovore.decline.Opts[org.http4s.Uri], com.monovore.decline.Opts[String], com.monovore.decline.Opts[Boolean], com.monovore.decline.Opts[Boolean])) =&gt; ?{def mapN: ?} (expanded macros 0)  (3,498 Î¼s, 0.06%)</title><rect x="19.8" y="245" width="0.7" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="22.79" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.repoconfig.PullRequestUpdateFilter] (expanded macros 0)  (1,050 Î¼s, 0.02%)</title><rect x="890.8" y="165" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="893.83" y="175.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.forge.gitea.GiteaApiAlg.PullRequestResp] =&gt; ?{def map: ?} (expanded macros 0)  (3,145 Î¼s, 0.05%)</title><rect x="137.4" y="245" width="0.6" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="140.38" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)]} (id 7852) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (618 Î¼s, 0.01%)</title><rect x="1046.7" y="133" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1049.68" y="143.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.forge.azurerepos.PullRequestPayload]] (id 3383) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (35,554 Î¼s, 0.58%)</title><rect x="837.6" y="245" width="6.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="840.56" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.buildtool.sbt.data.ScalaVersion] (id 1009) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (2,205 Î¼s, 0.04%)</title><rect x="1119.0" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1121.98" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;grouping&quot;)]} (id 7468) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,116 Î¼s, 0.02%)</title><rect x="1030.5" y="165" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1033.50" y="175.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.data.BranchOut]{type Out = K} (id 5542) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (927 Î¼s, 0.02%)</title><rect x="740.3" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="743.34" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[org.scalasteward.core.forge.gitea.GiteaApiAlg.PayloadCommit with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;commit&quot;)],org.scalasteward.core.forge.gitea.GiteaApiAlg.PayloadCommit] :: shapeless.HNil] (id 4625) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (4,356 Î¼s, 0.07%)</title><rect x="545.5" y="197" width="0.9" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="548.52" y="207.5" ></text>
</g>
<g >
<title>Option[(String, String)] =&gt; ?{def toMap: ?} (expanded macros 0)  (650 Î¼s, 0.01%)</title><rect x="172.1" y="245" width="0.2" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="175.14" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[String] (expanded macros 0)  (525 Î¼s, 0.01%)</title><rect x="827.8" y="165" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="830.81" y="175.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Resolver.Header]{type Out = K} (id 1659) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (2,129 Î¼s, 0.03%)</title><rect x="488.6" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="491.61" y="207.5" ></text>
</g>
<g >
<title>org.scalasteward.core.forge.data.PullRequestNumber with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)],org.scalasteward.core.forge.data.PullRequestNumber] :: Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;version&quot;)],Int] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)],String] :: org.scalasteward.core.forge.data.PullRequestState with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)],org.scalasteward.core.forge.data.PullRequestState] :: scala.collection.immutable.Map[String,cats.data.NonEmptyList[org.scalasteward.core.forge.bitbucketserver.Json.Link]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;links&quot;)],scala.collection.immutable.Map[String,cats.data.NonEmptyList[org.scalasteward.core.forge.bitbucketserver.Json.Link]]] :: shapeless.HNil &lt;:&lt; (org.scalasteward.core.forge.data.PullRequestNumber :: Int :: String :: org.scalasteward.core.forge.data.PullRequestState :: scala.collection.immutable.Map[String,cats.data.NonEmptyList[org.scalasteward.core.forge.bitbucketserver.Json.Link]] :: shapeless.HNil) (expanded macros 0)  (553 Î¼s, 0.01%)</title><rect x="724.6" y="197" width="0.1" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="727.61" y="207.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.forge.bitbucket.CreateComment] =&gt; ?{def map: ?} (expanded macros 0)  (1,384 Î¼s, 0.02%)</title><rect x="131.3" y="245" width="0.3" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="134.35" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.PostUpdateHookConfig]{type Repr = V} (id 7172) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,377 Î¼s, 0.02%)</title><rect x="1008.5" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1011.45" y="207.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[None.type :: None.type :: Some[List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;location&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil]{type Out = OutT} (expanded macros 0)  (1,974 Î¼s, 0.03%)</title><rect x="951.3" y="117" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="954.34" y="127.5" ></text>
</g>
<g >
<title>F[Either[Throwable,coursier.Fetch.Result]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (1,955 Î¼s, 0.03%)</title><rect x="57.1" y="245" width="0.4" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="60.10" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)] :: shapeless.HNil,Long :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (3,600 Î¼s, 0.06%)</title><rect x="631.9" y="181" width="0.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="634.95" y="191.5" ></text>
</g>
<g >
<title>cats.kernel.Order[List[org.scalasteward.core.data.Version.Component]] (expanded macros 0)  (1,033 Î¼s, 0.02%)</title><rect x="289.6" y="245" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="292.57" y="255.5" ></text>
</g>
<g >
<title>F[Option[org.scalasteward.core.repoconfig.RepoConfig]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (4,749 Î¼s, 0.08%)</title><rect x="87.0" y="245" width="0.9" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="90.00" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.repoconfig.UpdatePattern] (expanded macros 0)  (1,693 Î¼s, 0.03%)</title><rect x="1098.1" y="165" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1101.15" y="175.5" ></text>
</g>
<g >
<title>cats.kernel.Order[cats.data.NonEmptyList[org.scalasteward.core.data.Version]] (expanded macros 0)  (1,083 Î¼s, 0.02%)</title><rect x="287.7" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="290.73" y="239.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.data.CrossDependency] (expanded macros 0)  (2,763 Î¼s, 0.04%)</title><rect x="812.1" y="181" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="815.12" y="191.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.encoding.ConfiguredAsObjectEncoder[org.scalasteward.core.data.Resolver.MavenRepository]] (id 1943) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (78,098 Î¼s, 1.27%)</title><rect x="983.1" y="181" width="14.9" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="986.07" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;organization&quot;)] :: shapeless.HNil,Option[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (3,912 Î¼s, 0.06%)</title><rect x="556.8" y="181" width="0.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="559.78" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.coursier.VersionsCache.Value]{type Repr = V} (id 1321) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (6,432 Î¼s, 0.10%)</title><rect x="430.3" y="197" width="1.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="433.32" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[org.scalasteward.core.git.Branch]] (expanded macros 0)  (2,145 Î¼s, 0.03%)</title><rect x="644.0" y="181" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="646.98" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)]} (id 2485) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,435 Î¼s, 0.02%)</title><rect x="687.2" y="181" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="690.22" y="191.5" ></text>
</g>
<g >
<title>cats.effect.kernel.GenSpawn[[_]F[_],E] (expanded macros 0)  (1,869 Î¼s, 0.03%)</title><rect x="246.2" y="229" width="0.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="249.24" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,Option[org.scalasteward.core.data.Resolver.Credentials] :: List[org.scalasteward.core.data.Resolver.Header] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (3,680 Î¼s, 0.06%)</title><rect x="975.4" y="101" width="0.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="978.38" y="111.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.bitbucketserver.Json.Condition]] (id 3985) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (17,955 Î¼s, 0.29%)</title><rect x="711.4" y="245" width="3.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="714.42" y="255.5" ></text>
</g>
<g >
<title>cats.arrow.Compose[monocle.Optional] (expanded macros 0)  (731 Î¼s, 0.01%)</title><rect x="408.0" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="411.04" y="239.5" ></text>
</g>
<g >
<title>org.scalasteward.core.io.FileAlg[F] (expanded macros 0)  (4,218 Î¼s, 0.07%)</title><rect x="404.9" y="245" width="0.8" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="407.87" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Resolver.Header]{type Out = K} (id 1657) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,502 Î¼s, 0.02%)</title><rect x="488.3" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="491.32" y="207.5" ></text>
</g>
<g >
<title>F[(org.scalasteward.core.forge.data.RepoOut, org.scalasteward.core.forge.data.RepoOut)] =&gt; ?{def flatMap: ?} (expanded macros 0)  (768 Î¼s, 0.01%)</title><rect x="50.8" y="245" width="0.1" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="53.80" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[String] (expanded macros 0)  (601 Î¼s, 0.01%)</title><rect x="615.4" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="618.44" y="191.5" ></text>
</g>
<g >
<title>F[Option[org.scalasteward.core.git.Commit]] =&gt; ?{def map: ?} (expanded macros 0)  (5,313 Î¼s, 0.09%)</title><rect x="85.7" y="245" width="1.0" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="88.71" y="255.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.gitea.GiteaApiAlg.CreateLabelReq]{type Repr = R} (expanded macros 0)  (18,833 Î¼s, 0.31%)</title><rect x="564.4" y="213" width="3.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="567.43" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;filesContainingVersion&quot;)] :: shapeless.HNil,List[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (2,459 Î¼s, 0.04%)</title><rect x="460.6" y="181" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="463.59" y="191.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.edit.scalafix.ScalafixMigrations]{type Repr = R} (expanded macros 0)  (899 Î¼s, 0.01%)</title><rect x="1150.8" y="213" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1153.76" y="223.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.repoconfig.VersionPattern] (expanded macros 0)  (844 Î¼s, 0.01%)</title><rect x="665.4" y="165" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="668.45" y="175.5" ></text>
</g>
<g >
<title>org.http4s.QueryParamEncoder[String] (expanded macros 0)  (1,839 Î¼s, 0.03%)</title><rect x="396.0" y="245" width="0.3" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="398.99" y="255.5" ></text>
</g>
<g >
<title>Numeric[Int] (expanded macros 0)  (3,694 Î¼s, 0.06%)</title><rect x="160.7" y="197" width="0.8" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="163.74" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,321 Î¼s, 0.02%)</title><rect x="808.4" y="133" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="811.37" y="143.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;allow&quot;)]} (id 8329) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,092 Î¼s, 0.02%)</title><rect x="1083.6" y="181" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1086.64" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.PostUpdateHookConfig]{type Repr = V} (expanded macros 3)   (1,350 Î¼s, 0.02%)</title><rect x="1010.1" y="197" width="0.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="1013.15" y="207.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.Validate[Int,eu.timepit.refined.generic.Equal[40]]{type R = RP} (expanded macros 0)  (2,202 Î¼s, 0.04%)</title><rect x="356.5" y="197" width="0.5" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="359.53" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)]} (id 2086) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (879 Î¼s, 0.01%)</title><rect x="974.9" y="117" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="977.91" y="127.5" ></text>
</g>
<g >
<title>io.circe.Encoder[List[org.scalasteward.core.data.Version]] (expanded macros 0)  (6,107 Î¼s, 0.10%)</title><rect x="446.0" y="181" width="1.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="449.03" y="191.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.data.Comment]{type Out = K} (id 4300) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (759 Î¼s, 0.01%)</title><rect x="534.7" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="537.70" y="207.5" ></text>
</g>
<g >
<title>org.scalasteward.core.data.CrossDependency with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;crossDependency&quot;)],org.scalasteward.core.data.CrossDependency] :: cats.data.NonEmptyList[org.scalasteward.core.data.Version] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;newerVersions&quot;)],cats.data.NonEmptyList[org.scalasteward.core.data.Version]] :: Option[org.scalasteward.core.data.GroupId] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;newerGroupId&quot;)],Option[org.scalasteward.core.data.GroupId]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;newerArtifactId&quot;)],Option[String]] :: shapeless.HNil &lt;:&lt; (org.scalasteward.core.data.CrossDependency :: cats.data.NonEmptyList[org.scalasteward.core.data.Version] :: Option[org.scalasteward.core.data.GroupId] :: Option[String] :: shapeless.HNil) (expanded macros 0)  (862 Î¼s, 0.01%)</title><rect x="802.0" y="197" width="0.2" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="805.02" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)] :: shapeless.HNil,Option[String] :: List[org.scalasteward.core.data.Update.ForArtifactId] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (6,891 Î¼s, 0.11%)</title><rect x="687.5" y="181" width="1.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="690.49" y="191.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.update.artifact.ArtifactChanges]{type Repr = R} (expanded macros 0)  (4,931 Î¼s, 0.08%)</title><rect x="1170.8" y="213" width="1.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1173.84" y="223.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.RepoConfig]{type Out = K} (id 7635) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,572 Î¼s, 0.03%)</title><rect x="1056.4" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1059.44" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[org.http4s.Uri with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;html_url&quot;)],org.http4s.Uri] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)],String] :: Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;number&quot;)],Int] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)],String] :: org.scalasteward.core.forge.gitea.GiteaApiAlg.PRBranchInfo with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;base&quot;)],org.scalasteward.core.forge.gitea.GiteaApiAlg.PRBranchInfo] :: org.scalasteward.core.forge.gitea.GiteaApiAlg.PRBranchInfo with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;head&quot;)],org.scalasteward.core.forge.gitea.GiteaApiAlg.PRBranchInfo] :: shapeless.HNil] (id 4689) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (10,172 Î¼s, 0.16%)</title><rect x="614.1" y="197" width="1.9" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="617.07" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.data.UpdateState]{type Out = K} (id 4467) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (921 Î¼s, 0.01%)</title><rect x="860.9" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="863.94" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;body&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;head&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;base&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;draft&quot;)] :: shapeless.HNil,String :: String :: org.scalasteward.core.git.Branch :: Boolean :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (4,431 Î¼s, 0.07%)</title><rect x="865.5" y="181" width="0.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="868.46" y="191.5" ></text>
</g>
<g >
<title>io.circe.Encoder[cats.data.NonEmptyList[String]] (expanded macros 0)  (537 Î¼s, 0.01%)</title><rect x="1013.9" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1016.93" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.github.Repository]{type Repr = V} (expanded macros 3)   (1,230 Î¼s, 0.02%)</title><rect x="784.5" y="197" width="0.2" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="787.48" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.gitea.GiteaApiAlg.BranchResp] (expanded macros 0)  (20,596 Î¼s, 0.33%)</title><rect x="542.4" y="229" width="4.0" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="545.41" y="239.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[None.type :: Some[List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil]{type Out = OutT} (expanded macros 0)  (1,488 Î¼s, 0.02%)</title><rect x="931.8" y="101" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="934.80" y="111.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)]} (id 1763) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (925 Î¼s, 0.01%)</title><rect x="967.6" y="133" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="970.58" y="143.5" ></text>
</g>
<g >
<title>shapeless.ops.nat.ToInt[shapeless._0] (expanded macros 3)  (699 Î¼s, 0.01%)</title><rect x="1099.5" y="101" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1102.52" y="111.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.forge.data.CommitOut] (expanded macros 0)  (1,599 Î¼s, 0.03%)</title><rect x="738.7" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="741.73" y="191.5" ></text>
</g>
<g >
<title>com.monovore.decline.Argument[Int] (expanded macros 0)  (993 Î¼s, 0.02%)</title><rect x="296.4" y="245" width="0.2" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="299.36" y="255.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[None.type :: None.type :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;artifactIdBefore&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;artifactIdAfter&quot;)] :: shapeless.HNil]{type Out = OutT} (expanded macros 0)  (669 Î¼s, 0.01%)</title><rect x="1157.5" y="165" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1160.54" y="175.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.forge.data.PullRequestNumber] (expanded macros 0)  (1,494 Î¼s, 0.02%)</title><rect x="643.7" y="165" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="646.70" y="175.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.buildtool.sbt.data.ScalaVersion]{type Repr = R :: shapeless.HNil} (expanded macros 3)   (3,076 Î¼s, 0.05%)</title><rect x="1119.4" y="197" width="0.6" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="1122.40" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[cats.data.NonEmptyList[org.scalasteward.core.git.Author]] (expanded macros 0)  (1,796 Î¼s, 0.03%)</title><rect x="701.8" y="165" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="704.82" y="175.5" ></text>
</g>
<g >
<title>shapeless.Lub[Symbol with shapeless.tag.Tagged[String(&quot;artifactIdBefore&quot;)],Symbol with shapeless.tag.Tagged[String(&quot;artifactIdAfter&quot;)],Lub0] (expanded macros 0)  (576 Î¼s, 0.01%)</title><rect x="1163.6" y="165" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1166.65" y="175.5" ></text>
</g>
<g >
<title>chunks.type =&gt; ?{def mapFilter: ?} (expanded macros 0)  (3,185 Î¼s, 0.05%)</title><rect x="295.8" y="245" width="0.6" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="298.75" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)]} (id 7850) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (722 Î¼s, 0.01%)</title><rect x="1046.8" y="149" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1049.80" y="159.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.bitbucketserver.Json.Page[A]]] (id 4075) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (15,525 Î¼s, 0.25%)</title><rect x="729.2" y="245" width="3.0" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="732.21" y="255.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.Validate[Char,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Greater['f']]]{type R = RB} (expanded macros 0)  (3,490 Î¼s, 0.06%)</title><rect x="308.6" y="165" width="0.6" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="311.55" y="175.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;location&quot;)],String] :: Option[org.scalasteward.core.data.Resolver.Credentials] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)],Option[org.scalasteward.core.data.Resolver.Credentials]] :: List[org.scalasteward.core.data.Resolver.Header] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)],List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil]{type Out = F} (expanded macros 0)  (7,928 Î¼s, 0.13%)</title><rect x="996.5" y="149" width="1.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="999.50" y="159.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;artifactIdBefore&quot;)],Option[String]] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;artifactIdAfter&quot;)],String] :: shapeless.HNil] (expanded macros 0)  (1,782 Î¼s, 0.03%)</title><rect x="1167.2" y="181" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1170.22" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[List[org.scalasteward.core.repoconfig.UpdatePattern] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;allow&quot;)],List[org.scalasteward.core.repoconfig.UpdatePattern]] :: List[org.scalasteward.core.repoconfig.UpdatePattern] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;allowPreReleases&quot;)],List[org.scalasteward.core.repoconfig.UpdatePattern]] :: List[org.scalasteward.core.repoconfig.UpdatePattern] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;ignore&quot;)],List[org.scalasteward.core.repoconfig.UpdatePattern]] :: Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)],Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]]] :: Option[List[String]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)],Option[List[String]]] :: shapeless.HNil] (expanded macros 0)  (9,655 Î¼s, 0.16%)</title><rect x="1106.6" y="197" width="1.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1109.57" y="207.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.Validate[Char,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Greater['f']]]{type R = RB} (expanded macros 0)  (2,938 Î¼s, 0.05%)</title><rect x="355.0" y="165" width="0.6" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="358.03" y="175.5" ></text>
</g>
<g >
<title>shapeless.Lub[Symbol with shapeless.tag.Tagged[String(&quot;command&quot;)],Symbol with shapeless.tag.Tagged[_ &gt;: String(&quot;addToGitBlameIgnoreRevs&quot;) with String(&quot;commitMessage&quot;) &lt;: String],Lub0] (expanded macros 0)  (1,022 Î¼s, 0.02%)</title><rect x="1015.6" y="165" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1018.64" y="175.5" ></text>
</g>
<g >
<title>F[List[String]] =&gt; ?{def void: ?} (expanded macros 0)  (5,660 Î¼s, 0.09%)</title><rect x="66.3" y="245" width="1.1" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="69.29" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitlab.CommitId]{type Repr = V} (expanded macros 3)   (1,290 Î¼s, 0.02%)</title><rect x="789.0" y="197" width="0.2" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="792.00" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.codec.UnwrappedCodec[org.scalasteward.core.buildtool.sbt.data.SbtVersion] (expanded macros 0)  (21,234 Î¼s, 0.34%)</title><rect x="1113.4" y="229" width="4.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1116.43" y="239.5" ></text>
</g>
<g >
<title>io.circe.Decoder[String] (expanded macros 0)  (665 Î¼s, 0.01%)</title><rect x="587.0" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="590.02" y="191.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.UpdatesConfig]{type Out = K} (id 8238) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,821 Î¼s, 0.03%)</title><rect x="1088.2" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1091.17" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.data.PullRequestOut]{type Out = K} (id 4382) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,859 Î¼s, 0.03%)</title><rect x="748.5" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="751.48" y="207.5" ></text>
</g>
<g >
<title>F[Option[cats.data.NonEmptyList[org.scalasteward.core.update.data.UpdateState.WithUpdate]]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (1,733 Î¼s, 0.03%)</title><rect x="82.7" y="245" width="0.3" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="85.70" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucket.CommentContent]{type Repr = V} (id 3647) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,087 Î¼s, 0.02%)</title><rect x="506.0" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="509.01" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;project&quot;)]} (id 4197) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (739 Î¼s, 0.01%)</title><rect x="859.1" y="165" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="862.12" y="175.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;versions&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;maybeError&quot;)] :: shapeless.HNil,List[org.scalasteward.core.data.Version] :: Option[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (20,444 Î¼s, 0.33%)</title><rect x="433.5" y="181" width="4.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="436.55" y="191.5" ></text>
</g>
<g >
<title>io.circe.Decoder[String] (expanded macros 0)  (610 Î¼s, 0.01%)</title><rect x="674.2" y="165" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="677.21" y="175.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;pattern&quot;)],String] :: Option[org.scalasteward.core.data.Resolver.Credentials] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)],Option[org.scalasteward.core.data.Resolver.Credentials]] :: List[org.scalasteward.core.data.Resolver.Header] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)],List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil] (expanded macros 0)  (5,918 Î¼s, 0.10%)</title><rect x="946.9" y="133" width="1.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="949.89" y="143.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucketserver.Json.Comment]{type Out = K} (id 3975) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (913 Î¼s, 0.01%)</title><rect x="519.8" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="522.84" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.bitbucketserver.Json.Project] (expanded macros 0)  (11,976 Î¼s, 0.19%)</title><rect x="522.6" y="229" width="2.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="525.59" y="239.5" ></text>
</g>
<g >
<title>cats.Foldable[Option] (expanded macros 0)  (691 Î¼s, 0.01%)</title><rect x="230.4" y="245" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="233.43" y="255.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[Some[List[org.scalasteward.core.repoconfig.GroupRepoConfig]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil]{type Out = OutT} (expanded macros 0)  (989 Î¼s, 0.02%)</title><rect x="1049.0" y="53" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1052.04" y="63.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitea.GiteaApiAlg.Label]{type Out = K} (id 4805) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (2,106 Î¼s, 0.03%)</title><rect x="589.7" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="592.69" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.data.Update.ForArtifactId]] (id 2295) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (67,152 Î¼s, 1.09%)</title><rect x="799.9" y="245" width="12.9" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="802.93" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.gitea.GiteaApiAlg.CreateLabelReq]] (id 4819) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (29,837 Î¼s, 0.48%)</title><rect x="563.3" y="245" width="5.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="566.35" y="255.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.gitea.GiteaApiAlg.CreateIssueCommentOption]{type Repr = R} (expanded macros 0)  (14,811 Î¼s, 0.24%)</title><rect x="559.6" y="213" width="2.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="562.62" y="223.5" ></text>
</g>
<g >
<title>io.circe.KeyEncoder[org.scalasteward.core.coursier.VersionsCache.Key] (expanded macros 0)  (3,546 Î¼s, 0.06%)</title><rect x="389.1" y="245" width="0.7" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="392.13" y="255.5" ></text>
</g>
<g >
<title>((=&gt; String) =&gt; F[Unit]) =&gt; F[Unit] (expanded macros 0)   (4,543 Î¼s, 0.07%)</title><rect x="10.7" y="245" width="0.8" height="15.0" fill="rgb(245,116,116)" rx="2" ry="2" />
<text  x="13.66" y="255.5" ></text>
</g>
<g >
<title>eu.timepit.refined.internal.WitnessAs[shapeless._0,Int] (expanded macros 0)  (2,297 Î¼s, 0.04%)</title><rect x="1099.2" y="117" width="0.5" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="1102.22" y="127.5" ></text>
</g>
<g >
<title>group.type =&gt; ?{def reduceMap: ?} (expanded macros 0)  (2,154 Î¼s, 0.03%)</title><rect x="327.4" y="245" width="0.4" height="15.0" fill="rgb(95,242,95)" rx="2" ry="2" />
<text  x="330.38" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.data.CommitOut]{type Out = K} (id 4315) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (2,208 Î¼s, 0.04%)</title><rect x="743.7" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="746.65" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;latestCommit&quot;)] :: shapeless.HNil,org.scalasteward.core.git.Sha1 :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,483 Î¼s, 0.02%)</title><rect x="706.5" y="181" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="709.53" y="191.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.edit.scalafix.ScalafixMigration] (expanded macros 0)  (1,456 Î¼s, 0.02%)</title><rect x="1154.5" y="165" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1157.51" y="175.5" ></text>
</g>
<g >
<title>strings.type =&gt; ?{def mkString_: ?} (expanded macros 0)   (1,156 Î¼s, 0.02%)</title><rect x="1174.4" y="245" width="0.2" height="15.0" fill="rgb(233,98,98)" rx="2" ry="2" />
<text  x="1177.41" y="255.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.data.Version] (expanded macros 0)   (931 Î¼s, 0.02%)</title><rect x="675.6" y="149" width="0.2" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="678.59" y="159.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;key&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;value&quot;)],String] :: shapeless.HNil] (id 1668) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (5,822 Î¼s, 0.09%)</title><rect x="490.9" y="197" width="1.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="493.90" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;rewriteRules&quot;)]} (id 2780) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,259 Î¼s, 0.02%)</title><rect x="697.6" y="133" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="700.56" y="143.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;groupId&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;artifactId&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;command&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;commitMessage&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;addToGitBlameIgnoreRevs&quot;)] :: shapeless.HNil,List]{type Lub = Symbol} (expanded macros 0)  (8,340 Î¼s, 0.14%)</title><rect x="1014.9" y="213" width="1.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1017.86" y="223.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Resolver.Credentials]{type Repr = V} (expanded macros 3)   (2,266 Î¼s, 0.04%)</title><rect x="483.5" y="197" width="0.5" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="486.53" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucketserver.Json.Comment]{type Repr = V} (expanded macros 3)   (1,641 Î¼s, 0.03%)</title><rect x="520.0" y="197" width="0.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="523.01" y="207.5" ></text>
</g>
<g >
<title>creates.type =&gt; ?{def map: ?} (expanded macros 0)  (1,677 Î¼s, 0.03%)</title><rect x="303.1" y="245" width="0.3" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="306.09" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.git.Branch] (expanded macros 0)  (1,178 Î¼s, 0.02%)</title><rect x="739.0" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="742.04" y="191.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitlab.MergeRequestPayload]{type Out = K} (id 5465) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (2,478 Î¼s, 0.04%)</title><rect x="881.2" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="884.16" y="207.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.bitbucketserver.Json.Reviewer]{type Repr = R} (expanded macros 0)  (6,347 Î¼s, 0.10%)</title><rect x="525.7" y="213" width="1.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="528.69" y="223.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.gitea.GiteaApiAlg.AttachLabelReq]{type Repr = R} (expanded macros 0)  (15,910 Î¼s, 0.26%)</title><rect x="537.4" y="213" width="3.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="540.38" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;update&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;entryCreatedAt&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;number&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updateBranch&quot;)] :: shapeless.HNil,org.scalasteward.core.data.Update :: org.scalasteward.core.forge.data.PullRequestState :: org.scalasteward.core.util.Timestamp :: Option[org.scalasteward.core.forge.data.PullRequestNumber] :: Option[org.scalasteward.core.git.Branch] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (12,102 Î¼s, 0.20%)</title><rect x="637.9" y="181" width="2.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="640.91" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,063 Î¼s, 0.02%)</title><rect x="567.8" y="165" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="570.83" y="175.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;number&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;base&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;head&quot;)] :: shapeless.HNil,String :: Int :: String :: org.scalasteward.core.forge.gitea.GiteaApiAlg.PRBranchInfo :: org.scalasteward.core.forge.gitea.GiteaApiAlg.PRBranchInfo :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (14,280 Î¼s, 0.23%)</title><rect x="611.2" y="181" width="2.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="614.16" y="191.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.gitea.GiteaApiAlg.PullRequestResp]] (id 4667) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (51,640 Î¼s, 0.84%)</title><rect x="606.1" y="245" width="9.9" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="609.13" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.git.Sha1] (expanded macros 0)  (1,473 Î¼s, 0.02%)</title><rect x="645.0" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="647.96" y="191.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.git.Branch] (expanded macros 0)  (1,321 Î¼s, 0.02%)</title><rect x="867.1" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="870.09" y="191.5" ></text>
</g>
<g >
<title>shapeless.Lub[Symbol with shapeless.tag.Tagged[String(&quot;location&quot;)],Symbol with shapeless.tag.Tagged[_ &gt;: String(&quot;headers&quot;) with String(&quot;credentials&quot;) &lt;: String],Lub0] (expanded macros 0)  (1,625 Î¼s, 0.03%)</title><rect x="995.3" y="117" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="998.34" y="127.5" ></text>
</g>
<g >
<title>c1.type =&gt; ?{def === : ?} (expanded macros 0)  (2,017 Î¼s, 0.03%)</title><rect x="209.8" y="245" width="0.4" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="212.83" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (3,246 Î¼s, 0.05%)</title><rect x="943.8" y="117" width="0.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="946.77" y="127.5" ></text>
</g>
<g >
<title>io.circe.Decoder[String] (expanded macros 0)  (548 Î¼s, 0.01%)</title><rect x="787.7" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="790.70" y="191.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.edit.scalafix.ScalafixMigration.Target] (expanded macros 0)  (1,398 Î¼s, 0.02%)</title><rect x="702.7" y="165" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="705.72" y="175.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (2,375 Î¼s, 0.04%)</title><rect x="1105.5" y="133" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1108.53" y="143.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[None.type :: None.type :: None.type :: Some[Option[Boolean]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;artifactId&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;command&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;commitMessage&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;addToGitBlameIgnoreRevs&quot;)] :: shapeless.HNil]{type Out = OutT} (expanded macros 0)  (1,536 Î¼s, 0.02%)</title><rect x="1006.1" y="181" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1009.09" y="191.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;text&quot;)],String] :: shapeless.HNil]] (id 3981) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (4,940 Î¼s, 0.08%)</title><rect x="520.9" y="213" width="1.0" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="523.93" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,Option[org.scalasteward.core.data.Resolver.Credentials] :: List[org.scalasteward.core.data.Resolver.Header] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (4,017 Î¼s, 0.07%)</title><rect x="956.2" y="101" width="0.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="959.18" y="111.5" ></text>
</g>
<g >
<title>shapeless.Lub[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)],Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)],Lub0] (expanded macros 0)  (1,248 Î¼s, 0.02%)</title><rect x="945.9" y="101" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="948.93" y="111.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;newerGroupId&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;newerArtifactId&quot;)] :: shapeless.HNil,Option[org.scalasteward.core.data.GroupId] :: Option[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (9,021 Î¼s, 0.15%)</title><rect x="806.9" y="165" width="1.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="809.89" y="175.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;forArtifactIds&quot;)]} (id 2407) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (2,814 Î¼s, 0.05%)</title><rect x="816.5" y="181" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="819.48" y="191.5" ></text>
</g>
<g >
<title>F[List[org.scalasteward.core.edit.update.data.Substring.Replacement]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (4,309 Î¼s, 0.07%)</title><rect x="73.7" y="245" width="0.8" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="76.73" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.nurture.PullRequestRepository.Entry] (expanded macros 0)  (9,547 Î¼s, 0.15%)</title><rect x="379.6" y="229" width="1.9" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="382.63" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)] :: shapeless.HNil,Long :: shapeless.HNil]{type Out = R} (expanded macros 0)  (1,386 Î¼s, 0.02%)</title><rect x="763.0" y="197" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="766.03" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.ReprAsObjectEncoder[cats.data.NonEmptyList[org.scalasteward.core.data.Update.ForArtifactId] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;forArtifactIds&quot;)],cats.data.NonEmptyList[org.scalasteward.core.data.Update.ForArtifactId]] :: shapeless.HNil] (id 2410) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveEncoder`)  (4,381 Î¼s, 0.07%)</title><rect x="819.7" y="197" width="0.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="822.70" y="207.5" ></text>
</g>
<g >
<title>cats.Show[String] (expanded macros 0)  (14,312 Î¼s, 0.23%)</title><rect x="248.2" y="245" width="2.7" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="251.19" y="255.5" ></text>
</g>
<g >
<title>metadata.versionScheme.type =&gt; ?{def tupleLeft: ?} (expanded macros 0)  (685 Î¼s, 0.01%)</title><rect x="391.0" y="245" width="0.1" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="393.96" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;dependencyInfos&quot;)]} (id 6857) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (764 Î¼s, 0.01%)</title><rect x="653.0" y="165" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="655.98" y="175.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[List[org.scalasteward.core.update.artifact.ArtifactChange] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;changes&quot;)],List[org.scalasteward.core.update.artifact.ArtifactChange]] :: shapeless.HNil]{type Out = F} (expanded macros 0)  (1,297 Î¼s, 0.02%)</title><rect x="1172.9" y="213" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1175.88" y="223.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.Version] (expanded macros 0)  (2,700 Î¼s, 0.04%)</title><rect x="675.3" y="165" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="678.27" y="175.5" ></text>
</g>
<g >
<title>F[Map[org.http4s.Uri,org.scalasteward.core.nurture.PullRequestRepository.Entry]] =&gt; ?{def map: ?} (expanded macros 0)  (2,069 Î¼s, 0.03%)</title><rect x="78.4" y="245" width="0.4" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="81.37" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;location&quot;)]} (id 1765) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (883 Î¼s, 0.01%)</title><rect x="968.0" y="117" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="970.95" y="127.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.ReprAsObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;slug&quot;)],String] :: org.scalasteward.core.forge.bitbucketserver.Json.Project with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;project&quot;)],org.scalasteward.core.forge.bitbucketserver.Json.Project] :: shapeless.HNil]] (id 4200) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (3,570 Î¼s, 0.06%)</title><rect x="859.3" y="213" width="0.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="862.32" y="223.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[String]] (expanded macros 0)  (3,108 Î¼s, 0.05%)</title><rect x="444.6" y="181" width="0.6" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="447.63" y="191.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[cats.data.NonEmptyList[String]]] (expanded macros 0)  (1,259 Î¼s, 0.02%)</title><rect x="701.5" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="704.49" y="191.5" ></text>
</g>
<g >
<title>cats.effect.kernel.MonadCancel[cats.effect.IO,Throwable] (expanded macros 0)  (3,127 Î¼s, 0.05%)</title><rect x="267.7" y="245" width="0.6" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="270.67" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.edit.scalafix.ScalafixMigrations]{type Out = K} (id 2848) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (813 Î¼s, 0.01%)</title><rect x="1151.4" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1154.35" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;contains&quot;)]} (id 8476) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (721 Î¼s, 0.01%)</title><rect x="799.1" y="133" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="802.12" y="143.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.forge.azurerepos.Paginated[org.scalasteward.core.forge.data.PullRequestOut]] =&gt; ?{def map: ?} (expanded macros 0)  (1,510 Î¼s, 0.02%)</title><rect x="131.1" y="245" width="0.2" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="134.06" y="255.5" ></text>
</g>
<g >
<title>buildTools.type =&gt; ?{def traverse_: ?} (expanded macros 0)  (868 Î¼s, 0.01%)</title><rect x="209.7" y="245" width="0.1" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="212.66" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[org.scalasteward.core.edit.scalafix.ScalafixMigration.ExecutionOrder]] (expanded macros 0)  (2,431 Î¼s, 0.04%)</title><rect x="702.2" y="181" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="705.16" y="191.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.data.Resolver.MavenRepository]{type Repr = R} (expanded macros 0)   (18,591 Î¼s, 0.30%)</title><rect x="953.4" y="149" width="3.5" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="956.39" y="159.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Update.Grouped]{type Out = K} (id 2452) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (2,594 Î¼s, 0.04%)</title><rect x="822.5" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="825.51" y="207.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.bitbucketserver.Json.Comment]{type Repr = R} (expanded macros 0)  (9,486 Î¼s, 0.15%)</title><rect x="519.1" y="213" width="1.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="522.11" y="223.5" ></text>
</g>
<g >
<title>req.type =&gt; ?{def pure: ?} (expanded macros 0)  (643 Î¼s, 0.01%)</title><rect x="411.3" y="245" width="0.1" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="414.28" y="255.5" ></text>
</g>
<g >
<title>cats.kernel.Order[org.scalasteward.core.data.Resolver] (expanded macros 0)  (599 Î¼s, 0.01%)</title><rect x="175.6" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="178.57" y="239.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.forge.github.GitHubAssignees] (expanded macros 0)  (10,865 Î¼s, 0.18%)</title><rect x="868.3" y="229" width="2.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="871.32" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;open&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;closed&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;fromRef&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;toRef&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;locked&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: shapeless.HNil,org.scalasteward.core.forge.data.PullRequestState :: Boolean :: Boolean :: org.scalasteward.core.forge.bitbucketserver.Json.Ref :: org.scalasteward.core.forge.bitbucketserver.Json.Ref :: Boolean :: List[org.scalasteward.core.forge.bitbucketserver.Json.Reviewer] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (11,489 Î¼s, 0.19%)</title><rect x="849.5" y="165" width="2.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="852.52" y="175.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.bitbucketserver.Json.DefaultReviewer]{type Repr = R} (expanded macros 0)  (10,024 Î¼s, 0.16%)</title><rect x="715.7" y="213" width="2.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="718.74" y="223.5" ></text>
</g>
<g >
<title>installations.type =&gt; ?{def traverse: ?} (expanded macros 0)  (1,753 Î¼s, 0.03%)</title><rect x="329.7" y="245" width="0.4" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="332.73" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.PullRequestsConfig]{type Repr = V} (id 7460) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (2,123 Î¼s, 0.03%)</title><rect x="1029.4" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1032.40" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;user&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;pass&quot;)] :: shapeless.HNil,String :: String :: shapeless.HNil]{type Out = R} (expanded macros 0)  (3,986 Î¼s, 0.06%)</title><rect x="484.4" y="197" width="0.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="487.44" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.forge.bitbucketserver.Json.NewPR] (expanded macros 0)  (1,345 Î¼s, 0.02%)</title><rect x="385.0" y="245" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="388.02" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.forge.data.PullRequestState] (expanded macros 0)  (1,527 Î¼s, 0.02%)</title><rect x="642.7" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="645.73" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;body&quot;)] :: shapeless.HNil,String :: String :: shapeless.HNil]{type Out = R} (expanded macros 0)  (2,070 Î¼s, 0.03%)</title><rect x="875.2" y="197" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="878.20" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.gitea.GiteaApiAlg.CreateIssueCommentOption] (expanded macros 0)  (20,143 Î¼s, 0.33%)</title><rect x="559.5" y="229" width="3.8" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="562.49" y="239.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.edit.scalafix.ScalafixMigrations]{type Out = Labels} (id 2877) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (726 Î¼s, 0.01%)</title><rect x="1150.4" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1153.42" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucketserver.Json.Link]{type Repr = V} (id 4020) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,475 Î¼s, 0.02%)</title><rect x="721.0" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="724.00" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.ReprAsObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;sourceRefName&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;targetRefName&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)],String] :: Option[List[String]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;labels&quot;)],Option[List[String]]] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;description&quot;)],String] :: shapeless.HNil] (id 3403) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveEncoder`)  (7,365 Î¼s, 0.12%)</title><rect x="843.0" y="197" width="1.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="845.95" y="207.5" ></text>
</g>
<g >
<title>x$9.type =&gt; ?{def nonEmpty: ?} (expanded macros 0)  (802 Î¼s, 0.01%)</title><rect x="1187.7" y="245" width="0.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="1190.71" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;reviewer_ids&quot;)]} (id 5484) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (851 Î¼s, 0.01%)</title><rect x="884.7" y="101" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="887.71" y="111.5" ></text>
</g>
<g >
<title>F[Boolean] =&gt; ?{def ifM: ?} (expanded macros 0)  (3,676 Î¼s, 0.06%)</title><rect x="54.3" y="245" width="0.7" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="57.27" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.data.Dependency] (expanded macros 0)  (2,518 Î¼s, 0.04%)</title><rect x="464.1" y="181" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="467.10" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Version] (id 2544) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,944 Î¼s, 0.03%)</title><rect x="1124.7" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1127.68" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (3,732 Î¼s, 0.06%)</title><rect x="1071.4" y="85" width="0.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1074.44" y="95.5" ></text>
</g>
<g >
<title>io.circe.KeyEncoder[org.http4s.Uri] (expanded macros 0)  (600 Î¼s, 0.01%)</title><rect x="381.5" y="229" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="384.46" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[Option[scala.util.matching.Regex] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;includeMatchedLabels&quot;)],Option[scala.util.matching.Regex]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;customLabels&quot;)],List[String]] :: shapeless.HNil] (expanded macros 0)  (4,054 Î¼s, 0.07%)</title><rect x="1040.4" y="181" width="0.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1043.36" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (3,383 Î¼s, 0.05%)</title><rect x="963.4" y="117" width="0.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="966.41" y="127.5" ></text>
</g>
<g >
<title>Option[org.http4s.Uri] =&gt; ?{def tupleLeft: ?} (expanded macros 0)  (716 Î¼s, 0.01%)</title><rect x="173.8" y="245" width="0.1" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="176.80" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.ReprAsObjectEncoder[org.scalasteward.core.data.CrossDependency with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;crossDependency&quot;)],org.scalasteward.core.data.CrossDependency] :: cats.data.NonEmptyList[org.scalasteward.core.data.Version] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;newerVersions&quot;)],cats.data.NonEmptyList[org.scalasteward.core.data.Version]] :: Option[org.scalasteward.core.data.GroupId] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;newerGroupId&quot;)],Option[org.scalasteward.core.data.GroupId]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;newerArtifactId&quot;)],Option[String]] :: shapeless.HNil] (id 2313) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveEncoder`)  (19,258 Î¼s, 0.31%)</title><rect x="809.1" y="197" width="3.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="812.10" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;milestone&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: shapeless.HNil,Option[Int] :: Option[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (6,510 Î¼s, 0.11%)</title><rect x="578.2" y="85" width="1.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="581.24" y="95.5" ></text>
</g>
<g >
<title>F[List[org.scalasteward.core.data.Repo]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (1,914 Î¼s, 0.03%)</title><rect x="68.6" y="245" width="0.4" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="71.61" y="255.5" ></text>
</g>
<g >
<title>cats.kernel.Order[org.scalasteward.core.data.Dependency] (expanded macros 0)  (3,255 Î¼s, 0.05%)</title><rect x="291.4" y="245" width="0.6" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="294.40" y="255.5" ></text>
</g>
<g >
<title>buildRoot.type =&gt; ?{def -&gt; : ?} (expanded macros 0)  (953 Î¼s, 0.02%)</title><rect x="209.3" y="245" width="0.2" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="212.31" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.Resolver.IvyRepository] (expanded macros 0)   (1,951 Î¼s, 0.03%)</title><rect x="928.6" y="181" width="0.3" height="15.0" fill="rgb(236,103,103)" rx="2" ry="2" />
<text  x="931.57" y="191.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[org.scalasteward.core.data.GroupId]] (expanded macros 0)  (3,277 Î¼s, 0.05%)</title><rect x="674.3" y="181" width="0.7" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="677.33" y="191.5" ></text>
</g>
<g >
<title>Option[String] =&gt; ?{def orEmpty: ?} (expanded macros 0)  (806 Î¼s, 0.01%)</title><rect x="172.8" y="245" width="0.2" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="175.83" y="255.5" ></text>
</g>
<g >
<title>com.monovore.decline.Argument[scala.concurrent.duration.FiniteDuration] (expanded macros 0)  (4,192 Î¼s, 0.07%)</title><rect x="299.2" y="245" width="0.8" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="302.19" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;key&quot;)]} (id 4144) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (821 Î¼s, 0.01%)</title><rect x="523.9" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="526.87" y="191.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[None.type :: None.type :: None.type :: None.type :: Some[Option[Boolean]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;groupId&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;artifactId&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;command&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;commitMessage&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;addToGitBlameIgnoreRevs&quot;)] :: shapeless.HNil]{type Out = Rec} (expanded macros 0)  (1,976 Î¼s, 0.03%)</title><rect x="1006.0" y="197" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1009.01" y="207.5" ></text>
</g>
<g >
<title>Numeric[Int] (expanded macros 0)  (1,131 Î¼s, 0.02%)</title><rect x="159.5" y="213" width="0.2" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="162.45" y="223.5" ></text>
</g>
<g >
<title>Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;assignee&quot;)],Option[String]] :: Option[Vector[String]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)],Option[Vector[String]]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;base&quot;)],Option[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;body&quot;)],Option[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;due_date&quot;)],Option[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;head&quot;)],Option[String]] :: Option[Vector[Int]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;labels&quot;)],Option[Vector[Int]]] :: Option[Int] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;milestone&quot;)],Option[Int]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)],Option[String]] :: shapeless.HNil &lt;:&lt; (Option[String] :: Option[Vector[String]] :: Option[String] :: Option[String] :: Option[String] :: Option[String] :: Option[Vector[Int]] :: Option[Int] :: Option[String] :: shapeless.HNil) (expanded macros 0)  (592 Î¼s, 0.01%)</title><rect x="571.8" y="197" width="0.1" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="574.82" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;grouping&quot;)]} (id 7532) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,182 Î¼s, 0.02%)</title><rect x="1021.0" y="181" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1023.95" y="191.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitea.GiteaApiAlg.CreatePullRequestOption]{type Out = K} (id 4722) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (2,758 Î¼s, 0.04%)</title><rect x="572.5" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="575.49" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[cats.data.NonEmptyList[org.scalasteward.core.repoconfig.PullRequestUpdateFilter]] (expanded macros 0)  (1,686 Î¼s, 0.03%)</title><rect x="796.0" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="798.99" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: shapeless.HNil,List]{type Lub = Option[io.circe.generic.extras.JsonKey]} (expanded macros 0)  (721 Î¼s, 0.01%)</title><rect x="1002.6" y="213" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1005.58" y="223.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.data.Update.Grouped]{type Repr = R} (expanded macros 0)  (23,939 Î¼s, 0.39%)</title><rect x="684.2" y="213" width="4.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="687.23" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;html_url&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;number&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: shapeless.HNil,org.http4s.Uri :: org.scalasteward.core.forge.data.PullRequestState :: org.scalasteward.core.forge.data.PullRequestNumber :: String :: shapeless.HNil]{type Out = R} (expanded macros 0)  (4,934 Î¼s, 0.08%)</title><rect x="749.6" y="197" width="1.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="752.61" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;milestone&quot;)]} (id 4735) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,346 Î¼s, 0.02%)</title><rect x="578.5" y="69" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="581.48" y="79.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.forge.data.PullRequestOut] =&gt; ?{def map: ?} (expanded macros 0)  (805 Î¼s, 0.01%)</title><rect x="135.5" y="245" width="0.2" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="138.51" y="255.5" ></text>
</g>
<g >
<title>exitValue.type =&gt; ?{def === : ?} (expanded macros 0)  (602 Î¼s, 0.01%)</title><rect x="316.1" y="245" width="0.1" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="319.06" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;fromRef&quot;)]} (id 4052) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (826 Î¼s, 0.01%)</title><rect x="850.6" y="101" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="853.56" y="111.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (1,548 Î¼s, 0.03%)</title><rect x="1162.6" y="181" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1165.58" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)]} (id 4437) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (587 Î¼s, 0.01%)</title><rect x="755.5" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="758.52" y="191.5" ></text>
</g>
<g >
<title>cats.effect.kernel.GenTemporal[F,Throwable] (expanded macros 0)  (1,409 Î¼s, 0.02%)</title><rect x="266.6" y="245" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="269.61" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;reviewer_ids&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;target_project_id&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;remove_source_branch&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;source_branch&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;target_branch&quot;)] :: shapeless.HNil,Option[List[Int]] :: Long :: Option[Boolean] :: String :: org.scalasteward.core.git.Branch :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (8,503 Î¼s, 0.14%)</title><rect x="884.6" y="117" width="1.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="887.57" y="127.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.decoding.ReprDecoder[List[org.scalasteward.core.update.artifact.ArtifactChange] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;changes&quot;)],List[org.scalasteward.core.update.artifact.ArtifactChange]] :: shapeless.HNil] (id 8850) (expanded macros 3) (tree from `io.circe.generic.extras.ConfigurableDeriver.deriveConfiguredDecoder`)  (3,402 Î¼s, 0.06%)</title><rect x="1171.9" y="197" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1174.89" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[org.scalasteward.core.data.Resolver.Credentials]] (expanded macros 0)  (2,792 Î¼s, 0.05%)</title><rect x="962.2" y="117" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="965.15" y="127.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;parent&quot;)]} (id 4555) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,585 Î¼s, 0.03%)</title><rect x="625.0" y="69" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="628.02" y="79.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)]} (id 2484) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,596 Î¼s, 0.03%)</title><rect x="687.7" y="165" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="690.73" y="175.5" ></text>
</g>
<g >
<title>F[Either[Throwable,coursier.core.Repository]] =&gt; ?{def map: ?} (expanded macros 0)  (2,469 Î¼s, 0.04%)</title><rect x="57.5" y="245" width="0.4" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="60.47" y="255.5" ></text>
</g>
<g >
<title>fs2.Stream[[x]fs2.Pure[x],org.scalasteward.core.data.Scope[List[org.scalasteward.core.data.Dependency]]] =&gt; ?{def toList: ?} (expanded macros 0)  (8,554 Î¼s, 0.14%)</title><rect x="323.8" y="245" width="1.6" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="326.81" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;failedAt&quot;)]} (id 6811) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (591 Î¼s, 0.01%)</title><rect x="647.6" y="181" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="650.64" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;default_branch&quot;)]} (id 4433) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (896 Î¼s, 0.01%)</title><rect x="756.7" y="117" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="759.68" y="127.5" ></text>
</g>
<g >
<title>cats.kernel.Order[String] =&gt; ?{def contramap: ?} (expanded macros 0)  (3,543 Î¼s, 0.06%)</title><rect x="290.5" y="245" width="0.7" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="293.51" y="255.5" ></text>
</g>
<g >
<title>cats.UnorderedFoldable[Option] (expanded macros 0)  (635 Î¼s, 0.01%)</title><rect x="252.7" y="245" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="255.73" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.ReprDecoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: shapeless.HNil] (id 4012) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveDecoder`)  (3,099 Î¼s, 0.05%)</title><rect x="717.8" y="197" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="720.78" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.ReprDecoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;slug&quot;)],String] :: scala.collection.immutable.Map[String,cats.data.NonEmptyList[org.scalasteward.core.forge.bitbucketserver.Json.Link]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;links&quot;)],scala.collection.immutable.Map[String,cats.data.NonEmptyList[org.scalasteward.core.forge.bitbucketserver.Json.Link]]] :: shapeless.HNil] (id 4181) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveDecoder`)  (3,844 Î¼s, 0.06%)</title><rect x="734.9" y="197" width="0.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="737.85" y="207.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.RefType[F] (expanded macros 0)   (894 Î¼s, 0.01%)</title><rect x="157.2" y="229" width="0.2" height="15.0" fill="rgb(236,103,103)" rx="2" ry="2" />
<text  x="160.21" y="239.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)]} (id 1958) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (876 Î¼s, 0.01%)</title><rect x="986.5" y="117" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="989.54" y="127.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],Option[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;organization&quot;)],Option[String]] :: shapeless.HNil] (id 4515) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (5,742 Î¼s, 0.09%)</title><rect x="557.7" y="197" width="1.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="560.66" y="207.5" ></text>
</g>
<g >
<title>migrations.type =&gt; ?{def traverse: ?} (expanded macros 0)  (1,480 Î¼s, 0.02%)</title><rect x="391.1" y="245" width="0.3" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="394.10" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;values&quot;)]} (id 3964) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,000 Î¼s, 0.02%)</title><rect x="710.5" y="181" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="713.48" y="191.5" ></text>
</g>
<g >
<title>F[Option[org.scalasteward.core.edit.EditAttempt]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (849 Î¼s, 0.01%)</title><rect x="84.9" y="245" width="0.1" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="87.87" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[String] (expanded macros 0)  (671 Î¼s, 0.01%)</title><rect x="587.2" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="590.15" y="191.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;token&quot;)],String] :: shapeless.HNil]] (id 5362) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (2,851 Î¼s, 0.05%)</title><rect x="787.3" y="213" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="790.26" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[List[org.scalasteward.core.data.Resolver.Header] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)],List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil] (expanded macros 0)  (2,120 Î¼s, 0.03%)</title><rect x="947.6" y="101" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="950.62" y="111.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.GroupId] (expanded macros 0)  (1,076 Î¼s, 0.02%)</title><rect x="1013.1" y="165" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1016.07" y="175.5" ></text>
</g>
<g >
<title>F[Unit] =&gt; ?{def *&gt; : ?} (expanded macros 0)  (1,389 Î¼s, 0.02%)</title><rect x="93.9" y="245" width="0.3" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="96.89" y="255.5" ></text>
</g>
<g >
<title>cats.Traverse[Seq] (expanded macros 0)  (1,658 Î¼s, 0.03%)</title><rect x="306.7" y="229" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="309.72" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;allow&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;allowPreReleases&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;ignore&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)] :: shapeless.HNil,List[org.scalasteward.core.repoconfig.UpdatePattern] :: List[org.scalasteward.core.repoconfig.UpdatePattern] :: List[org.scalasteward.core.repoconfig.UpdatePattern] :: Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]] :: Option[List[String]] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (11,990 Î¼s, 0.19%)</title><rect x="1094.3" y="181" width="2.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1097.35" y="191.5" ></text>
</g>
<g >
<title>cats.Functor[Option] (expanded macros 0)  (656 Î¼s, 0.01%)</title><rect x="236.7" y="245" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="239.70" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;allow&quot;)]} (id 8270) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,046 Î¼s, 0.02%)</title><rect x="1094.6" y="165" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1097.56" y="175.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.gitlab.CommitId] (expanded macros 0)  (10,729 Î¼s, 0.17%)</title><rect x="788.4" y="229" width="2.0" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="791.38" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;toRef&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;locked&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: shapeless.HNil,org.scalasteward.core.forge.bitbucketserver.Json.Ref :: Boolean :: List[org.scalasteward.core.forge.bitbucketserver.Json.Reviewer] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (5,236 Î¼s, 0.08%)</title><rect x="850.7" y="101" width="1.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="853.72" y="111.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.repoconfig.PullRequestsConfig] (expanded macros 0)  (809 Î¼s, 0.01%)</title><rect x="1063.3" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1066.31" y="191.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.data.Scope[A]] (expanded macros 0)  (56,509 Î¼s, 0.92%)</title><rect x="493.5" y="229" width="10.8" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="496.47" y="239.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)]} (id 7880) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (642 Î¼s, 0.01%)</title><rect x="1074.2" y="85" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1077.16" y="95.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;ignore&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)] :: shapeless.HNil,List[org.scalasteward.core.repoconfig.UpdatePattern] :: Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]] :: Option[List[String]] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (7,624 Î¼s, 0.12%)</title><rect x="1095.2" y="149" width="1.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1098.18" y="159.5" ></text>
</g>
<g >
<title>shapeless.Annotations[io.circe.generic.extras.JsonKey,org.scalasteward.core.data.Resolver.IvyRepository]{type Out = K} (id 2140) (expanded macros 3) (tree from `shapeless.AnnotationMacros.materializeVariableAnnotations`)  (1,501 Î¼s, 0.02%)</title><rect x="969.4" y="149" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="972.39" y="159.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.PostUpdateHookConfig]{type Out = Labels} (id 7240) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (981 Î¼s, 0.02%)</title><rect x="1006.4" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1009.39" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)]} (id 7624) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (792 Î¼s, 0.01%)</title><rect x="1054.7" y="85" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1057.72" y="95.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.nurture.PullRequestRepository.Entry]{type Repr = V} (id 6578) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (2,063 Î¼s, 0.03%)</title><rect x="637.0" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="640.01" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.git.Branch] (expanded macros 0)  (1,503 Î¼s, 0.02%)</title><rect x="887.7" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="890.68" y="191.5" ></text>
</g>
<g >
<title>cats.Alternative[List] (expanded macros 0)  (884 Î¼s, 0.01%)</title><rect x="210.8" y="245" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="213.83" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (4,791 Î¼s, 0.08%)</title><rect x="945.6" y="117" width="0.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="948.56" y="127.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[org.scalasteward.core.data.GroupId] (expanded macros 0)  (889 Î¼s, 0.01%)</title><rect x="327.9" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="330.87" y="239.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.PullRequestGroup]{type Out = K} (id 7361) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (819 Î¼s, 0.01%)</title><rect x="888.8" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="891.78" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.data.CommitOut]{type Repr = V} (expanded macros 3)   (1,561 Î¼s, 0.03%)</title><rect x="744.1" y="197" width="0.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="747.07" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;commitMessage&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;addToGitBlameIgnoreRevs&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (3,222 Î¼s, 0.05%)</title><rect x="1015.8" y="165" width="0.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1018.83" y="175.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.CommitsConfig]{type Repr = V} (expanded macros 3)   (1,253 Î¼s, 0.02%)</title><rect x="1000.4" y="197" width="0.2" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="1003.37" y="207.5" ></text>
</g>
<g >
<title>Int(5) =&gt; eu.timepit.refined.api.Refined[Int,eu.timepit.refined.numeric.Greater[shapeless._0]] (expanded macros 0)  (67,188 Î¼s, 1.09%)</title><rect x="154.8" y="245" width="12.9" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="157.84" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.data.UserOut] (expanded macros 0)  (9,960 Î¼s, 0.16%)</title><rect x="759.7" y="229" width="1.9" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="762.72" y="239.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;location&quot;)]} (id 1724) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (963 Î¼s, 0.02%)</title><rect x="959.0" y="101" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="961.99" y="111.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.encoding.ReprAsObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;pattern&quot;)],String] :: Option[org.scalasteward.core.data.Resolver.Credentials] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)],Option[org.scalasteward.core.data.Resolver.Credentials]] :: List[org.scalasteward.core.data.Resolver.Header] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)],List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil] (id 2089) (expanded macros 3) (tree from `io.circe.generic.extras.ConfigurableDeriver.deriveConfiguredEncoder`)  (9,687 Î¼s, 0.16%)</title><rect x="976.3" y="133" width="1.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="979.26" y="143.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.util.Timestamp] (expanded macros 0)  (3,988 Î¼s, 0.06%)</title><rect x="447.8" y="181" width="0.8" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="450.79" y="191.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.VersionPattern]{type Out = K} (id 8489) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,094 Î¼s, 0.02%)</title><rect x="891.9" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="894.91" y="207.5" ></text>
</g>
<g >
<title>Int(2) =&gt; ?{def minutes: ?} (expanded macros 0)  (1,462 Î¼s, 0.02%)</title><rect x="154.4" y="245" width="0.3" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="157.44" y="255.5" ></text>
</g>
<g >
<title>(=&gt; cats.data.NonEmptyList[String]) =&gt; ?{def mkString_: ?} (expanded macros 0)   (612 Î¼s, 0.01%)</title><rect x="23.0" y="245" width="0.1" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text  x="25.98" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucketserver.Json.Project]{type Repr = V} (expanded macros 3)   (1,378 Î¼s, 0.02%)</title><rect x="523.2" y="197" width="0.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="526.25" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;customLabels&quot;)]} (id 7451) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,452 Î¼s, 0.02%)</title><rect x="1028.0" y="133" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1030.97" y="143.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;head&quot;)]} (id 4737) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,531 Î¼s, 0.02%)</title><rect x="577.5" y="101" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="580.46" y="111.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,List]{type Lub = Option[io.circe.generic.extras.JsonKey]} (expanded macros 0)  (11,370 Î¼s, 0.18%)</title><rect x="1100.6" y="213" width="2.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1103.61" y="223.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[Some[org.scalasteward.core.repoconfig.CommitsConfig] :: Some[org.scalasteward.core.repoconfig.PullRequestsConfig] :: Some[org.scalasteward.core.repoconfig.ScalafmtConfig] :: Some[org.scalasteward.core.repoconfig.UpdatesConfig] :: Some[Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]]] :: Some[Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy]] :: Some[Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]]] :: Some[List[String]] :: Some[List[String]] :: Some[List[org.scalasteward.core.repoconfig.GroupRepoConfig]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;commits&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;pullRequests&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;scalafmt&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil]{type Out = Rec} (expanded macros 0)  (7,095 Î¼s, 0.12%)</title><rect x="1047.9" y="197" width="1.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1050.87" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;includeMatchedLabels&quot;)]} (id 7544) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,141 Î¼s, 0.02%)</title><rect x="1040.5" y="165" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1043.49" y="175.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.PullRequestGroup]{type Repr = V} (id 7334) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,005 Î¼s, 0.02%)</title><rect x="794.4" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="797.41" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.repocache.RepoCache] (expanded macros 0)  (4,979 Î¼s, 0.08%)</title><rect x="376.5" y="245" width="0.9" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="379.46" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.repoconfig.PostUpdateHookConfig] (expanded macros 0)  (835 Î¼s, 0.01%)</title><rect x="1062.8" y="149" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1065.76" y="159.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.forge.github.GitHubReviewers] (expanded macros 0)  (1,319 Î¼s, 0.02%)</title><rect x="386.8" y="245" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="389.81" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.Version] (expanded macros 0)  (7,107 Î¼s, 0.12%)</title><rect x="443.3" y="165" width="1.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="446.27" y="175.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Dependency]{type Out = K} (id 1457) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (2,810 Î¼s, 0.05%)</title><rect x="468.6" y="197" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="471.65" y="207.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.update.artifact.ArtifactChange]{type Repr = R} (expanded macros 0)   (8,421 Î¼s, 0.14%)</title><rect x="1158.1" y="213" width="1.7" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="1161.14" y="223.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Update.ForArtifactId]{type Repr = V} (id 2354) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (2,961 Î¼s, 0.05%)</title><rect x="669.5" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="672.46" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;scalafmt&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil,org.scalasteward.core.repoconfig.ScalafmtConfig :: org.scalasteward.core.repoconfig.UpdatesConfig :: Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]] :: Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy] :: Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]] :: List[String] :: List[String] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (10,328 Î¼s, 0.17%)</title><rect x="1058.0" y="165" width="2.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1061.02" y="175.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.forge.bitbucketserver.Json.Page[org.scalasteward.core.forge.bitbucketserver.Json.PR]] (expanded macros 0)  (5,151 Î¼s, 0.08%)</title><rect x="368.0" y="245" width="0.9" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="370.96" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (13,129 Î¼s, 0.21%)</title><rect x="1069.6" y="149" width="2.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1072.64" y="159.5" ></text>
</g>
<g >
<title>shapeless.Lazy[shapeless.Generic[org.scalasteward.core.forge.data.PullRequestNumber]{type Repr = R :: shapeless.HNil}] (id 4372) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (2,828 Î¼s, 0.05%)</title><rect x="1146.9" y="213" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1149.95" y="223.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.data.Comment]{type Repr = R} (expanded macros 0)  (6,565 Î¼s, 0.11%)</title><rect x="534.3" y="213" width="1.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="537.32" y="223.5" ></text>
</g>
<g >
<title>Int(2) =&gt; ?{def hours: ?} (expanded macros 0)  (1,843 Î¼s, 0.03%)</title><rect x="154.1" y="245" width="0.3" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="157.08" y="255.5" ></text>
</g>
<g >
<title>result.type =&gt; ?{def flatMap: ?} (expanded macros 0)  (587 Î¼s, 0.01%)</title><rect x="413.3" y="245" width="0.1" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="416.28" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Resolver.MavenRepository]{type Repr = V} (id 1716) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (2,387 Î¼s, 0.04%)</title><rect x="958.1" y="133" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="961.09" y="143.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Update.ForGroupId]{type Repr = V} (id 2404) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (2,065 Î¼s, 0.03%)</title><rect x="815.6" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="818.58" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (1,669 Î¼s, 0.03%)</title><rect x="963.7" y="101" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="966.74" y="111.5" ></text>
</g>
<g >
<title>io.circe.Encoder[String] (expanded macros 0)  (777 Î¼s, 0.01%)</title><rect x="533.2" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="536.23" y="191.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Vector[String]] (expanded macros 0)  (914 Î¼s, 0.01%)</title><rect x="581.9" y="165" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="584.93" y="175.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.github.TokenOut]{type Out = K} (id 5356) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (620 Î¼s, 0.01%)</title><rect x="786.5" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="789.46" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.UpdatesConfig]{type Repr = V} (expanded macros 3)   (2,331 Î¼s, 0.04%)</title><rect x="1088.5" y="197" width="0.5" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="1091.51" y="207.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.git.Sha1] =&gt; ?{def flatMap: ?} (expanded macros 0)  (994 Î¼s, 0.02%)</title><rect x="141.2" y="245" width="0.2" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="144.21" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.util.RecordToMap[org.scalasteward.core.repoconfig.CommitsConfig with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;commits&quot;)],org.scalasteward.core.repoconfig.CommitsConfig] :: org.scalasteward.core.repoconfig.PullRequestsConfig with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;pullRequests&quot;)],org.scalasteward.core.repoconfig.PullRequestsConfig] :: org.scalasteward.core.repoconfig.ScalafmtConfig with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;scalafmt&quot;)],org.scalasteward.core.repoconfig.ScalafmtConfig] :: org.scalasteward.core.repoconfig.UpdatesConfig with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)],org.scalasteward.core.repoconfig.UpdatesConfig] :: Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)],Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]]] :: Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)],Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy]] :: Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)],Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)],List[String]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)],List[String]] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)],List[org.scalasteward.core.repoconfig.GroupRepoConfig]] :: shapeless.HNil] (expanded macros 0)  (10,507 Î¼s, 0.17%)</title><rect x="1045.3" y="213" width="2.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1048.34" y="223.5" ></text>
</g>
<g >
<title>StringContext =&gt; ?{def uri: ?} (expanded macros 0)  (5,949 Î¼s, 0.10%)</title><rect x="204.9" y="245" width="1.1" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="207.85" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]]] (expanded macros 0)  (1,005 Î¼s, 0.02%)</title><rect x="1100.4" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1103.41" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;forArtifactIds&quot;)] :: shapeless.HNil,cats.data.NonEmptyList[org.scalasteward.core.data.Update.ForArtifactId] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (6,348 Î¼s, 0.10%)</title><rect x="680.3" y="197" width="1.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="683.28" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;contains&quot;)] :: shapeless.HNil,Option[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,538 Î¼s, 0.02%)</title><rect x="799.0" y="149" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="802.03" y="159.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[List[org.scalasteward.core.data.Resolver.Header] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)],List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil] (expanded macros 0)  (2,288 Î¼s, 0.04%)</title><rect x="968.5" y="101" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="971.48" y="111.5" ></text>
</g>
<g >
<title>F[(Either[Throwable,Unit], org.scalasteward.core.git.CommitMsg)] =&gt; ?{def flatMap: ?} (expanded macros 0)  (1,025 Î¼s, 0.02%)</title><rect x="40.8" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="43.83" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;open&quot;)]} (id 4054) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (792 Î¼s, 0.01%)</title><rect x="850.0" y="133" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="852.99" y="143.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.repoconfig.UpdatesConfig]{type Repr = R} (expanded macros 0)  (22,941 Î¼s, 0.37%)</title><rect x="1092.3" y="213" width="4.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1095.25" y="223.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.data.Update.Grouped] (expanded macros 0)  (32,158 Î¼s, 0.52%)</title><rect x="821.8" y="229" width="6.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="824.85" y="239.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.data.BranchOut]{type Repr = V} (id 4268) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,210 Î¼s, 0.02%)</title><rect x="737.4" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="740.42" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;source_branch&quot;)]} (id 5481) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (910 Î¼s, 0.01%)</title><rect x="885.6" y="53" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="888.59" y="63.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.data.BranchOut]{type Out = K} (id 4265) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,052 Î¼s, 0.02%)</title><rect x="736.7" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="739.67" y="207.5" ></text>
</g>
<g >
<title>cats.kernel.Semigroup[List[A]] (expanded macros 0)  (7,944 Î¼s, 0.13%)</title><rect x="292.7" y="245" width="1.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="295.71" y="255.5" ></text>
</g>
<g >
<title>shapeless.Default[org.scalasteward.core.repoconfig.PullRequestsConfig]{type Out = Options} (id 7522) (expanded macros 3) (tree from `shapeless.DefaultMacros.materialize`)  (2,752 Î¼s, 0.04%)</title><rect x="1023.6" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1026.61" y="207.5" ></text>
</g>
<g >
<title>org.scalasteward.core.data.Update.ForGroupIdDecoder.type =&gt; ?{def widen: ?} (expanded macros 0)  (1,068 Î¼s, 0.02%)</title><rect x="402.6" y="245" width="0.2" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="405.59" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[org.http4s.Uri with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;html_url&quot;)],org.http4s.Uri] :: org.scalasteward.core.forge.data.PullRequestState with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)],org.scalasteward.core.forge.data.PullRequestState] :: org.scalasteward.core.forge.data.PullRequestNumber with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;number&quot;)],org.scalasteward.core.forge.data.PullRequestNumber] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)],String] :: shapeless.HNil]] (id 4394) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (7,812 Î¼s, 0.13%)</title><rect x="750.6" y="213" width="1.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="753.56" y="223.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.repoconfig.UpdatePattern] (expanded macros 0)  (1,606 Î¼s, 0.03%)</title><rect x="1099.9" y="165" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1102.87" y="175.5" ></text>
</g>
<g >
<title>cats.Foldable[[+B]Either[io.circe.Error,B]] (expanded macros 0)  (731 Î¼s, 0.01%)</title><rect x="39.8" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="42.80" y="239.5" ></text>
</g>
<g >
<title>cats.kernel.Monoid[String] (expanded macros 0)  (2,868 Î¼s, 0.05%)</title><rect x="282.0" y="245" width="0.6" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="285.02" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucketserver.Json.Comment]{type Out = K} (id 3973) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (2,381 Î¼s, 0.04%)</title><rect x="519.4" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="522.38" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;base&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;body&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;due_date&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;head&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;labels&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;milestone&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: shapeless.HNil,Option[String] :: Option[String] :: Option[String] :: Option[String] :: Option[Vector[Int]] :: Option[Int] :: Option[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (19,895 Î¼s, 0.32%)</title><rect x="575.7" y="165" width="3.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="578.68" y="175.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[org.scalasteward.core.git.Sha1] (expanded macros 0)  (612 Î¼s, 0.01%)</title><rect x="409.8" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="412.80" y="239.5" ></text>
</g>
<g >
<title>cats.kernel.Order[org.http4s.Uri.Host] (expanded macros 0)  (623 Î¼s, 0.01%)</title><rect x="173.7" y="213" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="176.68" y="223.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.azurerepos.PullRequestPayload]{type Repr = R} (expanded macros 0)  (19,975 Î¼s, 0.32%)</title><rect x="839.0" y="213" width="3.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="841.97" y="223.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucketserver.Json.Page[A]]{type Repr = V} (expanded macros 3)   (1,994 Î¼s, 0.03%)</title><rect x="730.6" y="197" width="0.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="733.56" y="207.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.update.artifact.ArtifactChanges]{type Repr = R} (expanded macros 0)   (7,982 Î¼s, 0.13%)</title><rect x="1169.3" y="213" width="1.5" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="1172.31" y="223.5" ></text>
</g>
<g >
<title>io.circe.Decoder[cats.data.NonEmptyList[org.scalasteward.core.data.Version]] (expanded macros 0)  (4,802 Î¼s, 0.08%)</title><rect x="353.4" y="245" width="0.9" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="356.41" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.bitbucket.CreateComment] (expanded macros 0)  (12,831 Î¼s, 0.21%)</title><rect x="508.1" y="229" width="2.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="511.09" y="239.5" ></text>
</g>
<g >
<title>F[(List[org.scalasteward.core.update.data.UpdateState], List[org.scalasteward.core.update.data.UpdateState.DependencyOutdated])] =&gt; ?{def flatMap: ?} (expanded macros 0)  (706 Î¼s, 0.01%)</title><rect x="43.5" y="245" width="0.1" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="46.46" y="255.5" ></text>
</g>
<g >
<title>c1.type =&gt; ?{def compare: ?} (expanded macros 0)  (2,274 Î¼s, 0.04%)</title><rect x="210.2" y="245" width="0.4" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="213.21" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.encoding.ConfiguredAsObjectEncoder[org.scalasteward.core.data.Resolver.IvyRepository] (expanded macros 0)  (73,010 Î¼s, 1.18%)</title><rect x="969.1" y="165" width="14.0" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="972.10" y="175.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[cats.data.NonEmptyList[org.scalasteward.core.data.Update.ForArtifactId] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;forArtifactIds&quot;)],cats.data.NonEmptyList[org.scalasteward.core.data.Update.ForArtifactId]] :: shapeless.HNil]] (id 2445) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (7,116 Î¼s, 0.12%)</title><rect x="681.5" y="213" width="1.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="684.49" y="223.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)]} (id 4811) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,494 Î¼s, 0.02%)</title><rect x="591.5" y="181" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="594.52" y="191.5" ></text>
</g>
<g >
<title>x.assignees.type =&gt; ?{def |+| : ?} (expanded macros 0)  (575 Î¼s, 0.01%)</title><rect x="1187.9" y="245" width="0.1" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="1190.86" y="255.5" ></text>
</g>
<g >
<title>F[List[org.scalasteward.core.nurture.PullRequestData[cats.Id]]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (741 Î¼s, 0.01%)</title><rect x="76.1" y="245" width="0.1" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="79.09" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.gitea.GiteaApiAlg.PayloadCommit] (expanded macros 0)  (22,050 Î¼s, 0.36%)</title><rect x="601.9" y="229" width="4.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="604.91" y="239.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Resolver.MavenRepository]{type Repr = V} (id 1964) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (2,556 Î¼s, 0.04%)</title><rect x="989.0" y="133" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="992.01" y="143.5" ></text>
</g>
<g >
<title>io.circe.Decoder[cats.data.NonEmptyList[org.scalasteward.core.forge.bitbucketserver.Json.Branch]] (expanded macros 0)  (885 Î¼s, 0.01%)</title><rect x="711.3" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="714.26" y="191.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.gitea.GiteaApiAlg.CreateForkOption] (expanded macros 0)  (24,597 Î¼s, 0.40%)</title><rect x="554.1" y="229" width="4.7" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="557.05" y="239.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)]} (id 7654) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (540 Î¼s, 0.01%)</title><rect x="1058.4" y="133" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1061.39" y="143.5" ></text>
</g>
<g >
<title>io.circe.Decoder[io.circe.Json] (expanded macros 0)  (1,439 Î¼s, 0.02%)</title><rect x="357.0" y="245" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="360.02" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.github.RepositoriesOut]] (id 5314) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (103,162 Î¼s, 1.67%)</title><rect x="763.7" y="245" width="19.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="766.72" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[org.http4s.Uri with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;html_url&quot;)],org.http4s.Uri] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)],String] :: Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;number&quot;)],Int] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)],String] :: org.scalasteward.core.forge.gitea.GiteaApiAlg.PRBranchInfo with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;base&quot;)],org.scalasteward.core.forge.gitea.GiteaApiAlg.PRBranchInfo] :: org.scalasteward.core.forge.gitea.GiteaApiAlg.PRBranchInfo with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;head&quot;)],org.scalasteward.core.forge.gitea.GiteaApiAlg.PRBranchInfo] :: shapeless.HNil]] (id 4688) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (11,084 Î¼s, 0.18%)</title><rect x="613.9" y="213" width="2.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="616.89" y="223.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.util.RecordToMap[Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)],Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)],List[String]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)],List[String]] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)],List[org.scalasteward.core.repoconfig.GroupRepoConfig]] :: shapeless.HNil] (expanded macros 0)  (4,145 Î¼s, 0.07%)</title><rect x="1045.8" y="117" width="0.8" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1048.76" y="127.5" ></text>
</g>
<g >
<title>io.circe.Decoder[cats.data.NonEmptyList[String]] (expanded macros 0)  (769 Î¼s, 0.01%)</title><rect x="701.6" y="165" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="704.58" y="175.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitea.GiteaApiAlg.BranchResp]{type Repr = V} (expanded macros 3)   (2,523 Î¼s, 0.04%)</title><rect x="543.7" y="197" width="0.5" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="546.70" y="207.5" ></text>
</g>
<g >
<title>scala.util.Using.Releasable[org.bouncycastle.util.io.pem.PemReader] (expanded macros 0)  (1,236 Î¼s, 0.02%)</title><rect x="419.6" y="245" width="0.3" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="422.65" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;location&quot;)],String] :: Option[org.scalasteward.core.data.Resolver.Credentials] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)],Option[org.scalasteward.core.data.Resolver.Credentials]] :: List[org.scalasteward.core.data.Resolver.Header] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)],List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil] (expanded macros 0)  (6,055 Î¼s, 0.10%)</title><rect x="967.8" y="133" width="1.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="970.76" y="143.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.forge.bitbucketserver.Json.Repo] =&gt; ?{def flatMap: ?} (expanded macros 0)  (1,004 Î¼s, 0.02%)</title><rect x="134.4" y="245" width="0.2" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="137.45" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)]} (id 4009) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (814 Î¼s, 0.01%)</title><rect x="717.5" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="720.46" y="191.5" ></text>
</g>
<g >
<title>cats.kernel.Order[org.scalasteward.core.data.Version] (expanded macros 0)  (1,584 Î¼s, 0.03%)</title><rect x="176.6" y="229" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="179.56" y="239.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.repoconfig.CommitsConfig]{type Repr = R} (expanded macros 0)   (5,615 Î¼s, 0.09%)</title><rect x="999.9" y="213" width="1.1" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="1002.92" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;groupId&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;artifactId&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;command&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;commitMessage&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;addToGitBlameIgnoreRevs&quot;)] :: shapeless.HNil,Option[org.scalasteward.core.data.GroupId] :: Option[String] :: cats.data.NonEmptyList[String] :: String :: Option[Boolean] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (5,252 Î¼s, 0.09%)</title><rect x="1008.7" y="197" width="1.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1011.72" y="207.5" ></text>
</g>
<g >
<title>F[Seq[org.scalasteward.core.data.Scope[List[org.scalasteward.core.data.Dependency]]]] =&gt; ?{def map: ?} (expanded macros 0)  (1,747 Î¼s, 0.03%)</title><rect x="90.9" y="245" width="0.4" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="93.93" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.util.RecordToMap[Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)],Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]]] :: Option[List[String]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)],Option[List[String]]] :: shapeless.HNil] (expanded macros 0)  (3,065 Î¼s, 0.05%)</title><rect x="1082.6" y="149" width="0.6" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1085.64" y="159.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.Validate[Int,eu.timepit.refined.generic.Equal[40]]{type R = RP} (expanded macros 0)  (2,777 Î¼s, 0.05%)</title><rect x="311.2" y="197" width="0.5" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="314.16" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)] :: shapeless.HNil,org.scalasteward.core.git.Sha1 :: shapeless.HNil]{type Out = R} (expanded macros 0)  (4,380 Î¼s, 0.07%)</title><rect x="603.8" y="197" width="0.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="606.79" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;sha&quot;)] :: shapeless.HNil,org.scalasteward.core.git.Sha1 :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (3,570 Î¼s, 0.06%)</title><rect x="598.4" y="165" width="0.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="601.44" y="175.5" ></text>
</g>
<g >
<title>List[String] =&gt; ?{def traverse_: ?} (expanded macros 0)  (1,036 Î¼s, 0.02%)</title><rect x="169.2" y="245" width="0.2" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="172.16" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;location&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,String :: String :: Option[org.scalasteward.core.data.Resolver.Credentials] :: List[org.scalasteward.core.data.Resolver.Header] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (7,248 Î¼s, 0.12%)</title><rect x="986.4" y="133" width="1.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="989.37" y="143.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.repoconfig.VersionPattern]{type Repr = R} (expanded macros 0)  (11,758 Î¼s, 0.19%)</title><rect x="797.1" y="213" width="2.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="800.07" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;groupIdBefore&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;groupIdAfter&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;artifactIdBefore&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;artifactIdAfter&quot;)] :: shapeless.HNil,Option[org.scalasteward.core.data.GroupId] :: org.scalasteward.core.data.GroupId :: Option[String] :: String :: shapeless.HNil]{type Out = R} (expanded macros 0)  (3,429 Î¼s, 0.06%)</title><rect x="1160.4" y="197" width="0.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1163.45" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Long] (expanded macros 0)  (537 Î¼s, 0.01%)</title><rect x="552.9" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="555.88" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;labels&quot;)]} (id 4845) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,571 Î¼s, 0.03%)</title><rect x="539.9" y="181" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="542.90" y="191.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[String]] (expanded macros 0)  (576 Î¼s, 0.01%)</title><rect x="657.5" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="660.47" y="191.5" ></text>
</g>
<g >
<title>io.circe.Decoder[String] (expanded macros 0)  (674 Î¼s, 0.01%)</title><rect x="521.6" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="524.64" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;comments&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;status&quot;)] :: shapeless.HNil,List[org.scalasteward.core.forge.azurerepos.AzureComment] :: Int :: shapeless.HNil]{type Out = R} (expanded macros 0)  (3,602 Î¼s, 0.06%)</title><rect x="836.0" y="197" width="0.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="838.98" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;grouping&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;includeMatchedLabels&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;customLabels&quot;)] :: shapeless.HNil,List[org.scalasteward.core.repoconfig.PullRequestGroup] :: Option[scala.util.matching.Regex] :: List[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (7,644 Î¼s, 0.12%)</title><rect x="1030.3" y="181" width="1.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1033.30" y="191.5" ></text>
</g>
<g >
<title>cats.Traverse[List] (expanded macros 0)  (4,621 Î¼s, 0.07%)</title><rect x="251.2" y="245" width="0.9" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="254.19" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.azurerepos.PullRequestPayload]{type Out = K} (id 3386) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (2,088 Î¼s, 0.03%)</title><rect x="839.3" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="842.34" y="207.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.bitbucketserver.Json.Project]{type Repr = R} (expanded macros 0)  (7,225 Î¼s, 0.12%)</title><rect x="522.7" y="213" width="1.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="525.69" y="223.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.github.GitHubAssignees]{type Out = K} (id 5255) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (766 Î¼s, 0.01%)</title><rect x="868.6" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="871.60" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;owner&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;archived&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;clone_url&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;default_branch&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;parent&quot;)] :: shapeless.HNil,org.scalasteward.core.forge.gitea.GiteaApiAlg.User :: String :: Boolean :: org.http4s.Uri :: String :: Option[org.scalasteward.core.forge.gitea.GiteaApiAlg.Repository] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (17,053 Î¼s, 0.28%)</title><rect x="622.3" y="165" width="3.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="625.26" y="175.5" ></text>
</g>
<g >
<title>cats.effect.kernel.Sync[F] (expanded macros 0)  (8,778 Î¼s, 0.14%)</title><rect x="268.9" y="245" width="1.7" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="271.92" y="255.5" ></text>
</g>
<g >
<title>(=&gt; Char('=')) =&gt; String (expanded macros 0)   (648 Î¼s, 0.01%)</title><rect x="22.1" y="245" width="0.1" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text  x="25.09" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)]} (id 4024) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,138 Î¼s, 0.02%)</title><rect x="721.7" y="165" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="724.69" y="175.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;command&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;commitMessage&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;addToGitBlameIgnoreRevs&quot;)] :: shapeless.HNil,cats.data.NonEmptyList[String] :: String :: Option[Boolean] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (2,972 Î¼s, 0.05%)</title><rect x="1009.2" y="165" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1012.15" y="175.5" ></text>
</g>
<g >
<title>F[(Unit, (List[org.scalasteward.core.edit.scalafix.ScalafixMigration], List[org.scalasteward.core.edit.scalafix.ScalafixMigration]))] =&gt; ?{def flatMap: ?} (expanded macros 0)  (958 Î¼s, 0.02%)</title><rect x="44.9" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="47.91" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.PullRequestGroup]{type Out = K} (id 7363) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (708 Î¼s, 0.01%)</title><rect x="888.9" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="891.94" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.ScalafmtConfig]{type Repr = V} (expanded macros 3)   (984 Î¼s, 0.02%)</title><rect x="1077.0" y="197" width="0.2" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="1080.00" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[List[org.scalasteward.core.data.Resolver.Header]] (expanded macros 0)  (2,627 Î¼s, 0.04%)</title><rect x="992.1" y="117" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="995.06" y="127.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.codec.ConfiguredAsObjectCodec[org.scalasteward.core.repoconfig.CommitsConfig] (expanded macros 0)  (22,750 Î¼s, 0.37%)</title><rect x="998.8" y="229" width="4.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1001.85" y="239.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucketserver.Json.Repository]{type Out = K} (id 4190) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,056 Î¼s, 0.02%)</title><rect x="857.9" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="860.93" y="207.5" ></text>
</g>
<g >
<title>create.type =&gt; ?{def flatMap: ?} (expanded macros 0)  (720 Î¼s, 0.01%)</title><rect x="302.4" y="245" width="0.1" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="305.39" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,006 Î¼s, 0.02%)</title><rect x="545.2" y="181" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="548.18" y="191.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.forge.github.TokenOut] =&gt; ?{def flatMap: ?} (expanded macros 0)  (1,776 Î¼s, 0.03%)</title><rect x="138.6" y="245" width="0.4" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="141.61" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;updateBranch&quot;)]} (id 6586) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,479 Î¼s, 0.02%)</title><rect x="639.8" y="101" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="642.77" y="111.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)]} (id 1846) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,464 Î¼s, 0.02%)</title><rect x="939.6" y="69" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="942.55" y="79.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.ReprAsObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;description&quot;)],String] :: org.scalasteward.core.forge.data.PullRequestState with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)],org.scalasteward.core.forge.data.PullRequestState] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;open&quot;)],Boolean] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;closed&quot;)],Boolean] :: org.scalasteward.core.forge.bitbucketserver.Json.Ref with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;fromRef&quot;)],org.scalasteward.core.forge.bitbucketserver.Json.Ref] :: org.scalasteward.core.forge.bitbucketserver.Json.Ref with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;toRef&quot;)],org.scalasteward.core.forge.bitbucketserver.Json.Ref] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;locked&quot;)],Boolean] :: List[org.scalasteward.core.forge.bitbucketserver.Json.Reviewer] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)],List[org.scalasteward.core.forge.bitbucketserver.Json.Reviewer]] :: shapeless.HNil] (id 4060) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveEncoder`)  (7,816 Î¼s, 0.13%)</title><rect x="851.9" y="197" width="1.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="854.92" y="207.5" ></text>
</g>
<g >
<title>cats.effect.kernel.GenConcurrent[[x]F[x],Throwable] (expanded macros 0)  (2,123 Î¼s, 0.03%)</title><rect x="322.4" y="213" width="0.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="325.35" y="223.5" ></text>
</g>
<g >
<title>artifactIds.type =&gt; ?{def map: ?} (expanded macros 0)  (647 Î¼s, 0.01%)</title><rect x="208.7" y="245" width="0.1" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="211.70" y="255.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.github.GitHubAssignees]{type Repr = R} (expanded macros 0)  (7,119 Î¼s, 0.12%)</title><rect x="868.4" y="213" width="1.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="871.39" y="223.5" ></text>
</g>
<g >
<title>((com.monovore.decline.Opts[String], com.monovore.decline.Opts[String], com.monovore.decline.Opts[Option[String]])) =&gt; ?{def mapN: ?} (expanded macros 0)  (2,947 Î¼s, 0.05%)</title><rect x="18.6" y="245" width="0.6" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="21.61" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (4,985 Î¼s, 0.08%)</title><rect x="980.4" y="117" width="0.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="983.39" y="127.5" ></text>
</g>
<g >
<title>io.circe.Decoder[List[org.scalasteward.core.data.Update.ForArtifactId]] (expanded macros 0)  (1,353 Î¼s, 0.02%)</title><rect x="689.8" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="692.79" y="191.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.Version] (expanded macros 0)  (1,334 Î¼s, 0.02%)</title><rect x="703.4" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="706.37" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;grouping&quot;)]} (id 7542) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,157 Î¼s, 0.02%)</title><rect x="1040.1" y="181" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1043.14" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)]} (id 2006) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (950 Î¼s, 0.02%)</title><rect x="997.8" y="85" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1000.78" y="95.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.codec.ReprAsObjectCodec[org.scalasteward.core.repoconfig.CommitsConfig with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;commits&quot;)],org.scalasteward.core.repoconfig.CommitsConfig] :: org.scalasteward.core.repoconfig.PullRequestsConfig with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;pullRequests&quot;)],org.scalasteward.core.repoconfig.PullRequestsConfig] :: org.scalasteward.core.repoconfig.ScalafmtConfig with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;scalafmt&quot;)],org.scalasteward.core.repoconfig.ScalafmtConfig] :: org.scalasteward.core.repoconfig.UpdatesConfig with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)],org.scalasteward.core.repoconfig.UpdatesConfig] :: Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)],Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]]] :: Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)],Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy]] :: Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)],Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)],List[String]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)],List[String]] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)],List[org.scalasteward.core.repoconfig.GroupRepoConfig]] :: shapeless.HNil] (id 7660) (expanded macros 3) (tree from `io.circe.generic.extras.ConfigurableDeriver.deriveConfiguredCodec`)  (29,248 Î¼s, 0.47%)</title><rect x="1060.2" y="197" width="5.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1063.16" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.PullRequestGroup]{type Repr = V} (id 7364) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,010 Î¼s, 0.02%)</title><rect x="889.3" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="892.27" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.gitea.GiteaApiAlg.CreateLabelReq] (expanded macros 0)  (24,908 Î¼s, 0.40%)</title><rect x="564.3" y="229" width="4.8" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="567.29" y="239.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.data.RepoOut]{type Repr = V} (id 4424) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (2,053 Î¼s, 0.03%)</title><rect x="754.9" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="757.92" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.util.Timestamp] (expanded macros 0)  (1,116 Î¼s, 0.02%)</title><rect x="648.8" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="651.82" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (916 Î¼s, 0.01%)</title><rect x="632.5" y="165" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="635.46" y="175.5" ></text>
</g>
<g >
<title>F[better.files.File] =&gt; ?{def flatMap: ?} (expanded macros 0)  (20,631 Î¼s, 0.33%)</title><rect x="119.5" y="245" width="3.9" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="122.48" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.util.RecordToMap[List[org.scalasteward.core.edit.scalafix.ScalafixMigration] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;migrations&quot;)],List[org.scalasteward.core.edit.scalafix.ScalafixMigration]] :: shapeless.HNil] (expanded macros 0)  (1,109 Î¼s, 0.02%)</title><rect x="1149.8" y="213" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1152.76" y="223.5" ></text>
</g>
<g >
<title>x$2.type =&gt; ?{def traverse_: ?} (expanded macros 0)  (2,087 Î¼s, 0.03%)</title><rect x="1184.2" y="245" width="0.4" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="1187.18" y="255.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.data.Resolver.IvyRepository]{type Repr = R} (expanded macros 0)  (1,285 Î¼s, 0.02%)</title><rect x="969.7" y="149" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="972.68" y="159.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Resolver.MavenRepository]{type Out = K} (id 1948) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,832 Î¼s, 0.03%)</title><rect x="984.8" y="133" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="987.85" y="143.5" ></text>
</g>
<g >
<title>F[cats.effect.ExitCode] =&gt; ?{def map: ?} (expanded macros 0)  (1,582 Î¼s, 0.03%)</title><rect x="125.6" y="245" width="0.3" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="128.58" y="255.5" ></text>
</g>
<g >
<title>F[List[org.scalasteward.core.update.artifact.ArtifactChange]] =&gt; ?{def map: ?} (expanded macros 0)  (837 Î¼s, 0.01%)</title><rect x="76.5" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="79.52" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (1,536 Î¼s, 0.02%)</title><rect x="981.0" y="101" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="984.05" y="111.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.repoconfig.ScalafmtConfig] (expanded macros 0)  (862 Î¼s, 0.01%)</title><rect x="1063.5" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1066.47" y="191.5" ></text>
</g>
<g >
<title>to.patch.type =&gt; ?{def =!= : ?} (expanded macros 0)  (689 Î¼s, 0.01%)</title><rect x="1175.1" y="245" width="0.1" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="1178.09" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;dependency&quot;)]} (id 1600) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,131 Î¼s, 0.02%)</title><rect x="460.4" y="181" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="463.37" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;status&quot;)]} (id 3417) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (821 Î¼s, 0.01%)</title><rect x="832.8" y="181" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="835.81" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)]} (id 7627) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (631 Î¼s, 0.01%)</title><rect x="1053.9" y="133" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1056.90" y="143.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.azurerepos.AzureComment]{type Repr = V} (expanded macros 3)   (1,578 Î¼s, 0.03%)</title><rect x="829.3" y="197" width="0.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="832.34" y="207.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.bitbucketserver.Json.User]{type Repr = R} (expanded macros 0)  (15,768 Î¼s, 0.26%)</title><rect x="528.6" y="213" width="3.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="531.57" y="223.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[org.scalasteward.core.data.GroupId] (expanded macros 0)  (1,748 Î¼s, 0.03%)</title><rect x="409.3" y="229" width="0.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="412.33" y="239.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.util.RecordToMap[org.scalasteward.core.repoconfig.UpdatesConfig with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)],org.scalasteward.core.repoconfig.UpdatesConfig] :: Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)],Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]]] :: Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)],Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy]] :: Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)],Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)],List[String]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)],List[String]] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)],List[org.scalasteward.core.repoconfig.GroupRepoConfig]] :: shapeless.HNil] (expanded macros 0)  (7,263 Î¼s, 0.12%)</title><rect x="1045.5" y="165" width="1.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1048.55" y="175.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.forge.github.Repository] (expanded macros 0)  (1,264 Î¼s, 0.02%)</title><rect x="783.2" y="165" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="786.22" y="175.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;migrations&quot;)] :: shapeless.HNil,List]{type Lub = Symbol} (expanded macros 0)  (1,365 Î¼s, 0.02%)</title><rect x="1155.0" y="213" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1157.99" y="223.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.bitbucketserver.Json.DefaultReviewer]] (id 4000) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (18,363 Î¼s, 0.30%)</title><rect x="714.9" y="245" width="3.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="717.86" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[List[String]] (expanded macros 0)  (1,352 Î¼s, 0.02%)</title><rect x="462.3" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="465.30" y="191.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repocache.RepoCache]{type Out = K} (id 6846) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,233 Î¼s, 0.02%)</title><rect x="651.3" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="654.25" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;forArtifactIds&quot;)] :: shapeless.HNil,cats.data.NonEmptyList[org.scalasteward.core.data.Update.ForArtifactId] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (18,362 Î¼s, 0.30%)</title><rect x="816.0" y="197" width="3.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="818.97" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;default_branch&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;archived&quot;)] :: shapeless.HNil,org.scalasteward.core.git.Branch :: Boolean :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (3,239 Î¼s, 0.05%)</title><rect x="756.6" y="133" width="0.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="759.57" y="143.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (885 Î¼s, 0.01%)</title><rect x="1031.6" y="133" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1034.59" y="143.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.repoconfig.PullRequestGroup] (expanded macros 0)   (659 Î¼s, 0.01%)</title><rect x="1033.7" y="149" width="0.1" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="1036.66" y="159.5" ></text>
</g>
<g >
<title>F[Option[Int]] =&gt; ?{def map: ?} (expanded macros 0)  (798 Î¼s, 0.01%)</title><rect x="79.1" y="245" width="0.1" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="82.06" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[String]] (expanded macros 0)  (1,379 Î¼s, 0.02%)</title><rect x="456.2" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="459.17" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)]} (id 7854) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (656 Î¼s, 0.01%)</title><rect x="1046.6" y="117" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1049.56" y="127.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)]} (id 1767) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (896 Î¼s, 0.01%)</title><rect x="968.3" y="101" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="971.31" y="111.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.forge.bitbucket.Page[org.scalasteward.core.forge.data.PullRequestOut]] =&gt; ?{def map: ?} (expanded macros 0)  (1,200 Î¼s, 0.02%)</title><rect x="132.0" y="245" width="0.3" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="135.03" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: shapeless.HNil] (id 4235) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (8,486 Î¼s, 0.14%)</title><rect x="531.8" y="197" width="1.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="534.76" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.repoconfig.RepoConfig] (expanded macros 0)  (921 Î¼s, 0.01%)</title><rect x="657.6" y="165" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="660.64" y="175.5" ></text>
</g>
<g >
<title>cats.kernel.Order[(org.scalasteward.core.data.GroupId, org.scalasteward.core.data.Version, cats.data.NonEmptyList[org.scalasteward.core.data.Version])] (expanded macros 0)  (2,058 Î¼s, 0.03%)</title><rect x="288.5" y="245" width="0.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="291.54" y="255.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.bitbucketserver.Json.PR]{type Repr = R} (expanded macros 0)  (16,085 Î¼s, 0.26%)</title><rect x="724.4" y="213" width="3.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="727.36" y="223.5" ></text>
</g>
<g >
<title>Numeric[Int] (expanded macros 0)  (827 Î¼s, 0.01%)</title><rect x="312.8" y="229" width="0.2" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="315.81" y="239.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.forge.github.TokenOut] (expanded macros 0)  (2,116 Î¼s, 0.03%)</title><rect x="373.4" y="245" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="376.42" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;message&quot;)] :: shapeless.HNil,String :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,705 Î¼s, 0.03%)</title><rect x="647.8" y="181" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="650.75" y="191.5" ></text>
</g>
<g >
<title>x$10.asString.type =&gt; ?{def === : ?} (expanded macros 0)  (2,423 Î¼s, 0.04%)</title><rect x="1181.9" y="245" width="0.5" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="1184.92" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.forge.bitbucketserver.Json.Comment] (expanded macros 0)  (1,586 Î¼s, 0.03%)</title><rect x="384.7" y="245" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="387.72" y="255.5" ></text>
</g>
<g >
<title>org.http4s.headers.User-Agent =&gt; org.http4s.Header.ToRaw (expanded macros 0)  (6,184 Î¼s, 0.10%)</title><rect x="398.0" y="245" width="1.2" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="401.04" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)]} (id 1834) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (928 Î¼s, 0.02%)</title><rect x="935.3" y="117" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="938.31" y="127.5" ></text>
</g>
<g >
<title>cats.Functor[F] (expanded macros 0)  (533 Î¼s, 0.01%)</title><rect x="78.7" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="81.67" y="239.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.gitea.GiteaApiAlg.CommentResp]{type Repr = R} (expanded macros 0)  (23,907 Î¼s, 0.39%)</title><rect x="547.4" y="213" width="4.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="550.37" y="223.5" ></text>
</g>
<g >
<title>ForgeRepoAlg.this.logger.type =&gt; ?{def attemptWarn: ?} (expanded macros 0)  (587 Î¼s, 0.01%)</title><rect x="151.9" y="245" width="0.1" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="154.90" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitea.GiteaApiAlg.CreatePullRequestOption]{type Repr = V} (id 4723) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (2,856 Î¼s, 0.05%)</title><rect x="573.9" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="576.87" y="207.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.util.Timestamp] (expanded macros 0)   (569 Î¼s, 0.01%)</title><rect x="645.4" y="165" width="0.1" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="648.43" y="175.5" ></text>
</g>
<g >
<title>o1.type =&gt; ?{def compare: ?} (expanded macros 0)  (3,411 Î¼s, 0.06%)</title><rect x="392.5" y="245" width="0.7" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="395.54" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]] (expanded macros 0)  (5,091 Î¼s, 0.08%)</title><rect x="1098.8" y="165" width="1.0" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1101.81" y="175.5" ></text>
</g>
<g >
<title>org.scalasteward.core.io.ProcessAlg[F] (expanded macros 0)  (1,215 Î¼s, 0.02%)</title><rect x="405.7" y="245" width="0.3" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="408.73" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.forge.data.Comment] (expanded macros 0)  (2,602 Î¼s, 0.04%)</title><rect x="369.6" y="245" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="372.59" y="255.5" ></text>
</g>
<g >
<title>Option[org.scalasteward.core.nurture.PullRequestRepository.Entry] =&gt; ?{def traverse: ?} (expanded macros 0)  (1,431 Î¼s, 0.02%)</title><rect x="174.2" y="245" width="0.3" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="177.21" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.bitbucket.CreateComment]] (id 3624) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (16,840 Î¼s, 0.27%)</title><rect x="507.3" y="245" width="3.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="510.32" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.codec.ReprAsObjectCodec[List[org.scalasteward.core.repoconfig.UpdatePattern] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;pin&quot;)],List[org.scalasteward.core.repoconfig.UpdatePattern]] :: List[org.scalasteward.core.repoconfig.UpdatePattern] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;allow&quot;)],List[org.scalasteward.core.repoconfig.UpdatePattern]] :: List[org.scalasteward.core.repoconfig.UpdatePattern] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;allowPreReleases&quot;)],List[org.scalasteward.core.repoconfig.UpdatePattern]] :: List[org.scalasteward.core.repoconfig.UpdatePattern] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;ignore&quot;)],List[org.scalasteward.core.repoconfig.UpdatePattern]] :: Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)],Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]]] :: Option[List[String]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)],Option[List[String]]] :: shapeless.HNil]] (id 8273) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (20,730 Î¼s, 0.34%)</title><rect x="1096.6" y="213" width="4.0" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1099.64" y="223.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.codec.ConfiguredAsObjectCodec[org.scalasteward.core.repoconfig.PostUpdateHookConfig]] (id 7166) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (75,421 Î¼s, 1.22%)</title><rect x="1003.2" y="245" width="14.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1006.20" y="255.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.edit.scalafix.ScalafixMigrations] =&gt; ?{def adaptErr: ?} (expanded macros 0)  (529 Î¼s, 0.01%)</title><rect x="130.7" y="245" width="0.1" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="133.74" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.decoding.ReprDecoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;location&quot;)],String] :: Option[org.scalasteward.core.data.Resolver.Credentials] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)],Option[org.scalasteward.core.data.Resolver.Credentials]] :: List[org.scalasteward.core.data.Resolver.Header] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)],List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil] (id 1728) (expanded macros 3) (tree from `io.circe.generic.extras.ConfigurableDeriver.deriveConfiguredDecoder`)  (14,110 Î¼s, 0.23%)</title><rect x="960.1" y="133" width="2.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="963.07" y="143.5" ></text>
</g>
<g >
<title>io.circe.Decoder[cats.data.NonEmptyList[String]] (expanded macros 0)  (534 Î¼s, 0.01%)</title><rect x="1013.3" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1016.32" y="191.5" ></text>
</g>
<g >
<title>String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)],Option[String]] :: List[org.scalasteward.core.data.Update.ForArtifactId] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)],List[org.scalasteward.core.data.Update.ForArtifactId]] :: shapeless.HNil &lt;:&lt; (String :: Option[String] :: List[org.scalasteward.core.data.Update.ForArtifactId] :: shapeless.HNil) (expanded macros 0)  (527 Î¼s, 0.01%)</title><rect x="822.4" y="197" width="0.1" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="825.41" y="207.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.data.Resolver.MavenRepository]{type Repr = R} (expanded macros 0)  (15,429 Î¼s, 0.25%)</title><rect x="956.9" y="149" width="3.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="959.95" y="159.5" ></text>
</g>
<g >
<title>cats.kernel.Monoid[List[String]] (expanded macros 0)  (742 Î¼s, 0.01%)</title><rect x="280.6" y="245" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="283.55" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[List[org.scalasteward.core.data.DependencyInfo]] (expanded macros 0)  (1,190 Î¼s, 0.02%)</title><rect x="656.7" y="149" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="659.73" y="159.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.bitbucketserver.Json.Link]] (id 4014) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (24,402 Î¼s, 0.40%)</title><rect x="718.4" y="245" width="4.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="721.37" y="255.5" ></text>
</g>
<g >
<title>cats.effect.kernel.Sync[[_]F[_]] (expanded macros 0)  (676 Î¼s, 0.01%)</title><rect x="270.6" y="245" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="273.60" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;repository&quot;)]} (id 4160) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (779 Î¼s, 0.01%)</title><rect x="856.1" y="165" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="859.06" y="175.5" ></text>
</g>
<g >
<title>shapeless.Lub[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)],Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)],Lub0] (expanded macros 0)  (1,218 Î¼s, 0.02%)</title><rect x="980.8" y="101" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="983.82" y="111.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;message&quot;)]} (id 6810) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (846 Î¼s, 0.01%)</title><rect x="647.9" y="165" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="650.85" y="175.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)]} (id 1849) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (908 Î¼s, 0.01%)</title><rect x="938.6" y="117" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="941.60" y="127.5" ></text>
</g>
<g >
<title>io.circe.Encoder[String] (expanded macros 0)  (1,324 Î¼s, 0.02%)</title><rect x="1113.9" y="213" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1116.92" y="223.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.util.RecordToMap[List[org.scalasteward.core.data.Resolver.Header] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)],List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil] (expanded macros 0)  (1,479 Î¼s, 0.02%)</title><rect x="930.8" y="149" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="933.76" y="159.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;version&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;links&quot;)] :: shapeless.HNil,org.scalasteward.core.forge.data.PullRequestNumber :: Int :: String :: org.scalasteward.core.forge.data.PullRequestState :: scala.collection.immutable.Map[String,cats.data.NonEmptyList[org.scalasteward.core.forge.bitbucketserver.Json.Link]] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (7,396 Î¼s, 0.12%)</title><rect x="726.0" y="197" width="1.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="729.03" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,List[org.scalasteward.core.data.Resolver.Header] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (2,449 Î¼s, 0.04%)</title><rect x="990.4" y="85" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="993.40" y="95.5" ></text>
</g>
<g >
<title>cats.Applicative[F] (expanded macros 0)  (5,987 Î¼s, 0.10%)</title><rect x="212.2" y="245" width="1.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="215.18" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)]} (id 5404) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (590 Î¼s, 0.01%)</title><rect x="878.2" y="181" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="881.24" y="191.5" ></text>
</g>
<g >
<title>fs2.compat.NotGiven[better.files.File &lt;:&lt; Nothing] (expanded macros 0)  (4,998 Î¼s, 0.08%)</title><rect x="326.0" y="245" width="1.0" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="329.01" y="255.5" ></text>
</g>
<g >
<title>F[io.circe.Json] =&gt; ?{def void: ?} (expanded macros 0)  (1,195 Î¼s, 0.02%)</title><rect x="127.3" y="245" width="0.3" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="130.33" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[org.scalasteward.core.util.Timestamp with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;updatedAt&quot;)],org.scalasteward.core.util.Timestamp] :: List[org.scalasteward.core.data.Version] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;versions&quot;)],List[org.scalasteward.core.data.Version]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;maybeError&quot;)],Option[String]] :: shapeless.HNil] (id 1331) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (56,801 Î¼s, 0.92%)</title><rect x="437.9" y="197" width="10.9" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="440.88" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.data.Resolver] (expanded macros 0)  (3,198 Î¼s, 0.05%)</title><rect x="503.7" y="165" width="0.6" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="506.67" y="175.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)]} (id 2000) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,092 Î¼s, 0.02%)</title><rect x="996.7" y="133" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="999.71" y="143.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[org.scalasteward.core.forge.ForgeType] (expanded macros 0)  (2,121 Î¼s, 0.03%)</title><rect x="279.7" y="245" width="0.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="282.73" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.edit.scalafix.ScalafixMigration]] (id 2758) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (69,177 Î¼s, 1.12%)</title><rect x="690.4" y="245" width="13.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="693.38" y="255.5" ></text>
</g>
<g >
<title>io.circe.KeyEncoder[org.scalasteward.core.data.Repo] (expanded macros 0)  (1,749 Î¼s, 0.03%)</title><rect x="389.8" y="245" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="392.81" y="255.5" ></text>
</g>
<g >
<title>org.scalasteward.core.data.CrossDependency with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;crossDependency&quot;)],org.scalasteward.core.data.CrossDependency] :: cats.data.NonEmptyList[org.scalasteward.core.data.Version] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;newerVersions&quot;)],cats.data.NonEmptyList[org.scalasteward.core.data.Version]] :: Option[org.scalasteward.core.data.GroupId] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;newerGroupId&quot;)],Option[org.scalasteward.core.data.GroupId]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;newerArtifactId&quot;)],Option[String]] :: shapeless.HNil &lt;:&lt; (org.scalasteward.core.data.CrossDependency :: cats.data.NonEmptyList[org.scalasteward.core.data.Version] :: Option[org.scalasteward.core.data.GroupId] :: Option[String] :: shapeless.HNil) (expanded macros 0)  (584 Î¼s, 0.01%)</title><rect x="667.8" y="197" width="0.1" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="670.79" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.ReprAsObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)],String] :: org.scalasteward.core.forge.bitbucketserver.Json.Repository with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;repository&quot;)],org.scalasteward.core.forge.bitbucketserver.Json.Repository] :: shapeless.HNil] (id 4164) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveEncoder`)  (2,790 Î¼s, 0.05%)</title><rect x="856.4" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="859.36" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;head&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;base&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;draft&quot;)] :: shapeless.HNil,String :: org.scalasteward.core.git.Branch :: Boolean :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (3,511 Î¼s, 0.06%)</title><rect x="865.6" y="165" width="0.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="868.63" y="175.5" ></text>
</g>
<g >
<title>io.circe.Decoder[List[org.scalasteward.core.forge.bitbucketserver.Json.DefaultReviewer]] (expanded macros 0)  (861 Î¼s, 0.01%)</title><rect x="714.7" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="717.70" y="191.5" ></text>
</g>
<g >
<title>eu.timepit.refined.internal.WitnessAs[40,Int] (expanded macros 0)  (1,769 Î¼s, 0.03%)</title><rect x="356.6" y="181" width="0.4" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="359.61" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;frequency&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;grouping&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;includeMatchedLabels&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;customLabels&quot;)] :: shapeless.HNil,List]{type Lub = Symbol} (expanded macros 0)  (10,401 Î¼s, 0.17%)</title><rect x="1037.5" y="213" width="1.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1040.45" y="223.5" ></text>
</g>
<g >
<title>cats.Functor[org.scalasteward.core.data.Scope] (expanded macros 0)  (1,238 Î¼s, 0.02%)</title><rect x="242.2" y="245" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="245.24" y="255.5" ></text>
</g>
<g >
<title>cats.TraverseFilter[List] (expanded macros 0)  (659 Î¼s, 0.01%)</title><rect x="412.4" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="415.41" y="239.5" ></text>
</g>
<g >
<title>cats.kernel.Semigroup[Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]]] (expanded macros 0)  (795 Î¼s, 0.01%)</title><rect x="1188.0" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1191.00" y="239.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.nurture.PullRequestRepository.Entry]{type Out = K} (id 6577) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,812 Î¼s, 0.03%)</title><rect x="636.2" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="639.23" y="207.5" ></text>
</g>
<g >
<title>&quot;), x$3: ? &gt;: String(&quot;&quot;)): ?} (expanded macros 0)  (2,635 Î¼s, 0.04%)</title><rect x="413.8" y="213" width="0.5" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="416.81" y="223.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.repoconfig.PullRequestGroup] (expanded macros 0)  (14,711 Î¼s, 0.24%)</title><rect x="793.5" y="229" width="2.8" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="796.50" y="239.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;artifactIdAfter&quot;)]} (id 8725) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (545 Î¼s, 0.01%)</title><rect x="1159.6" y="133" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1162.61" y="143.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucketserver.Json.Project]{type Out = K} (id 4138) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (923 Î¼s, 0.01%)</title><rect x="522.9" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="525.92" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[String]] (expanded macros 0)  (831 Î¼s, 0.01%)</title><rect x="1002.3" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1005.29" y="191.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucketserver.Json.User]{type Out = K} (id 4228) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (3,755 Î¼s, 0.06%)</title><rect x="529.2" y="197" width="0.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="532.17" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitea.GiteaApiAlg.Label]{type Repr = V} (expanded macros 3)   (3,211 Î¼s, 0.05%)</title><rect x="590.1" y="197" width="0.6" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="593.10" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.forge.data.UserOut] (expanded macros 0)  (1,466 Î¼s, 0.02%)</title><rect x="758.5" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="761.47" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;filter&quot;)] :: shapeless.HNil,cats.data.NonEmptyList[org.scalasteward.core.repoconfig.PullRequestUpdateFilter] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,291 Î¼s, 0.02%)</title><rect x="795.1" y="165" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="798.12" y="175.5" ></text>
</g>
<g >
<title>cats.kernel.Semigroup[List[String]] (expanded macros 0)  (1,090 Î¼s, 0.02%)</title><rect x="294.2" y="245" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="297.23" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[String] (expanded macros 0)  (1,041 Î¼s, 0.02%)</title><rect x="1124.1" y="213" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1127.14" y="223.5" ></text>
</g>
<g >
<title>eu.timepit.refined.internal.WitnessAs['f',Char] (expanded macros 0)  (1,978 Î¼s, 0.03%)</title><rect x="308.8" y="133" width="0.4" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="311.84" y="143.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.repoconfig.GroupRepoConfig] (expanded macros 0)  (843 Î¼s, 0.01%)</title><rect x="1064.0" y="165" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1067.00" y="175.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;user&quot;)] :: shapeless.HNil,org.scalasteward.core.forge.bitbucketserver.Json.User :: shapeless.HNil]{type Out = R} (expanded macros 0)  (1,579 Î¼s, 0.03%)</title><rect x="526.6" y="197" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="529.61" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)]} (id 4810) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,618 Î¼s, 0.03%)</title><rect x="592.0" y="165" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="595.05" y="175.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;location&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,String :: String :: Option[org.scalasteward.core.data.Resolver.Credentials] :: List[org.scalasteward.core.data.Resolver.Header] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (7,094 Î¼s, 0.12%)</title><rect x="958.5" y="133" width="1.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="961.54" y="143.5" ></text>
</g>
<g >
<title>DependencyMetadata.this.releaseNotesUrl.type =&gt; ?{def filterA: ?} (expanded macros 0)  (726 Î¼s, 0.01%)</title><rect x="38.0" y="245" width="0.1" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="40.99" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.git.Sha1] (expanded macros 0)  (1,599 Î¼s, 0.03%)</title><rect x="707.7" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="710.68" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;frequency&quot;)]} (id 7469) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,115 Î¼s, 0.02%)</title><rect x="1030.1" y="181" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1033.09" y="191.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Vector[org.scalasteward.core.forge.gitea.GiteaApiAlg.PullRequestResp]] (expanded macros 0)  (822 Î¼s, 0.01%)</title><rect x="352.3" y="245" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="355.27" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;pattern&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,String :: String :: Option[org.scalasteward.core.data.Resolver.Credentials] :: List[org.scalasteward.core.data.Resolver.Header] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (7,660 Î¼s, 0.12%)</title><rect x="938.4" y="133" width="1.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="941.43" y="143.5" ></text>
</g>
<g >
<title>io.circe.Encoder[String] (expanded macros 0)  (762 Î¼s, 0.01%)</title><rect x="844.0" y="149" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="847.00" y="159.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)] :: shapeless.HNil,Long :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (7,718 Î¼s, 0.13%)</title><rect x="550.5" y="181" width="1.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="553.47" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.github.TokenOut]{type Repr = V} (expanded macros 3)   (1,047 Î¼s, 0.02%)</title><rect x="786.6" y="197" width="0.2" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="789.57" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.data.UpdateState]{type Repr = V} (id 4470) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,015 Î¼s, 0.02%)</title><rect x="861.6" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="864.56" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitea.GiteaApiAlg.PullRequestResp]{type Out = K} (id 4672) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (2,658 Î¼s, 0.04%)</title><rect x="608.9" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="611.86" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (1,370 Î¼s, 0.02%)</title><rect x="994.0" y="101" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="996.96" y="111.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[org.scalasteward.core.data.Resolver.Credentials]] (expanded macros 0)  (2,243 Î¼s, 0.04%)</title><rect x="977.6" y="117" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="980.59" y="127.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.persistence.JsonKeyValueStore[F,org.scalasteward.core.data.Repo,Map[org.http4s.Uri,org.scalasteward.core.nurture.PullRequestRepository.Entry]]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (5,302 Î¼s, 0.09%)</title><rect x="142.3" y="245" width="1.0" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="145.32" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;location&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (10,226 Î¼s, 0.17%)</title><rect x="994.5" y="133" width="2.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="997.54" y="143.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.CommitsConfig]{type Out = K} (id 7063) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (589 Î¼s, 0.01%)</title><rect x="1000.3" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1003.26" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;newerVersions&quot;)]} (id 2362) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,613 Î¼s, 0.03%)</title><rect x="671.2" y="165" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="674.22" y="175.5" ></text>
</g>
<g >
<title>F[Option[String]] =&gt; ?{def map: ?} (expanded macros 0)  (8,499 Î¼s, 0.14%)</title><rect x="80.6" y="245" width="1.6" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="83.60" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)]} (id 7874) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (606 Î¼s, 0.01%)</title><rect x="1073.4" y="133" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1076.37" y="143.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)]} (id 1891) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (915 Î¼s, 0.01%)</title><rect x="947.4" y="101" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="950.45" y="111.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.decoding.ConfiguredDecoder[org.scalasteward.core.edit.scalafix.ScalafixMigrations]] (id 2843) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (38,385 Î¼s, 0.62%)</title><rect x="1148.3" y="245" width="7.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1151.35" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,060 Î¼s, 0.02%)</title><rect x="579.3" y="53" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="582.29" y="63.5" ></text>
</g>
<g >
<title>cats.FlatMap[F] (expanded macros 0)  (1,477 Î¼s, 0.02%)</title><rect x="123.1" y="229" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="126.14" y="239.5" ></text>
</g>
<g >
<title>cats.kernel.Semigroup[Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]]] (expanded macros 0)  (743 Î¼s, 0.01%)</title><rect x="294.6" y="245" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="297.60" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[org.scalasteward.core.repoconfig.PullRequestsConfig with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;pullRequests&quot;)],org.scalasteward.core.repoconfig.PullRequestsConfig] :: org.scalasteward.core.repoconfig.ScalafmtConfig with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;scalafmt&quot;)],org.scalasteward.core.repoconfig.ScalafmtConfig] :: org.scalasteward.core.repoconfig.UpdatesConfig with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)],org.scalasteward.core.repoconfig.UpdatesConfig] :: Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)],Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]]] :: Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)],Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy]] :: Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)],Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)],List[String]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)],List[String]] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)],List[org.scalasteward.core.repoconfig.GroupRepoConfig]] :: shapeless.HNil] (expanded macros 0)  (12,729 Î¼s, 0.21%)</title><rect x="1072.5" y="197" width="2.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1075.47" y="207.5" ></text>
</g>
<g >
<title>(=&gt; (=&gt; String) =&gt; F[Unit]) =&gt; F[Unit] (expanded macros 0)   (634 Î¼s, 0.01%)</title><rect x="21.0" y="245" width="0.1" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text  x="23.99" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)]} (id 7872) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (616 Î¼s, 0.01%)</title><rect x="1073.1" y="149" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1076.11" y="159.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.data.UpdateState]{type Repr = V} (expanded macros 3)   (1,507 Î¼s, 0.02%)</title><rect x="861.3" y="197" width="0.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="864.27" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.bitbucketserver.Json.Reviewer] (expanded macros 0)  (10,468 Î¼s, 0.17%)</title><rect x="525.6" y="229" width="2.0" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="528.60" y="239.5" ></text>
</g>
<g >
<title>cats.Functor[io.circe.Decoder] (expanded macros 0)  (608 Î¼s, 0.01%)</title><rect x="360.9" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="363.91" y="239.5" ></text>
</g>
<g >
<title>maybeHookCommit.type =&gt; ?{def flatTraverse: ?} (expanded macros 0)  (530 Î¼s, 0.01%)</title><rect x="390.5" y="245" width="0.1" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="393.46" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;base&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;head&quot;)] :: shapeless.HNil,String :: org.scalasteward.core.forge.gitea.GiteaApiAlg.PRBranchInfo :: org.scalasteward.core.forge.gitea.GiteaApiAlg.PRBranchInfo :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (8,946 Î¼s, 0.15%)</title><rect x="612.2" y="149" width="1.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="615.18" y="159.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;includeMatchedLabels&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;customLabels&quot;)] :: shapeless.HNil,Option[scala.util.matching.Regex] :: List[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (5,506 Î¼s, 0.09%)</title><rect x="1030.7" y="165" width="1.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1033.71" y="175.5" ></text>
</g>
<g >
<title>F[(Unit, better.files.File, String)] =&gt; ?{def flatMap: ?} (expanded macros 0)  (1,171 Î¼s, 0.02%)</title><rect x="47.1" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="50.09" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.github.Repository]{type Repr = V} (id 5343) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (786 Î¼s, 0.01%)</title><rect x="784.7" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="787.71" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)],List[String]] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)],List[org.scalasteward.core.repoconfig.GroupRepoConfig]] :: shapeless.HNil] (expanded macros 0)  (3,246 Î¼s, 0.05%)</title><rect x="1074.3" y="85" width="0.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1077.28" y="95.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.data.BranchOut] (expanded macros 0)  (12,486 Î¼s, 0.20%)</title><rect x="739.9" y="229" width="2.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="742.86" y="239.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.UpdatesConfig]{type Out = K} (id 8236) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,901 Î¼s, 0.03%)</title><rect x="1087.8" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1090.80" y="207.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.bitbucketserver.Json.Branches]{type Repr = R} (expanded macros 0)  (9,337 Î¼s, 0.15%)</title><rect x="708.9" y="213" width="1.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="711.93" y="223.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = 40} (id 6010) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (911 Î¼s, 0.01%)</title><rect x="311.3" y="165" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="314.32" y="175.5" ></text>
</g>
<g >
<title>io.circe.Encoder[List[org.scalasteward.core.forge.bitbucketserver.Json.Reviewer]] (expanded macros 0)  (960 Î¼s, 0.02%)</title><rect x="852.9" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="855.87" y="191.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.gitea.GiteaApiAlg.PayloadCommit]{type Repr = R} (expanded macros 0)  (13,534 Î¼s, 0.22%)</title><rect x="602.0" y="213" width="2.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="605.04" y="223.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)]} (id 4161) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (561 Î¼s, 0.01%)</title><rect x="855.9" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="858.87" y="191.5" ></text>
</g>
<g >
<title>F[(List[(String, List[org.scalasteward.core.nurture.UpdateInfoUrl])], scala.collection.immutable.Map[String,String])] =&gt; ?{def flatMap: ?} (expanded macros 0)  (702 Î¼s, 0.01%)</title><rect x="41.0" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="44.03" y="255.5" ></text>
</g>
<g >
<title>Double =&gt; Int (expanded macros 0)   (2,764 Î¼s, 0.04%)</title><rect x="38.3" y="245" width="0.5" height="15.0" fill="rgb(231,95,95)" rx="2" ry="2" />
<text  x="41.31" y="255.5" ></text>
</g>
<g >
<title>F[(List[String], org.scalasteward.core.buildtool.BuildRoot)] =&gt; ?{def flatMap: ?} (expanded macros 0)  (1,343 Î¼s, 0.02%)</title><rect x="42.3" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="45.28" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.ReprDecoder[org.scalasteward.core.git.Branch with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],org.scalasteward.core.git.Branch] :: org.scalasteward.core.forge.data.CommitOut with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;commit&quot;)],org.scalasteward.core.forge.data.CommitOut] :: shapeless.HNil] (id 4276) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveDecoder`)  (4,885 Î¼s, 0.08%)</title><rect x="738.3" y="197" width="1.0" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="741.33" y="207.5" ></text>
</g>
<g >
<title>cats.FlatMap[F] (expanded macros 0)  (674 Î¼s, 0.01%)</title><rect x="61.6" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="64.61" y="239.5" ></text>
</g>
<g >
<title>cats.data.NonEmptyList[org.scalasteward.core.data.Dependency] =&gt; ?{def tupleLeft: ?} (expanded macros 0)  (790 Î¼s, 0.01%)</title><rect x="257.7" y="245" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="260.73" y="255.5" ></text>
</g>
<g >
<title>F[scala.collection.mutable.ListBuffer[String]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (700 Î¼s, 0.01%)</title><rect x="150.5" y="245" width="0.1" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="153.46" y="255.5" ></text>
</g>
<g >
<title>cats.Traverse[Option] (expanded macros 0)  (656 Î¼s, 0.01%)</title><rect x="172.4" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="175.45" y="239.5" ></text>
</g>
<g >
<title>F[List[org.scalasteward.core.update.data.UpdateState]] =&gt; ?{def map: ?} (expanded macros 0)  (1,570 Î¼s, 0.03%)</title><rect x="76.8" y="245" width="0.3" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="79.83" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitlab.MergeRequestPayload]{type Repr = V} (expanded macros 3)   (2,666 Î¼s, 0.04%)</title><rect x="882.1" y="197" width="0.5" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="885.08" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitea.GiteaApiAlg.PayloadCommit]{type Repr = V} (id 4588) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,886 Î¼s, 0.03%)</title><rect x="603.4" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="606.43" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.coproduct.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;IvyRepository&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;MavenRepository&quot;)] :: shapeless.HNil,org.scalasteward.core.data.Resolver.IvyRepository :+: org.scalasteward.core.data.Resolver.MavenRepository :+: shapeless.CNil]{type Out = R} (expanded macros 0)  (4,555 Î¼s, 0.07%)</title><rect x="919.7" y="197" width="0.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="922.72" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.update.artifact.ArtifactChange]{type Repr = V} (expanded macros 3)   (1,070 Î¼s, 0.02%)</title><rect x="1160.1" y="197" width="0.2" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="1163.06" y="207.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.bitbucketserver.Json.NewPR]{type Repr = R} (expanded macros 0)  (28,755 Î¼s, 0.47%)</title><rect x="846.2" y="213" width="5.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="849.22" y="223.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.codec.ConfiguredAsObjectCodec[org.scalasteward.core.repoconfig.ScalafmtConfig] (expanded macros 0)  (20,364 Î¼s, 0.33%)</title><rect x="1075.6" y="229" width="3.9" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1078.62" y="239.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[Some[List[String]] :: Some[List[String]] :: Some[List[org.scalasteward.core.repoconfig.GroupRepoConfig]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil]{type Out = OutT} (expanded macros 0)  (2,102 Î¼s, 0.03%)</title><rect x="1048.8" y="85" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1051.82" y="95.5" ></text>
</g>
<g >
<title>com.monovore.decline.Argument[org.scalasteward.core.forge.ForgeType] (expanded macros 0)  (2,797 Î¼s, 0.05%)</title><rect x="298.7" y="245" width="0.5" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="301.65" y="255.5" ></text>
</g>
<g >
<title>from.minor.type =&gt; ?{def =!= : ?} (expanded macros 0)  (1,565 Î¼s, 0.03%)</title><rect x="318.4" y="245" width="0.3" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="321.41" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)]} (id 4389) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (846 Î¼s, 0.01%)</title><rect x="750.3" y="133" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="753.35" y="143.5" ></text>
</g>
<g >
<title>io.circe.Encoder[List[String]] (expanded macros 0)  (6,141 Î¼s, 0.10%)</title><rect x="462.9" y="181" width="1.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="465.92" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.github.CreatePullRequestPayload]{type Repr = V} (expanded macros 3)   (1,888 Î¼s, 0.03%)</title><rect x="864.6" y="197" width="0.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="867.58" y="207.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.util.Timestamp] (expanded macros 0)   (563 Î¼s, 0.01%)</title><rect x="643.5" y="165" width="0.1" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="646.50" y="175.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;body&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;head&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;base&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;draft&quot;)] :: shapeless.HNil,String :: String :: String :: org.scalasteward.core.git.Branch :: Boolean :: shapeless.HNil]{type Out = R} (expanded macros 0)  (5,748 Î¼s, 0.09%)</title><rect x="865.2" y="197" width="1.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="868.21" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;body&quot;)]} (id 5375) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (556 Î¼s, 0.01%)</title><rect x="875.5" y="165" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="878.45" y="175.5" ></text>
</g>
<g >
<title>updateStates.type =&gt; ?{def traverseFilter: ?} (expanded macros 0)  (638 Î¼s, 0.01%)</title><rect x="1176.4" y="245" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1179.37" y="255.5" ></text>
</g>
<g >
<title>Option[org.scalasteward.core.forge.ForgeRepo] =&gt; ?{def toSeq: ?} (expanded macros 0)  (588 Î¼s, 0.01%)</title><rect x="173.9" y="245" width="0.2" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="176.94" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[scala.util.matching.Regex]] (expanded macros 0)  (563 Î¼s, 0.01%)</title><rect x="1034.2" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1037.20" y="191.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.data.Resolver.IvyRepository]{type Repr = R} (expanded macros 0)  (15,101 Î¼s, 0.24%)</title><rect x="973.2" y="149" width="2.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="976.19" y="159.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.forge.bitbucket.CreatePullRequestRequest] (expanded macros 0)  (1,668 Î¼s, 0.03%)</title><rect x="384.4" y="245" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="387.40" y="255.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.repocache.RefreshErrorAlg.Entry] (expanded macros 0)   (605 Î¼s, 0.01%)</title><rect x="376.3" y="229" width="0.1" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="379.31" y="239.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;login&quot;)],String] :: Long with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)],Long] :: shapeless.HNil]] (id 4533) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (6,505 Î¼s, 0.11%)</title><rect x="632.6" y="213" width="1.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="635.63" y="223.5" ></text>
</g>
<g >
<title>maybeRepoConfig.type =&gt; ?{def |+| : ?} (expanded macros 0)  (1,506 Î¼s, 0.02%)</title><rect x="390.6" y="245" width="0.2" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="393.56" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;user&quot;)]} (id 1648) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,017 Î¼s, 0.02%)</title><rect x="484.6" y="181" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="487.61" y="191.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.data.Update.Grouped]{type Repr = R} (expanded macros 0)  (24,227 Î¼s, 0.39%)</title><rect x="822.0" y="213" width="4.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="825.01" y="223.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.PullRequestsConfig]{type Out = K} (id 7442) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,863 Î¼s, 0.03%)</title><rect x="1024.8" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1027.81" y="207.5" ></text>
</g>
<g >
<title>dependency.type =&gt; ?{def as: ?} (expanded macros 0)  (570 Î¼s, 0.01%)</title><rect x="305.8" y="245" width="0.1" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="308.83" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucketserver.Json.Condition]{type Repr = V} (id 3991) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,336 Î¼s, 0.02%)</title><rect x="713.4" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="716.36" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[String]] (expanded macros 0)  (1,233 Î¼s, 0.02%)</title><rect x="581.3" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="584.33" y="191.5" ></text>
</g>
<g >
<title>x$4.type =&gt; ?{def map: ?} (expanded macros 0)  (2,099 Î¼s, 0.03%)</title><rect x="1186.4" y="245" width="0.4" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="1189.37" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.UpdatesConfig]{type Out = Labels} (id 8318) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,699 Î¼s, 0.03%)</title><rect x="1086.3" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1089.30" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucketserver.Json.Repo]{type Out = K} (id 4172) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (961 Î¼s, 0.02%)</title><rect x="733.4" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="736.42" y="207.5" ></text>
</g>
<g >
<title>SelfCheckAlg.this.logger.type =&gt; ?{def attemptWarn: ?} (expanded macros 0)  (2,838 Î¼s, 0.05%)</title><rect x="179.2" y="245" width="0.5" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="182.18" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.gitea.GiteaApiAlg.CreatePullRequestOption]] (id 4717) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (73,252 Î¼s, 1.19%)</title><rect x="569.1" y="245" width="14.0" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="572.06" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (958 Î¼s, 0.02%)</title><rect x="826.5" y="149" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="829.46" y="159.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.ReprAsObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)],Option[String]] :: cats.data.NonEmptyList[org.scalasteward.core.repoconfig.PullRequestUpdateFilter] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;filter&quot;)],cats.data.NonEmptyList[org.scalasteward.core.repoconfig.PullRequestUpdateFilter]] :: shapeless.HNil] (id 7374) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveEncoder`)  (4,336 Î¼s, 0.07%)</title><rect x="890.2" y="197" width="0.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="893.20" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;scalafmt&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil,org.scalasteward.core.repoconfig.ScalafmtConfig :: org.scalasteward.core.repoconfig.UpdatesConfig :: Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]] :: Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy] :: Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]] :: List[String] :: List[String] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (13,707 Î¼s, 0.22%)</title><rect x="1053.4" y="165" width="2.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1056.42" y="175.5" ></text>
</g>
<g >
<title>cats.kernel.Order[org.scalasteward.core.data.Scope[org.scalasteward.core.data.Dependency]] (expanded macros 0)  (782 Î¼s, 0.01%)</title><rect x="175.8" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="178.76" y="239.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.CrossDependency]{type Repr = R :: shapeless.HNil} (expanded macros 3)   (2,484 Î¼s, 0.04%)</title><rect x="1122.9" y="197" width="0.5" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="1125.89" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;migrations&quot;)] :: shapeless.HNil,List[org.scalasteward.core.edit.scalafix.ScalafixMigration] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (2,620 Î¼s, 0.04%)</title><rect x="1152.0" y="197" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1155.04" y="207.5" ></text>
</g>
<g >
<title>cats.UnorderedFoldable[org.scalasteward.core.util.Nel] (expanded macros 0)  (858 Î¼s, 0.01%)</title><rect x="252.9" y="245" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="255.86" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.ReprDecoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;login&quot;)],String] :: shapeless.HNil] (id 4498) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveDecoder`)  (2,124 Î¼s, 0.03%)</title><rect x="761.2" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="764.22" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucketserver.Json.Branches]{type Out = K} (id 3958) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,111 Î¼s, 0.02%)</title><rect x="709.2" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="712.22" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;commits&quot;)]} (id 7866) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (574 Î¼s, 0.01%)</title><rect x="1072.4" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1075.36" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;pin&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;allow&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;allowPreReleases&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;ignore&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)] :: shapeless.HNil,List[org.scalasteward.core.repoconfig.UpdatePattern] :: List[org.scalasteward.core.repoconfig.UpdatePattern] :: List[org.scalasteward.core.repoconfig.UpdatePattern] :: List[org.scalasteward.core.repoconfig.UpdatePattern] :: Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]] :: Option[List[String]] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (15,314 Î¼s, 0.25%)</title><rect x="1089.3" y="197" width="3.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1092.32" y="207.5" ></text>
</g>
<g >
<title>Int(10) =&gt; ?{def minutes: ?} (expanded macros 0)  (2,264 Î¼s, 0.04%)</title><rect x="153.6" y="245" width="0.4" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="156.56" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,Option[org.scalasteward.core.data.Resolver.Credentials] :: List[org.scalasteward.core.data.Resolver.Header] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (4,333 Î¼s, 0.07%)</title><rect x="939.1" y="101" width="0.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="942.07" y="111.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.ScalafmtConfig]{type Repr = V} (id 8133) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (659 Î¼s, 0.01%)</title><rect x="1077.9" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1080.86" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[cats.data.NonEmptyList[org.scalasteward.core.repoconfig.PullRequestUpdateFilter]] (expanded macros 0)  (1,663 Î¼s, 0.03%)</title><rect x="890.7" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="893.71" y="191.5" ></text>
</g>
<g >
<title>org.scalasteward.core.data.Update.Single =&gt; ?{def === : ?} (expanded macros 0)  (1,717 Î¼s, 0.03%)</title><rect x="402.8" y="245" width="0.3" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="405.80" y="255.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[Some[Option[scala.util.matching.Regex]] :: Some[List[String]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;includeMatchedLabels&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;customLabels&quot;)] :: shapeless.HNil]{type Out = OutT} (expanded macros 0)  (3,083 Î¼s, 0.05%)</title><rect x="1022.6" y="165" width="0.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1025.64" y="175.5" ></text>
</g>
<g >
<title>this.runSpecificFiles.type =&gt; ?{def traverse_: ?} (expanded macros 0)  (631 Î¼s, 0.01%)</title><rect x="1174.6" y="245" width="0.2" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="1177.63" y="255.5" ></text>
</g>
<g >
<title>F[Vector[org.scalasteward.core.forge.data.PullRequestOut]] =&gt; ?{def map: ?} (expanded macros 0)  (1,572 Î¼s, 0.03%)</title><rect x="118.1" y="245" width="0.3" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="121.06" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.util.RecordToMap[List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;customLabels&quot;)],List[String]] :: shapeless.HNil] (expanded macros 0)  (1,507 Î¼s, 0.02%)</title><rect x="1020.5" y="165" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1023.47" y="175.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.buildtool.sbt.data.SbtVersion] (expanded macros 0)  (2,052 Î¼s, 0.03%)</title><rect x="476.6" y="165" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="479.64" y="175.5" ></text>
</g>
<g >
<title>p.groupId.value.type =&gt; ?{def === : ?} (expanded macros 0)  (712 Î¼s, 0.01%)</title><rect x="408.9" y="245" width="0.1" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="411.88" y="255.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.repoconfig.PullRequestsConfig]{type Repr = R} (expanded macros 0)  (17,544 Î¼s, 0.28%)</title><rect x="1028.4" y="213" width="3.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1031.41" y="223.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[String]] (expanded macros 0)  (527 Î¼s, 0.01%)</title><rect x="890.6" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="893.58" y="191.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.azurerepos.PullRequestCommentPayload]{type Repr = R} (expanded macros 0)  (11,239 Î¼s, 0.18%)</title><rect x="834.5" y="213" width="2.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="837.52" y="223.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.bitbucketserver.Json.Page[A]]{type Repr = R} (expanded macros 0)  (8,373 Î¼s, 0.14%)</title><rect x="730.0" y="213" width="1.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="732.97" y="223.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.azurerepos.AzureComment]{type Repr = V} (id 3428) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,198 Î¼s, 0.02%)</title><rect x="829.6" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="832.64" y="207.5" ></text>
</g>
<g >
<title>from.buildMetadata.type =&gt; ?{def =!= : ?} (expanded macros 0)  (1,091 Î¼s, 0.02%)</title><rect x="317.7" y="245" width="0.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="320.68" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (2,552 Î¼s, 0.04%)</title><rect x="437.0" y="149" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="439.97" y="159.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Update.ForGroupId]{type Out = K} (id 2437) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (2,929 Î¼s, 0.05%)</title><rect x="678.2" y="197" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="681.19" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;newerGroupId&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;newerArtifactId&quot;)] :: shapeless.HNil,Option[org.scalasteward.core.data.GroupId] :: Option[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (7,020 Î¼s, 0.11%)</title><rect x="671.5" y="165" width="1.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="674.53" y="175.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;doc&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;scalacOptions&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;authors&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;target&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;executionOrder&quot;)] :: shapeless.HNil,Option[String] :: Option[cats.data.NonEmptyList[String]] :: Option[cats.data.NonEmptyList[org.scalasteward.core.git.Author]] :: Option[org.scalasteward.core.edit.scalafix.ScalafixMigration.Target] :: Option[org.scalasteward.core.edit.scalafix.ScalafixMigration.ExecutionOrder] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (10,911 Î¼s, 0.18%)</title><rect x="697.8" y="133" width="2.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="700.80" y="143.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.data.Comment]{type Repr = V} (id 4301) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (926 Î¼s, 0.02%)</title><rect x="535.1" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="538.09" y="207.5" ></text>
</g>
<g >
<title>cats.kernel.Order[String] (expanded macros 0)  (649 Î¼s, 0.01%)</title><rect x="286.3" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="289.32" y="239.5" ></text>
</g>
<g >
<title>F[List[String]] =&gt; ?{def map: ?} (expanded macros 0)  (23,069 Î¼s, 0.37%)</title><rect x="61.8" y="245" width="4.4" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="64.81" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.github.InstallationOut]{type Repr = V} (expanded macros 3)   (1,201 Î¼s, 0.02%)</title><rect x="762.6" y="197" width="0.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="765.63" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[List[org.scalasteward.core.data.DependencyInfo]] (expanded macros 0)  (1,466 Î¼s, 0.02%)</title><rect x="655.5" y="149" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="658.49" y="159.5" ></text>
</g>
<g >
<title>io.circe.Encoder[eu.timepit.refined.api.Refined[String,eu.timepit.refined.boolean.And[eu.timepit.refined.collection.Forall[eu.timepit.refined.boolean.Or[eu.timepit.refined.char.Digit,eu.timepit.refined.boolean.And[eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less['a']],eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Greater['f']]]]],eu.timepit.refined.collection.Size[eu.timepit.refined.generic.Equal[40]]]]] (expanded macros 0)  (631 Î¼s, 0.01%)</title><rect x="383.1" y="245" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="386.13" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;fromRef&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;toRef&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;locked&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: shapeless.HNil,org.scalasteward.core.forge.bitbucketserver.Json.Ref :: org.scalasteward.core.forge.bitbucketserver.Json.Ref :: Boolean :: List[org.scalasteward.core.forge.bitbucketserver.Json.Reviewer] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (6,738 Î¼s, 0.11%)</title><rect x="850.4" y="117" width="1.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="853.43" y="127.5" ></text>
</g>
<g >
<title>List[org.scalasteward.core.edit.hooks.PostUpdateHook] =&gt; ?{def traverse: ?} (expanded macros 0)  (609 Î¼s, 0.01%)</title><rect x="170.8" y="245" width="0.1" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="173.80" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[shapeless.Generic[org.scalasteward.core.util.Timestamp]{type Repr = R :: shapeless.HNil}] (id 9043) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (1,938 Î¼s, 0.03%)</title><rect x="1148.0" y="213" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1150.98" y="223.5" ></text>
</g>
<g >
<title>io.circe.Decoder[List[org.scalasteward.core.repoconfig.GroupRepoConfig]] (expanded macros 0)  (1,663 Î¼s, 0.03%)</title><rect x="1062.0" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1065.00" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)]} (id 7652) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (625 Î¼s, 0.01%)</title><rect x="1058.9" y="101" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1061.86" y="111.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.ReprAsObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;sourceRefName&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;targetRefName&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)],String] :: Option[List[String]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;labels&quot;)],Option[List[String]]] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;description&quot;)],String] :: shapeless.HNil]] (id 3402) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (8,180 Î¼s, 0.13%)</title><rect x="842.8" y="213" width="1.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="845.79" y="223.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;migrations&quot;)]} (id 2885) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (657 Î¼s, 0.01%)</title><rect x="1155.5" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1158.52" y="207.5" ></text>
</g>
<g >
<title>F[List[(String, List[org.scalasteward.core.nurture.UpdateInfoUrl])]] =&gt; ?{def map: ?} (expanded macros 0)  (865 Î¼s, 0.01%)</title><rect x="58.6" y="245" width="0.1" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="61.58" y="255.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[Some[List[String]] :: Some[List[org.scalasteward.core.repoconfig.GroupRepoConfig]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil]{type Out = OutT} (expanded macros 0)  (1,533 Î¼s, 0.02%)</title><rect x="1048.9" y="69" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1051.93" y="79.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[String]] (expanded macros 0)  (1,347 Î¼s, 0.02%)</title><rect x="582.3" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="585.28" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Resolver]{type Repr = V} (expanded macros 3)   (1,632 Î¼s, 0.03%)</title><rect x="919.0" y="197" width="0.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="922.03" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.bitbucketserver.Json.Branches]] (id 3955) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (17,958 Î¼s, 0.29%)</title><rect x="708.0" y="245" width="3.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="710.99" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;command&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;commitMessage&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;addToGitBlameIgnoreRevs&quot;)] :: shapeless.HNil,cats.data.NonEmptyList[String] :: String :: Option[Boolean] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (2,843 Î¼s, 0.05%)</title><rect x="1011.0" y="165" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1014.00" y="175.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.update.artifact.ArtifactChange]{type Out = K} (id 8733) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (733 Î¼s, 0.01%)</title><rect x="1159.9" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1162.92" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.bitbucketserver.Json.Comment] (expanded macros 0)  (15,077 Î¼s, 0.24%)</title><rect x="519.0" y="229" width="2.9" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="521.99" y="239.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[Some[Option[org.scalasteward.core.repoconfig.PullRequestFrequency]] :: Some[List[org.scalasteward.core.repoconfig.PullRequestGroup]] :: Some[Option[scala.util.matching.Regex]] :: Some[List[String]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;frequency&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;grouping&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;includeMatchedLabels&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;customLabels&quot;)] :: shapeless.HNil]{type Out = Rec} (expanded macros 0)  (5,927 Î¼s, 0.10%)</title><rect x="1022.1" y="197" width="1.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1025.10" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;body&quot;)],String] :: shapeless.HNil]] (id 4306) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (4,745 Î¼s, 0.08%)</title><rect x="535.6" y="213" width="0.9" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="538.58" y="223.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)]} (id 7858) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (653 Î¼s, 0.01%)</title><rect x="1046.3" y="85" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1049.31" y="95.5" ></text>
</g>
<g >
<title>cats.Functor[com.monovore.decline.Opts] (expanded macros 0)  (24,294 Î¼s, 0.39%)</title><rect x="237.3" y="245" width="4.6" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="240.26" y="255.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[Some[Option[String]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;message&quot;)] :: shapeless.HNil]{type Out = Rec} (expanded macros 0)  (535 Î¼s, 0.01%)</title><rect x="999.4" y="197" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1002.45" y="207.5" ></text>
</g>
<g >
<title>Either[io.circe.Error,Either[org.scalasteward.core.data.Dependency,org.scalasteward.core.data.Resolver]] =&gt; ?{def toList: ?} (expanded macros 0)  (2,067 Î¼s, 0.03%)</title><rect x="39.5" y="245" width="0.4" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="42.55" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;parent&quot;)] :: shapeless.HNil,Option[org.scalasteward.core.forge.gitea.GiteaApiAlg.Repository] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (3,791 Î¼s, 0.06%)</title><rect x="624.8" y="85" width="0.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="627.79" y="95.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.forge.gitlab.MergeRequestPayload]] (id 5462) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (45,765 Î¼s, 0.74%)</title><rect x="879.2" y="245" width="8.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="882.21" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.util.RecordToMap[Option[List[String]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)],Option[List[String]]] :: shapeless.HNil] (expanded macros 0)  (1,604 Î¼s, 0.03%)</title><rect x="1082.7" y="133" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1085.71" y="143.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.bitbucket.CommentContent]] (id 3641) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (15,892 Î¼s, 0.26%)</title><rect x="504.3" y="245" width="3.0" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="507.28" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;scalaVersion&quot;)]} (id 1469) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,264 Î¼s, 0.02%)</title><rect x="473.0" y="117" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="476.00" y="127.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;labels&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;description&quot;)] :: shapeless.HNil,Option[List[String]] :: String :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (3,318 Î¼s, 0.05%)</title><rect x="842.2" y="149" width="0.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="845.16" y="159.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;addToGitBlameIgnoreRevs&quot;)]} (id 7248) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (637 Î¼s, 0.01%)</title><rect x="1005.6" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1008.58" y="207.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[List[org.scalasteward.core.data.Version.Component]] (expanded macros 0)  (1,188 Î¼s, 0.02%)</title><rect x="272.2" y="245" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="275.18" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[List[org.scalasteward.core.repoconfig.UpdatePattern] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;pin&quot;)],List[org.scalasteward.core.repoconfig.UpdatePattern]] :: List[org.scalasteward.core.repoconfig.UpdatePattern] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;allow&quot;)],List[org.scalasteward.core.repoconfig.UpdatePattern]] :: List[org.scalasteward.core.repoconfig.UpdatePattern] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;allowPreReleases&quot;)],List[org.scalasteward.core.repoconfig.UpdatePattern]] :: List[org.scalasteward.core.repoconfig.UpdatePattern] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;ignore&quot;)],List[org.scalasteward.core.repoconfig.UpdatePattern]] :: Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)],Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]]] :: Option[List[String]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)],Option[List[String]]] :: shapeless.HNil]{type Out = F} (expanded macros 0)  (12,714 Î¼s, 0.21%)</title><rect x="1106.0" y="213" width="2.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1108.98" y="223.5" ></text>
</g>
<g >
<title>hook.command.type =&gt; ?{def mkString_: ?} (expanded macros 0)   (1,506 Î¼s, 0.02%)</title><rect x="328.8" y="245" width="0.3" height="15.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text  x="331.80" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: shapeless.HNil,List[org.scalasteward.core.forge.bitbucketserver.Json.Reviewer] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (2,172 Î¼s, 0.04%)</title><rect x="851.3" y="69" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="854.30" y="79.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.azurerepos.PullRequestCommentPayload]{type Repr = V} (expanded macros 3)   (2,649 Î¼s, 0.04%)</title><rect x="835.2" y="197" width="0.5" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="838.22" y="207.5" ></text>
</g>
<g >
<title>((com.monovore.decline.Opts[better.files.File], com.monovore.decline.Opts[cats.data.NonEmptyList[org.http4s.Uri]], com.monovore.decline.Opts[org.scalasteward.core.application.Config.GitCfg], com.monovore.decline.Opts[org.scalasteward.core.application.Config.ForgeCfg], com.monovore.decline.Opts[Boolean], com.monovore.decline.Opts[org.scalasteward.core.application.Config.ProcessCfg], com.monovore.decline.Opts[org.scalasteward.core.application.Config.RepoConfigCfg], com.monovore.decline.Opts[org.scalasteward.core.application.Config.ScalafixCfg], com.monovore.decline.Opts[org.scalasteward.core.application.Config.ArtifactCfg], com.monovore.decline.Opts[scala.concurrent.duration.FiniteDuration], com.monovore.decline.Opts[org.scalasteward.core.application.Config.BitbucketCfg], com.monovore.decline.Opts[org.scalasteward.core.application.Config.BitbucketServerCfg], com.monovore.decline.Opts[org.scalasteward.core.application.Config.GitLabCfg], com.monovore.decline.Opts[org.scalasteward.core.application.Config.AzureReposCfg], com.monovore.decline.Opts[Option[org.scalasteward.core.forge.github.GitHubApp]], com.monovore.decline.Opts[cats.data.NonEmptyList[org.http4s.Uri]], com.monovore.decline.Opts[org.scalasteward.core.data.Resolver], com.monovore.decline.Opts[scala.concurrent.duration.FiniteDuration])) =&gt; ?{def mapN: ?} (expanded macros 0)  (3,217 Î¼s, 0.05%)</title><rect x="19.2" y="245" width="0.6" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="22.17" y="255.5" ></text>
</g>
<g >
<title>updatedMergeRequest.type =&gt; ?{def map: ?} (expanded macros 0)  (739 Î¼s, 0.01%)</title><rect x="1176.5" y="245" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1179.49" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;grouping&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;includeMatchedLabels&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;customLabels&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (8,098 Î¼s, 0.13%)</title><rect x="1037.9" y="197" width="1.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1040.89" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = 40} (id 6011) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (588 Î¼s, 0.01%)</title><rect x="311.5" y="165" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="314.50" y="175.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.git.Sha1] =&gt; ?{def map: ?} (expanded macros 0)  (788 Î¼s, 0.01%)</title><rect x="141.4" y="245" width="0.2" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="144.40" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitea.GiteaApiAlg.BranchResp]{type Out = K} (id 4618) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,884 Î¼s, 0.03%)</title><rect x="543.3" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="546.34" y="207.5" ></text>
</g>
<g >
<title>F[List[org.scalasteward.core.data.Version]] =&gt; ?{def attempt: ?} (expanded macros 0)  (1,221 Î¼s, 0.02%)</title><rect x="71.1" y="245" width="0.3" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="74.14" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[String] (expanded macros 0)  (720 Î¼s, 0.01%)</title><rect x="1124.3" y="213" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1127.34" y="223.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[Some[Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]]] :: Some[List[String]] :: Some[List[String]] :: Some[List[org.scalasteward.core.repoconfig.GroupRepoConfig]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil]{type Out = OutT} (expanded macros 0)  (2,686 Î¼s, 0.04%)</title><rect x="1048.7" y="101" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1051.71" y="111.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.ReprAsObjectEncoder[Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;prefix&quot;)],Option[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;suffix&quot;)],Option[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;exact&quot;)],Option[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;contains&quot;)],Option[String]] :: shapeless.HNil] (id 8504) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveEncoder`)  (2,410 Î¼s, 0.04%)</title><rect x="893.9" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="896.87" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.data.BranchOut]] (id 5537) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (15,638 Î¼s, 0.25%)</title><rect x="739.3" y="245" width="3.0" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="742.26" y="255.5" ></text>
</g>
<g >
<title>shapeless.Default[org.scalasteward.core.repoconfig.ScalafmtConfig]{type Out = Options} (id 8145) (expanded macros 3) (tree from `shapeless.DefaultMacros.materialize`)  (700 Î¼s, 0.01%)</title><rect x="1076.3" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1079.34" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;groupId&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;artifactId&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;version&quot;)] :: shapeless.HNil,org.scalasteward.core.data.GroupId :: Option[String] :: Option[org.scalasteward.core.repoconfig.VersionPattern] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (4,232 Î¼s, 0.07%)</title><rect x="663.2" y="197" width="0.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="666.21" y="207.5" ></text>
</g>
<g >
<title>F[Either[org.http4s.DecodeFailure,A]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (619 Î¼s, 0.01%)</title><rect x="57.9" y="245" width="0.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="60.94" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.github.Repository]{type Out = K} (id 5342) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (622 Î¼s, 0.01%)</title><rect x="784.4" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="787.36" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;IvyRepository&quot;)]} (id 1680) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,049 Î¼s, 0.02%)</title><rect x="923.6" y="181" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="926.56" y="191.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.bitbucketserver.Json.Condition] (expanded macros 0)  (14,131 Î¼s, 0.23%)</title><rect x="712.2" y="229" width="2.7" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="715.16" y="239.5" ></text>
</g>
<g >
<title>String =&gt; ?{def toInt: ?} (expanded macros 0)  (906 Î¼s, 0.01%)</title><rect x="184.1" y="245" width="0.1" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="187.05" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)]} (id 1725) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (858 Î¼s, 0.01%)</title><rect x="958.7" y="117" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="961.70" y="127.5" ></text>
</g>
<g >
<title>(=&gt; (Nothing, Nothing)) =&gt; String (expanded macros 0)   (675 Î¼s, 0.01%)</title><rect x="21.3" y="245" width="0.1" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text  x="24.28" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;location&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,String :: Option[org.scalasteward.core.data.Resolver.Credentials] :: List[org.scalasteward.core.data.Resolver.Header] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (5,411 Î¼s, 0.09%)</title><rect x="958.9" y="117" width="1.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="961.87" y="127.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)],String] :: shapeless.HNil] (id 4714) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (3,993 Î¼s, 0.06%)</title><rect x="586.5" y="197" width="0.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="589.52" y="207.5" ></text>
</g>
<g >
<title>F[Option[org.http4s.Uri]] =&gt; ?{def map: ?} (expanded macros 0)  (1,397 Î¼s, 0.02%)</title><rect x="83.6" y="245" width="0.3" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="86.62" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;resolvers&quot;)]} (id 2198) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (2,828 Î¼s, 0.05%)</title><rect x="500.3" y="165" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="503.30" y="175.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Int] (expanded macros 0)  (677 Î¼s, 0.01%)</title><rect x="1099.7" y="149" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1102.65" y="159.5" ></text>
</g>
<g >
<title>dependencies.type =&gt; ?{def groupByNel: ?} (expanded macros 0)  (669 Î¼s, 0.01%)</title><rect x="304.3" y="245" width="0.2" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="307.35" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.forge.azurerepos.PullRequestPayload] (expanded macros 0)  (28,792 Î¼s, 0.47%)</title><rect x="838.9" y="229" width="5.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="841.85" y="239.5" ></text>
</g>
<g >
<title>Option[String] =&gt; ?{def contains_: ?} (expanded macros 0)  (1,104 Î¼s, 0.02%)</title><rect x="172.6" y="245" width="0.2" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="175.62" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;pattern&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,String :: Option[org.scalasteward.core.data.Resolver.Credentials] :: List[org.scalasteward.core.data.Resolver.Header] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (5,550 Î¼s, 0.09%)</title><rect x="935.5" y="117" width="1.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="938.49" y="127.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[List[org.scalasteward.core.data.Resolver.Header] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)],List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil] (expanded macros 0)  (1,863 Î¼s, 0.03%)</title><rect x="982.7" y="101" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="985.71" y="111.5" ></text>
</g>
<g >
<title>org.scalasteward.core.data.Repo =&gt; ?{def asRight: ?} (expanded macros 0)  (529 Î¼s, 0.01%)</title><rect x="402.2" y="245" width="0.1" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="405.15" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.util.Timestamp] (id 9045) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (630 Î¼s, 0.01%)</title><rect x="1148.1" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1151.05" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)]} (id 7621) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,402 Î¼s, 0.02%)</title><rect x="1055.7" y="37" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1058.68" y="47.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (8,600 Î¼s, 0.14%)</title><rect x="965.7" y="117" width="1.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="968.69" y="127.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.ReprDecoder[List[A] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;values&quot;)],List[A]] :: shapeless.HNil] (id 4087) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveDecoder`)  (2,604 Î¼s, 0.04%)</title><rect x="731.7" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="734.68" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (746 Î¼s, 0.01%)</title><rect x="1162.7" y="165" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1165.73" y="175.5" ></text>
</g>
<g >
<title>org.scalasteward.core.util.Timestamp with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;updatedAt&quot;)],org.scalasteward.core.util.Timestamp] :: List[org.scalasteward.core.data.Version] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;versions&quot;)],List[org.scalasteward.core.data.Version]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;maybeError&quot;)],Option[String]] :: shapeless.HNil &lt;:&lt; (org.scalasteward.core.util.Timestamp :: List[org.scalasteward.core.data.Version] :: Option[String] :: shapeless.HNil) (expanded macros 0)  (1,228 Î¼s, 0.02%)</title><rect x="426.3" y="197" width="0.3" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="429.33" y="207.5" ></text>
</g>
<g >
<title>updates.type =&gt; ?{def groupByNel: ?} (expanded macros 0)  (1,492 Î¼s, 0.02%)</title><rect x="1176.6" y="245" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1179.63" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[Int]] (expanded macros 0)  (901 Î¼s, 0.01%)</title><rect x="582.1" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="585.11" y="191.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.git.Sha1] (expanded macros 0)  (2,350 Î¼s, 0.04%)</title><rect x="605.3" y="181" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="608.27" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;ignore&quot;)]} (id 8249) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,086 Î¼s, 0.02%)</title><rect x="1091.0" y="133" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1094.02" y="143.5" ></text>
</g>
<g >
<title>F[coursier.Fetch.Result] =&gt; ?{def attempt: ?} (expanded macros 0)  (1,504 Î¼s, 0.02%)</title><rect x="126.0" y="245" width="0.3" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="129.01" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.ScalafmtConfig]{type Repr = V} (id 8124) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (634 Î¼s, 0.01%)</title><rect x="1077.2" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1080.19" y="207.5" ></text>
</g>
<g >
<title>F[List[org.scalasteward.core.data.Version]] =&gt; ?{def map: ?} (expanded macros 0)  (4,603 Î¼s, 0.07%)</title><rect x="71.4" y="245" width="0.9" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="74.38" y="255.5" ></text>
</g>
<g >
<title>org.scalasteward.core.data.GroupId =&gt; ?{def === : ?} (expanded macros 0)  (10,413 Î¼s, 0.17%)</title><rect x="400.1" y="245" width="2.0" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="403.13" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.forge.data.PullRequestState] (expanded macros 0)  (1,486 Î¼s, 0.02%)</title><rect x="644.7" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="647.68" y="191.5" ></text>
</g>
<g >
<title>F[List[org.scalasteward.core.repoconfig.RepoConfig]] =&gt; ?{def map: ?} (expanded macros 0)  (622 Î¼s, 0.01%)</title><rect x="76.4" y="245" width="0.1" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="79.35" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.data.PullRequestOut]{type Repr = V} (id 4383) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,957 Î¼s, 0.03%)</title><rect x="749.2" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="752.24" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lub[Symbol with shapeless.tag.Tagged[String(&quot;groupIdAfter&quot;)],Symbol with shapeless.tag.Tagged[_ &gt;: String(&quot;artifactIdAfter&quot;) with String(&quot;artifactIdBefore&quot;) &lt;: String],Lub0] (expanded macros 0)  (776 Î¼s, 0.01%)</title><rect x="1163.3" y="181" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1166.30" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.CommitsConfig]{type Repr = V} (id 7064) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (737 Î¼s, 0.01%)</title><rect x="1000.6" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1003.61" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;updatedAt&quot;)]} (id 1328) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (4,312 Î¼s, 0.07%)</title><rect x="432.7" y="181" width="0.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="435.72" y="191.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.encoding.ReprAsObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;location&quot;)],String] :: Option[org.scalasteward.core.data.Resolver.Credentials] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)],Option[org.scalasteward.core.data.Resolver.Credentials]] :: List[org.scalasteward.core.data.Resolver.Header] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)],List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil] (id 1976) (expanded macros 3) (tree from `io.circe.generic.extras.ConfigurableDeriver.deriveConfiguredEncoder`)  (10,968 Î¼s, 0.18%)</title><rect x="991.0" y="133" width="2.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="994.04" y="143.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.Validate[Int,eu.timepit.refined.numeric.Greater[shapeless._0]] (expanded macros 0)  (52,810 Î¼s, 0.86%)</title><rect x="157.6" y="229" width="10.1" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="160.59" y="239.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.codec.UnwrappedCodec[org.scalasteward.core.data.CrossDependency] (expanded macros 0)  (13,742 Î¼s, 0.22%)</title><rect x="1120.7" y="229" width="2.7" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1123.74" y="239.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)]} (id 8349) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,158 Î¼s, 0.02%)</title><rect x="1107.8" y="133" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1110.79" y="143.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitlab.ForkPayload]{type Out = K} (id 5396) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,069 Î¼s, 0.02%)</title><rect x="877.2" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="880.20" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.util.RecordToMap[org.scalasteward.core.repoconfig.ScalafmtConfig with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;scalafmt&quot;)],org.scalasteward.core.repoconfig.ScalafmtConfig] :: org.scalasteward.core.repoconfig.UpdatesConfig with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)],org.scalasteward.core.repoconfig.UpdatesConfig] :: Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)],Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]]] :: Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)],Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy]] :: Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)],Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)],List[String]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)],List[String]] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)],List[org.scalasteward.core.repoconfig.GroupRepoConfig]] :: shapeless.HNil] (expanded macros 0)  (8,302 Î¼s, 0.13%)</title><rect x="1045.5" y="181" width="1.6" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1048.48" y="191.5" ></text>
</g>
<g >
<title>io.circe.Encoder[List[org.scalasteward.core.data.Update.ForArtifactId]] (expanded macros 0)  (1,227 Î¼s, 0.02%)</title><rect x="827.5" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="830.45" y="191.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.bitbucketserver.Json.Branch]{type Repr = R} (expanded macros 0)  (11,508 Î¼s, 0.19%)</title><rect x="704.6" y="213" width="2.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="707.61" y="223.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord[org.scalasteward.core.repoconfig.CommitsConfig]{type Out = D} (expanded macros 0)  (2,395 Î¼s, 0.04%)</title><rect x="999.3" y="213" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1002.34" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;slug&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;links&quot;)] :: shapeless.HNil,String :: scala.collection.immutable.Map[String,cats.data.NonEmptyList[org.scalasteward.core.forge.bitbucketserver.Json.Link]] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (3,302 Î¼s, 0.05%)</title><rect x="734.1" y="197" width="0.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="737.11" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.repoconfig.RepoConfig] (expanded macros 0)  (1,142 Î¼s, 0.02%)</title><rect x="388.9" y="245" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="391.88" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lub[Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)],Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)],Lub0] (expanded macros 0)  (773 Î¼s, 0.01%)</title><rect x="1071.7" y="69" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1074.72" y="79.5" ></text>
</g>
<g >
<title>punctuation.type =&gt; ?{def contains_: ?} (expanded macros 0)  (1,009 Î¼s, 0.02%)</title><rect x="410.2" y="245" width="0.2" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="413.17" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.github.InstallationOut] (expanded macros 0)  (8,383 Î¼s, 0.14%)</title><rect x="762.1" y="229" width="1.6" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="765.11" y="239.5" ></text>
</g>
<g >
<title>F[List[org.scalasteward.core.update.data.UpdateState.WithUpdate]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (778 Î¼s, 0.01%)</title><rect x="76.7" y="245" width="0.1" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="79.68" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repocache.RefreshErrorAlg.Entry]{type Out = K} (id 6805) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (904 Î¼s, 0.01%)</title><rect x="646.8" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="649.83" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;groupIdAfter&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;artifactIdBefore&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;artifactIdAfter&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (4,441 Î¼s, 0.07%)</title><rect x="1163.1" y="197" width="0.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1166.12" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucket.Reviewer]{type Out = K} (id 3717) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (844 Î¼s, 0.01%)</title><rect x="516.0" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="519.04" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Resolver.MavenRepository]{type Out = K} (id 1963) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,918 Î¼s, 0.03%)</title><rect x="988.2" y="133" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="991.16" y="143.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.RefType[F] (expanded macros 0)   (543 Î¼s, 0.01%)</title><rect x="147.2" y="229" width="0.1" height="15.0" fill="rgb(236,103,103)" rx="2" ry="2" />
<text  x="150.18" y="239.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[String] (expanded macros 0)  (1,834 Î¼s, 0.03%)</title><rect x="1183.6" y="229" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1186.60" y="239.5" ></text>
</g>
<g >
<title>com.monovore.decline.Argument[Long] (expanded macros 0)  (769 Î¼s, 0.01%)</title><rect x="296.6" y="245" width="0.1" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="299.55" y="255.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.util.Timestamp] =&gt; ?{def flatMap: ?} (expanded macros 0)  (3,881 Î¼s, 0.06%)</title><rect x="147.3" y="245" width="0.7" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="150.29" y="255.5" ></text>
</g>
<g >
<title>List[String] =&gt; ?{def parTraverse: ?} (expanded macros 0)  (589 Î¼s, 0.01%)</title><rect x="169.0" y="245" width="0.2" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="172.04" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,Option[org.scalasteward.core.data.Resolver.Credentials] :: List[org.scalasteward.core.data.Resolver.Header] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (3,943 Î¼s, 0.06%)</title><rect x="935.8" y="101" width="0.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="938.80" y="111.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[String] (expanded macros 0)  (867 Î¼s, 0.01%)</title><rect x="1186.0" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1188.98" y="239.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Update.ForGroupId]{type Out = K} (id 2403) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,819 Î¼s, 0.03%)</title><rect x="814.8" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="817.77" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (1,069 Î¼s, 0.02%)</title><rect x="1067.6" y="69" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1070.62" y="79.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.repoconfig.PostUpdateHookConfig]{type Repr = R} (expanded macros 0)  (9,500 Î¼s, 0.15%)</title><rect x="1009.7" y="213" width="1.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1012.72" y="223.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.gitea.GiteaApiAlg.PullRequestResp] (expanded macros 0)  (43,103 Î¼s, 0.70%)</title><rect x="607.8" y="229" width="8.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="610.77" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;suffix&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;exact&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;contains&quot;)] :: shapeless.HNil,Option[String] :: Option[String] :: Option[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (3,558 Î¼s, 0.06%)</title><rect x="893.1" y="181" width="0.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="896.11" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: None.type :: None.type :: shapeless.HNil,List]{type Lub = Option[io.circe.generic.extras.JsonKey]} (expanded macros 0)  (6,377 Î¼s, 0.10%)</title><rect x="978.1" y="149" width="1.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="981.11" y="159.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[org.scalasteward.core.forge.data.PullRequestNumber]] (expanded macros 0)  (2,351 Î¼s, 0.04%)</title><rect x="641.5" y="181" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="644.50" y="191.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[org.scalasteward.core.data.GroupId with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;groupId&quot;)],org.scalasteward.core.data.GroupId] :: org.scalasteward.core.data.ArtifactId with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;artifactId&quot;)],org.scalasteward.core.data.ArtifactId] :: org.scalasteward.core.data.Version with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;version&quot;)],org.scalasteward.core.data.Version] :: Option[org.scalasteward.core.buildtool.sbt.data.SbtVersion] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;sbtVersion&quot;)],Option[org.scalasteward.core.buildtool.sbt.data.SbtVersion]] :: Option[org.scalasteward.core.buildtool.sbt.data.ScalaVersion] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;scalaVersion&quot;)],Option[org.scalasteward.core.buildtool.sbt.data.ScalaVersion]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;configurations&quot;)],Option[String]] :: shapeless.HNil] (id 1476) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (36,329 Î¼s, 0.59%)</title><rect x="474.1" y="197" width="7.0" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="477.12" y="207.5" ></text>
</g>
<g >
<title>cats.Traverse[List] (expanded macros 0)  (1,010 Î¼s, 0.02%)</title><rect x="391.2" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="394.19" y="239.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitea.GiteaApiAlg.EditPullRequestOption]{type Repr = V} (expanded macros 3)   (2,056 Î¼s, 0.03%)</title><rect x="584.9" y="197" width="0.4" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="587.89" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[String] (expanded macros 0)  (577 Î¼s, 0.01%)</title><rect x="859.8" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="862.84" y="191.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.bitbucketserver.Json.Branch] (expanded macros 0)  (18,277 Î¼s, 0.30%)</title><rect x="704.5" y="229" width="3.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="707.49" y="239.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[org.scalasteward.core.data.GroupId with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;groupId&quot;)],org.scalasteward.core.data.GroupId] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;artifactId&quot;)],Option[String]] :: Option[org.scalasteward.core.repoconfig.VersionPattern] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;version&quot;)],Option[org.scalasteward.core.repoconfig.VersionPattern]] :: shapeless.HNil]] (id 8189) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (9,142 Î¼s, 0.15%)</title><rect x="664.0" y="213" width="1.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="667.01" y="223.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.repoconfig.ScalafmtConfig]{type Repr = R} (expanded macros 0)   (4,898 Î¼s, 0.08%)</title><rect x="1076.6" y="213" width="0.9" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="1079.59" y="223.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucketserver.Json.Reviewer]{type Out = K} (id 4209) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (844 Î¼s, 0.01%)</title><rect x="525.9" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="528.90" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[List[org.scalasteward.core.data.Resolver.Header]]] (expanded macros 0)  (9,684 Î¼s, 0.16%)</title><rect x="342.9" y="245" width="1.9" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="345.95" y="255.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.forge.bitbucket.CreatePullRequestRequest] =&gt; ?{def flatMap: ?} (expanded macros 0)  (873 Î¼s, 0.01%)</title><rect x="131.6" y="245" width="0.2" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="134.61" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.repoconfig.VersionPattern] (expanded macros 0)  (1,095 Î¼s, 0.02%)</title><rect x="664.9" y="165" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="667.89" y="175.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.codec.ReprAsObjectCodec[Option[org.scalasteward.core.data.GroupId] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;groupId&quot;)],Option[org.scalasteward.core.data.GroupId]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;artifactId&quot;)],Option[String]] :: cats.data.NonEmptyList[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;command&quot;)],cats.data.NonEmptyList[String]] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;commitMessage&quot;)],String] :: Option[Boolean] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;addToGitBlameIgnoreRevs&quot;)],Option[Boolean]] :: shapeless.HNil] (id 7203) (expanded macros 3) (tree from `io.circe.generic.extras.ConfigurableDeriver.deriveConfiguredCodec`)  (12,132 Î¼s, 0.20%)</title><rect x="1011.7" y="197" width="2.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1014.71" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.github.UpdatePullRequestPayload]{type Out = K} (id 5368) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (835 Î¼s, 0.01%)</title><rect x="874.5" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="877.48" y="207.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.repoconfig.RepoConfig]{type Repr = R} (expanded macros 0)  (20,633 Î¼s, 0.33%)</title><rect x="1056.0" y="213" width="4.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1059.05" y="223.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Resolver.IvyRepository]{type Repr = V} (expanded macros 3)   (2,316 Î¼s, 0.04%)</title><rect x="973.9" y="133" width="0.4" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="976.89" y="143.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.data.Dependency]] (id 1454) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (85,923 Î¼s, 1.39%)</title><rect x="464.6" y="245" width="16.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="467.63" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[List[org.scalasteward.core.repoconfig.PullRequestGroup] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;grouping&quot;)],List[org.scalasteward.core.repoconfig.PullRequestGroup]] :: Option[scala.util.matching.Regex] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;includeMatchedLabels&quot;)],Option[scala.util.matching.Regex]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;customLabels&quot;)],List[String]] :: shapeless.HNil] (expanded macros 0)  (6,523 Î¼s, 0.11%)</title><rect x="1039.9" y="197" width="1.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1042.89" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Update.ForArtifactId]{type Out = K} (id 2353) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (2,627 Î¼s, 0.04%)</title><rect x="668.4" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="671.38" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[List[org.scalasteward.core.edit.scalafix.ScalafixMigration]] (expanded macros 0)  (2,213 Î¼s, 0.04%)</title><rect x="1154.4" y="181" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1157.37" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;runAfterUpgrading&quot;)] :: shapeless.HNil,Option[Boolean] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (1,085 Î¼s, 0.02%)</title><rect x="1078.0" y="197" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1080.99" y="207.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.Validate[Char,eu.timepit.refined.numeric.Less['a']]{type R = R} (expanded macros 0)  (2,578 Î¼s, 0.04%)</title><rect x="355.7" y="149" width="0.5" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="358.70" y="159.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.repocache.RefreshErrorAlg.Entry] (expanded macros 0)  (15,840 Î¼s, 0.26%)</title><rect x="646.3" y="229" width="3.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="649.34" y="239.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[org.scalasteward.core.data.SemVer.Change]] (expanded macros 0)  (1,403 Î¼s, 0.02%)</title><rect x="347.5" y="245" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="350.52" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[org.scalasteward.core.data.SemVer.Change]] (expanded macros 0)  (1,323 Î¼s, 0.02%)</title><rect x="381.8" y="245" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="384.79" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.codec.ReprAsObjectCodec[Option[org.scalasteward.core.repoconfig.PullRequestFrequency] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;frequency&quot;)],Option[org.scalasteward.core.repoconfig.PullRequestFrequency]] :: List[org.scalasteward.core.repoconfig.PullRequestGroup] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;grouping&quot;)],List[org.scalasteward.core.repoconfig.PullRequestGroup]] :: Option[scala.util.matching.Regex] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;includeMatchedLabels&quot;)],Option[scala.util.matching.Regex]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;customLabels&quot;)],List[String]] :: shapeless.HNil] (id 7472) (expanded macros 3) (tree from `io.circe.generic.extras.ConfigurableDeriver.deriveConfiguredCodec`)  (18,699 Î¼s, 0.30%)</title><rect x="1032.0" y="197" width="3.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1034.96" y="207.5" ></text>
</g>
<g >
<title>org.scalasteward.core.buildtool.scalacli.ScalaCliAlg.directives.type =&gt; ?{def flatTraverse: ?} (expanded macros 0)  (1,151 Î¼s, 0.02%)</title><rect x="399.7" y="245" width="0.2" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="402.69" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.CommitsConfig]{type Repr = V} (expanded macros 3)   (819 Î¼s, 0.01%)</title><rect x="1001.2" y="197" width="0.2" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="1004.22" y="207.5" ></text>
</g>
<g >
<title>version.type =&gt; ?{def &gt;= : ?} (expanded macros 0)  (829 Î¼s, 0.01%)</title><rect x="1179.5" y="245" width="0.2" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="1182.54" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.data.BranchOut]{type Repr = V} (expanded macros 3)   (1,267 Î¼s, 0.02%)</title><rect x="740.5" y="197" width="0.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="743.52" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = 'f'} (id 6002) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (719 Î¼s, 0.01%)</title><rect x="308.9" y="117" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="311.92" y="127.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.bitbucket.DefaultReviewers]{type Repr = R} (expanded macros 0)  (10,571 Î¼s, 0.17%)</title><rect x="511.4" y="213" width="2.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="514.44" y="223.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.data.SemVer.Change] (expanded macros 0)  (1,010 Î¼s, 0.02%)</title><rect x="381.8" y="229" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="384.85" y="239.5" ></text>
</g>
<g >
<title>update.type =&gt; ?{def flatMap: ?} (expanded macros 0)  (669 Î¼s, 0.01%)</title><rect x="1176.2" y="245" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1179.16" y="255.5" ></text>
</g>
<g >
<title>F[Either[Throwable,Unit]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (940 Î¼s, 0.02%)</title><rect x="56.4" y="245" width="0.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="59.41" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[Option[org.scalasteward.core.data.Resolver.Credentials] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)],Option[org.scalasteward.core.data.Resolver.Credentials]] :: List[org.scalasteward.core.data.Resolver.Header] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)],List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil] (expanded macros 0)  (5,155 Î¼s, 0.08%)</title><rect x="982.1" y="117" width="1.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="985.08" y="127.5" ></text>
</g>
<g >
<title>x$9.name.type =&gt; ?{def === : ?} (expanded macros 0)  (965 Î¼s, 0.02%)</title><rect x="1187.5" y="245" width="0.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="1190.52" y="255.5" ></text>
</g>
<g >
<title>p1.groupId.type =&gt; ?{def === : ?} (expanded macros 0)  (2,381 Î¼s, 0.04%)</title><rect x="409.2" y="245" width="0.5" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="412.21" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.Update] (expanded macros 0)  (1,626 Î¼s, 0.03%)</title><rect x="642.4" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="645.42" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucketserver.Json.Branches]{type Repr = V} (id 3961) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,377 Î¼s, 0.02%)</title><rect x="709.9" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="712.92" y="207.5" ></text>
</g>
<g >
<title>cats.data.NonEmptyList[String] =&gt; ?{def foldMap: ?} (expanded macros 0)  (770 Î¼s, 0.01%)</title><rect x="253.4" y="245" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="256.44" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;artifactId&quot;)]} (id 7254) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (658 Î¼s, 0.01%)</title><rect x="1016.9" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1019.86" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;values&quot;)] :: shapeless.HNil,List[org.scalasteward.core.forge.bitbucket.Reviewer] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (2,492 Î¼s, 0.04%)</title><rect x="513.0" y="197" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="515.98" y="207.5" ></text>
</g>
<g >
<title>F[List[org.scalasteward.core.edit.scalafix.ScalafixMigration]] =&gt; ?{def map: ?} (expanded macros 0)  (1,669 Î¼s, 0.03%)</title><rect x="73.2" y="245" width="0.3" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="76.16" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;scalacOptions&quot;)]} (id 2778) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,046 Î¼s, 0.02%)</title><rect x="698.5" y="101" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="701.50" y="111.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitea.GiteaApiAlg.AttachLabelReq]{type Repr = V} (expanded macros 3)   (2,536 Î¼s, 0.04%)</title><rect x="538.6" y="197" width="0.5" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="541.57" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;grouping&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;includeMatchedLabels&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;customLabels&quot;)] :: shapeless.HNil,List[org.scalasteward.core.repoconfig.PullRequestGroup] :: Option[scala.util.matching.Regex] :: List[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (8,151 Î¼s, 0.13%)</title><rect x="1026.8" y="181" width="1.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1029.85" y="191.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.repoconfig.PullRequestsConfig] (expanded macros 0)  (900 Î¼s, 0.01%)</title><rect x="661.1" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="664.06" y="191.5" ></text>
</g>
<g >
<title>List[org.scalasteward.core.buildtool.BuildRoot] =&gt; ?{def traverse_: ?} (expanded macros 0)  (873 Î¼s, 0.01%)</title><rect x="170.3" y="245" width="0.2" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="173.32" y="255.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[org.scalasteward.core.data.Update.Single] (expanded macros 0)  (1,033 Î¼s, 0.02%)</title><rect x="402.9" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="405.93" y="239.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[List[org.scalasteward.core.data.Version.Component]] (expanded macros 0)  (1,445 Î¼s, 0.02%)</title><rect x="1179.0" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1181.96" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,682 Î¼s, 0.03%)</title><rect x="500.8" y="165" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="503.84" y="175.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[String]] (expanded macros 0)  (799 Î¼s, 0.01%)</title><rect x="799.8" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="802.78" y="191.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord[org.scalasteward.core.data.Resolver.IvyRepository]{type Out = D} (expanded macros 0)  (7,556 Î¼s, 0.12%)</title><rect x="931.4" y="149" width="1.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="934.36" y="159.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (1,583 Î¼s, 0.03%)</title><rect x="996.2" y="101" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="999.19" y="111.5" ></text>
</g>
<g >
<title>F[Option[org.scalasteward.core.util.Timestamp]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (640 Î¼s, 0.01%)</title><rect x="88.0" y="245" width="0.1" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="90.95" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;target_project_id&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;remove_source_branch&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;source_branch&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;target_branch&quot;)] :: shapeless.HNil,Long :: Option[Boolean] :: String :: org.scalasteward.core.git.Branch :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (6,915 Î¼s, 0.11%)</title><rect x="884.9" y="101" width="1.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="887.87" y="111.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.ReprAsObjectEncoder[org.scalasteward.core.data.CrossDependency with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;crossDependency&quot;)],org.scalasteward.core.data.CrossDependency] :: cats.data.NonEmptyList[org.scalasteward.core.data.Version] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;newerVersions&quot;)],cats.data.NonEmptyList[org.scalasteward.core.data.Version]] :: Option[org.scalasteward.core.data.GroupId] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;newerGroupId&quot;)],Option[org.scalasteward.core.data.GroupId]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;newerArtifactId&quot;)],Option[String]] :: shapeless.HNil]] (id 2312) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (21,761 Î¼s, 0.35%)</title><rect x="808.6" y="213" width="4.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="811.62" y="223.5" ></text>
</g>
<g >
<title>cats.Parallel[F] (expanded macros 0)  (8,091 Î¼s, 0.13%)</title><rect x="245.0" y="245" width="1.6" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="248.05" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;authors&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;target&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;executionOrder&quot;)] :: shapeless.HNil,Option[cats.data.NonEmptyList[org.scalasteward.core.git.Author]] :: Option[org.scalasteward.core.edit.scalafix.ScalafixMigration.Target] :: Option[org.scalasteward.core.edit.scalafix.ScalafixMigration.ExecutionOrder] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (6,244 Î¼s, 0.10%)</title><rect x="698.7" y="101" width="1.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="701.70" y="111.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitea.GiteaApiAlg.PRBranchInfo]{type Repr = V} (expanded macros 3)   (2,577 Î¼s, 0.04%)</title><rect x="596.5" y="197" width="0.5" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="599.54" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)]} (id 1973) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (819 Î¼s, 0.01%)</title><rect x="989.7" y="117" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="992.66" y="127.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.forge.bitbucketserver.Json.Branch] =&gt; ?{def map: ?} (expanded macros 0)  (1,137 Î¼s, 0.02%)</title><rect x="132.9" y="245" width="0.2" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="135.89" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;migrations&quot;)]} (id 2881) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (715 Î¼s, 0.01%)</title><rect x="1149.8" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1152.83" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.UpdatesConfig]{type Out = K} (id 8255) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (2,022 Î¼s, 0.03%)</title><rect x="1092.3" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1095.31" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;filter&quot;)] :: shapeless.HNil,String :: Option[String] :: cats.data.NonEmptyList[org.scalasteward.core.repoconfig.PullRequestUpdateFilter] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (3,998 Î¼s, 0.06%)</title><rect x="794.6" y="197" width="0.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="797.60" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.data.PullRequestNumber] (id 4374) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (842 Î¼s, 0.01%)</title><rect x="1147.1" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1150.07" y="207.5" ></text>
</g>
<g >
<title>F[better.files.File] =&gt; ?{def map: ?} (expanded macros 0)  (10,041 Î¼s, 0.16%)</title><rect x="123.4" y="245" width="1.9" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="126.42" y="255.5" ></text>
</g>
<g >
<title>List[better.files.File] =&gt; ?{def filterA: ?} (expanded macros 0)  (562 Î¼s, 0.01%)</title><rect x="169.6" y="245" width="0.1" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="172.58" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = shapeless._0} (expanded macros 0)  (767 Î¼s, 0.01%)</title><rect x="312.2" y="197" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="315.16" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: shapeless.HNil]] (id 4011) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (3,745 Î¼s, 0.06%)</title><rect x="717.7" y="213" width="0.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="720.66" y="223.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucketserver.Json.Repo]{type Repr = V} (id 4173) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,138 Î¼s, 0.02%)</title><rect x="733.9" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="736.89" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;changes&quot;)]} (id 8869) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (533 Î¼s, 0.01%)</title><rect x="1173.0" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1176.01" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.codec.ConfiguredAsObjectCodec[org.scalasteward.core.repoconfig.CommitsConfig]] (id 7058) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (27,098 Î¼s, 0.44%)</title><rect x="998.0" y="245" width="5.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1001.01" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;sbtVersion&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;scalaVersion&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;configurations&quot;)] :: shapeless.HNil,Option[org.scalasteward.core.buildtool.sbt.data.SbtVersion] :: Option[org.scalasteward.core.buildtool.sbt.data.ScalaVersion] :: Option[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (7,807 Î¼s, 0.13%)</title><rect x="472.4" y="149" width="1.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="475.36" y="159.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Resolver.IvyRepository]{type Repr = V} (expanded macros 3)   (2,840 Î¼s, 0.05%)</title><rect x="937.4" y="133" width="0.5" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="940.35" y="143.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.ReprDecoder[Long with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)],Long] :: shapeless.HNil] (id 5460) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveDecoder`)  (1,985 Î¼s, 0.03%)</title><rect x="792.5" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="795.49" y="207.5" ></text>
</g>
<g >
<title>dependency.resolvers.type =&gt; ?{def parFlatTraverse: ?} (expanded macros 0)  (3,187 Î¼s, 0.05%)</title><rect x="305.2" y="245" width="0.6" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="308.22" y="255.5" ></text>
</g>
<g >
<title>org.scalasteward.core.data.GroupId with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;groupId&quot;)],org.scalasteward.core.data.GroupId] :: org.scalasteward.core.data.ArtifactId with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;artifactId&quot;)],org.scalasteward.core.data.ArtifactId] :: org.scalasteward.core.data.Version with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;version&quot;)],org.scalasteward.core.data.Version] :: Option[org.scalasteward.core.buildtool.sbt.data.SbtVersion] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;sbtVersion&quot;)],Option[org.scalasteward.core.buildtool.sbt.data.SbtVersion]] :: Option[org.scalasteward.core.buildtool.sbt.data.ScalaVersion] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;scalaVersion&quot;)],Option[org.scalasteward.core.buildtool.sbt.data.ScalaVersion]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;configurations&quot;)],Option[String]] :: shapeless.HNil &lt;:&lt; (org.scalasteward.core.data.GroupId :: org.scalasteward.core.data.ArtifactId :: org.scalasteward.core.data.Version :: Option[org.scalasteward.core.buildtool.sbt.data.SbtVersion] :: Option[org.scalasteward.core.buildtool.sbt.data.ScalaVersion] :: Option[String] :: shapeless.HNil) (expanded macros 0)  (659 Î¼s, 0.01%)</title><rect x="468.5" y="197" width="0.1" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="471.52" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;description&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;labels&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;assignee_ids&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewer_ids&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;target_project_id&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;remove_source_branch&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;source_branch&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;target_branch&quot;)] :: shapeless.HNil,String :: Option[List[String]] :: Option[List[Int]] :: Option[List[Int]] :: Long :: Option[Boolean] :: String :: org.scalasteward.core.git.Branch :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (13,114 Î¼s, 0.21%)</title><rect x="883.7" y="165" width="2.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="886.69" y="175.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.ReprDecoder[List[org.scalasteward.core.forge.github.Repository] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;repositories&quot;)],List[org.scalasteward.core.forge.github.Repository]] :: shapeless.HNil] (id 5326) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveDecoder`)  (3,552 Î¼s, 0.06%)</title><rect x="782.8" y="197" width="0.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="785.78" y="207.5" ></text>
</g>
<g >
<title>cats.kernel.Monoid[List[org.scalasteward.core.git.Author]] (expanded macros 0)  (1,503 Î¼s, 0.02%)</title><rect x="281.4" y="245" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="284.43" y="255.5" ></text>
</g>
<g >
<title>cats.Functor[[+A]cats.effect.kernel.Resource[F,A]] (expanded macros 0)  (3,000 Î¼s, 0.05%)</title><rect x="268.3" y="229" width="0.6" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="271.35" y="239.5" ></text>
</g>
<g >
<title>SelfCheckAlg.this.config.urlCheckerTestUrls.type =&gt; ?{def traverse_: ?} (expanded macros 0)  (2,971 Î¼s, 0.05%)</title><rect x="178.6" y="245" width="0.6" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="181.61" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.data.Resolver.Credentials] (expanded macros 0)  (1,725 Î¼s, 0.03%)</title><rect x="992.7" y="101" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="995.70" y="111.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.RepoConfig]{type Out = K} (id 7633) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,758 Î¼s, 0.03%)</title><rect x="1056.1" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1059.10" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)]} (id 7648) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (815 Î¼s, 0.01%)</title><rect x="1059.8" y="37" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1062.76" y="47.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.data.CommitOut]{type Repr = R} (expanded macros 0)  (9,844 Î¼s, 0.16%)</title><rect x="743.2" y="213" width="1.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="746.18" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;message&quot;)] :: shapeless.HNil,List]{type Lub = Symbol} (expanded macros 0)  (1,263 Î¼s, 0.02%)</title><rect x="1002.7" y="213" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1005.72" y="223.5" ></text>
</g>
<g >
<title>cats.effect.kernel.Async[[_]F[_]] (expanded macros 0)  (557 Î¼s, 0.01%)</title><rect x="300.4" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="303.45" y="239.5" ></text>
</g>
<g >
<title>x.customLabels.type =&gt; ?{def |+| : ?} (expanded macros 0)  (866 Î¼s, 0.01%)</title><rect x="1188.5" y="245" width="0.2" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="1191.50" y="255.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[shapeless.HNil,shapeless.HNil]{type Out = OutT} (expanded macros 0)  (921 Î¼s, 0.01%)</title><rect x="1023.1" y="133" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1026.05" y="143.5" ></text>
</g>
<g >
<title>F[Unit] =&gt; ?{def as: ?} (expanded macros 0)  (15,383 Î¼s, 0.25%)</title><rect x="97.5" y="245" width="2.9" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="100.46" y="255.5" ></text>
</g>
<g >
<title>x$15.type =&gt; ?{def traverse_: ?} (expanded macros 0)  (643 Î¼s, 0.01%)</title><rect x="1182.7" y="245" width="0.2" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="1185.73" y="255.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.Validate[Char,eu.timepit.refined.numeric.Greater['f']]{type R = R} (expanded macros 0)  (2,659 Î¼s, 0.04%)</title><rect x="308.7" y="149" width="0.5" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="311.71" y="159.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: None.type :: None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (3,458 Î¼s, 0.06%)</title><rect x="1014.2" y="197" width="0.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1017.19" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.github.TokenOut]{type Out = K} (id 5354) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (794 Î¼s, 0.01%)</title><rect x="786.3" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="789.30" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;location&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,String :: Option[org.scalasteward.core.data.Resolver.Credentials] :: List[org.scalasteward.core.data.Resolver.Header] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (5,705 Î¼s, 0.09%)</title><rect x="955.9" y="117" width="1.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="958.86" y="127.5" ></text>
</g>
<g >
<title>String(&quot;sbt.version\\s*=\\s*(\\S+)&quot;) =&gt; ?{def r: ?} (expanded macros 0)  (17,718 Î¼s, 0.29%)</title><rect x="199.4" y="245" width="3.3" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="202.36" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;body&quot;)],String] :: Long with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)],Long] :: shapeless.HNil] (id 4795) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (5,094 Î¼s, 0.08%)</title><rect x="552.1" y="197" width="0.9" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="555.08" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)]} (id 4559) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,261 Î¼s, 0.02%)</title><rect x="623.0" y="133" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="626.02" y="143.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)]} (id 8267) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,084 Î¼s, 0.02%)</title><rect x="1095.8" y="117" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1098.80" y="127.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;fork&quot;)]} (id 4562) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,276 Î¼s, 0.02%)</title><rect x="621.5" y="181" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="624.51" y="191.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.ReprAsObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;slug&quot;)],String] :: org.scalasteward.core.forge.bitbucketserver.Json.Project with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;project&quot;)],org.scalasteward.core.forge.bitbucketserver.Json.Project] :: shapeless.HNil] (id 4201) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveEncoder`)  (3,018 Î¼s, 0.05%)</title><rect x="859.4" y="197" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="862.42" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)]} (id 2083) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,073 Î¼s, 0.02%)</title><rect x="975.8" y="69" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="978.81" y="79.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.Validate[A,eu.timepit.refined.boolean.Or[eu.timepit.refined.char.Digit,eu.timepit.refined.boolean.And[eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less['a']],eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Greater['f']]]]]{type R = R} (expanded macros 0)  (7,977 Î¼s, 0.13%)</title><rect x="354.7" y="197" width="1.6" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="357.74" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.repoconfig.RepoConfig] (expanded macros 0)  (1,265 Î¼s, 0.02%)</title><rect x="377.4" y="245" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="380.41" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;versions&quot;)]} (id 1327) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (4,181 Î¼s, 0.07%)</title><rect x="434.0" y="165" width="0.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="437.03" y="175.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[String]] (expanded macros 0)  (1,493 Î¼s, 0.02%)</title><rect x="455.8" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="458.79" y="191.5" ></text>
</g>
<g >
<title>String =&gt; ?{def forall: ?} (expanded macros 0)  (1,266 Î¼s, 0.02%)</title><rect x="181.1" y="245" width="0.3" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="184.11" y="255.5" ></text>
</g>
<g >
<title>info.type =&gt; ?{def map: ?} (expanded macros 0)  (999 Î¼s, 0.02%)</title><rect x="329.5" y="245" width="0.2" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="332.54" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitea.GiteaApiAlg.AttachLabelReq]{type Out = K} (id 4841) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (2,028 Î¼s, 0.03%)</title><rect x="538.2" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="541.18" y="207.5" ></text>
</g>
<g >
<title>shapeless.Default[org.scalasteward.core.repoconfig.PostUpdateHookConfig]{type Out = Options} (id 7239) (expanded macros 3) (tree from `shapeless.DefaultMacros.materialize`)  (1,116 Î¼s, 0.02%)</title><rect x="1006.6" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1009.57" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[Vector[Int] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;labels&quot;)],Vector[Int]] :: shapeless.HNil]] (id 4847) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (6,020 Î¼s, 0.10%)</title><rect x="540.4" y="213" width="1.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="543.42" y="223.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.ReprDecoder[org.scalasteward.core.data.GroupId with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;groupId&quot;)],org.scalasteward.core.data.GroupId] :: cats.data.NonEmptyList[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;artifactIds&quot;)],cats.data.NonEmptyList[String]] :: org.scalasteward.core.data.Version with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;newVersion&quot;)],org.scalasteward.core.data.Version] :: cats.data.NonEmptyList[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;rewriteRules&quot;)],cats.data.NonEmptyList[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;doc&quot;)],Option[String]] :: Option[cats.data.NonEmptyList[String]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;scalacOptions&quot;)],Option[cats.data.NonEmptyList[String]]] :: Option[cats.data.NonEmptyList[org.scalasteward.core.git.Author]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;authors&quot;)],Option[cats.data.NonEmptyList[org.scalasteward.core.git.Author]]] :: Option[org.scalasteward.core.edit.scalafix.ScalafixMigration.Target] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;target&quot;)],Option[org.scalasteward.core.edit.scalafix.ScalafixMigration.Target]] :: Option[org.scalasteward.core.edit.scalafix.ScalafixMigration.ExecutionOrder] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;executionOrder&quot;)],Option[org.scalasteward.core.edit.scalafix.ScalafixMigration.ExecutionOrder]] :: shapeless.HNil] (id 2786) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveDecoder`)  (18,474 Î¼s, 0.30%)</title><rect x="700.1" y="197" width="3.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="703.09" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;groupIdAfter&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;artifactIdBefore&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;artifactIdAfter&quot;)] :: shapeless.HNil,org.scalasteward.core.data.GroupId :: Option[String] :: String :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (2,514 Î¼s, 0.04%)</title><rect x="1159.3" y="181" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1162.27" y="191.5" ></text>
</g>
<g >
<title>io.circe.Encoder[List[String]] (expanded macros 0)  (1,040 Î¼s, 0.02%)</title><rect x="870.2" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="873.20" y="191.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.repoconfig.UpdatesConfig] (expanded macros 0)  (896 Î¼s, 0.01%)</title><rect x="1063.6" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1066.63" y="191.5" ></text>
</g>
<g >
<title>((Unit, Unit)) =&gt; com.monovore.decline.Command[?A] (expanded macros 0)   (1,000 Î¼s, 0.02%)</title><rect x="16.2" y="245" width="0.2" height="15.0" fill="rgb(245,116,116)" rx="2" ry="2" />
<text  x="19.19" y="255.5" ></text>
</g>
<g >
<title>x$1.type =&gt; ?{def flatTraverse: ?} (expanded macros 0)  (1,113 Î¼s, 0.02%)</title><rect x="1181.1" y="245" width="0.2" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="1184.07" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Resolver.MavenRepository]{type Out = K} (id 1713) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,709 Î¼s, 0.03%)</title><rect x="957.0" y="133" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="960.00" y="143.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.coursier.VersionsCache.Value] (expanded macros 0)  (3,745 Î¼s, 0.06%)</title><rect x="383.3" y="245" width="0.7" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="386.25" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.Dependency] (expanded macros 0)  (4,740 Î¼s, 0.08%)</title><rect x="359.0" y="245" width="0.9" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="361.96" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Resolver.IvyRepository]{type Repr = V} (expanded macros 3)   (2,432 Î¼s, 0.04%)</title><rect x="934.2" y="133" width="0.4" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="937.16" y="143.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[Some[List[org.scalasteward.core.edit.scalafix.ScalafixMigration]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;migrations&quot;)] :: shapeless.HNil]{type Out = Rec} (expanded macros 0)  (740 Î¼s, 0.01%)</title><rect x="1150.3" y="197" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1153.28" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Resolver.IvyRepository]{type Out = K} (id 1839) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (2,051 Î¼s, 0.03%)</title><rect x="937.0" y="133" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="939.96" y="143.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;closed&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;fromRef&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;toRef&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;locked&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: shapeless.HNil,Boolean :: org.scalasteward.core.forge.bitbucketserver.Json.Ref :: org.scalasteward.core.forge.bitbucketserver.Json.Ref :: Boolean :: List[org.scalasteward.core.forge.bitbucketserver.Json.Reviewer] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (8,231 Î¼s, 0.13%)</title><rect x="850.1" y="133" width="1.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="853.15" y="143.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitea.GiteaApiAlg.CreatePullRequestOption]{type Repr = V} (expanded macros 3)   (4,456 Î¼s, 0.07%)</title><rect x="573.0" y="197" width="0.9" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="576.02" y="207.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[org.scalasteward.core.git.Sha1] (expanded macros 0)  (878 Î¼s, 0.01%)</title><rect x="1180.5" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1183.46" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;maybeCrossName&quot;)] :: shapeless.HNil,Option[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (2,520 Î¼s, 0.04%)</title><rect x="454.2" y="181" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="457.16" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)]} (id 2461) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,508 Î¼s, 0.02%)</title><rect x="825.6" y="165" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="828.61" y="175.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.update.artifact.ArtifactChange] (expanded macros 0)  (1,013 Î¼s, 0.02%)</title><rect x="1172.3" y="165" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1175.35" y="175.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.github.UpdatePullRequestPayload]{type Repr = R} (expanded macros 0)  (6,884 Î¼s, 0.11%)</title><rect x="874.3" y="213" width="1.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="877.28" y="223.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;uuid&quot;)]} (id 3723) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (791 Î¼s, 0.01%)</title><rect x="517.1" y="181" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="520.10" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;artifactId&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;version&quot;)] :: shapeless.HNil,Option[String] :: Option[org.scalasteward.core.repoconfig.VersionPattern] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (2,490 Î¼s, 0.04%)</title><rect x="663.5" y="181" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="666.54" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[org.scalasteward.core.repoconfig.ScalafmtConfig with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;scalafmt&quot;)],org.scalasteward.core.repoconfig.ScalafmtConfig] :: org.scalasteward.core.repoconfig.UpdatesConfig with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)],org.scalasteward.core.repoconfig.UpdatesConfig] :: Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)],Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]]] :: Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)],Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy]] :: Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)],Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)],List[String]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)],List[String]] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)],List[org.scalasteward.core.repoconfig.GroupRepoConfig]] :: shapeless.HNil] (expanded macros 0)  (11,449 Î¼s, 0.19%)</title><rect x="1072.7" y="181" width="2.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1075.71" y="191.5" ></text>
</g>
<g >
<title>DependencyMetadata.this.homePage.type =&gt; ?{def filterA: ?} (expanded macros 0)  (1,978 Î¼s, 0.03%)</title><rect x="37.6" y="245" width="0.4" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="40.61" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)] :: shapeless.HNil,List[org.scalasteward.core.data.Update.ForArtifactId] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (4,067 Î¼s, 0.07%)</title><rect x="688.0" y="165" width="0.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="691.03" y="175.5" ></text>
</g>
<g >
<title>String =&gt; org.http4s.Header.ToRaw with org.http4s.Header.ToRaw.Primitive (expanded macros 0)   (4,835 Î¼s, 0.08%)</title><rect x="15.1" y="229" width="0.9" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="18.06" y="239.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[Option[String]] (expanded macros 0)  (2,255 Î¼s, 0.04%)</title><rect x="272.4" y="245" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="275.44" y="255.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[org.scalasteward.core.forge.ForgeType] (expanded macros 0)  (2,514 Î¼s, 0.04%)</title><rect x="151.4" y="229" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="154.42" y="239.5" ></text>
</g>
<g >
<title>org.scalasteward.core.edit.scalafix.ScalafixMigration.ExecutionOrder =&gt; ?{def === : ?} (expanded macros 0)  (602 Î¼s, 0.01%)</title><rect x="404.1" y="245" width="0.1" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="407.11" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucketserver.Json.User]{type Repr = V} (id 4229) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,467 Î¼s, 0.02%)</title><rect x="530.7" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="533.69" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.Resolver.Credentials] (expanded macros 0)  (4,470 Î¼s, 0.07%)</title><rect x="942.2" y="101" width="0.8" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="945.19" y="111.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.repoconfig.PullRequestFrequency] (expanded macros 0)   (653 Î¼s, 0.01%)</title><rect x="1034.1" y="149" width="0.1" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="1037.06" y="159.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Vector[Int]] (expanded macros 0)  (1,290 Î¼s, 0.02%)</title><rect x="541.1" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="544.11" y="191.5" ></text>
</g>
<g >
<title>Long =&gt; Int (expanded macros 0)   (2,055 Î¼s, 0.03%)</title><rect x="171.5" y="245" width="0.4" height="15.0" fill="rgb(240,109,109)" rx="2" ry="2" />
<text  x="174.46" y="255.5" ></text>
</g>
<g >
<title>F[Map[String,Int]] =&gt; ?{def map: ?} (expanded macros 0)  (870 Î¼s, 0.01%)</title><rect x="78.2" y="245" width="0.2" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="81.21" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.Scope[List[org.scalasteward.core.data.DependencyInfo]]] (expanded macros 0)  (5,746 Î¼s, 0.09%)</title><rect x="654.7" y="165" width="1.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="657.69" y="175.5" ></text>
</g>
<g >
<title>cats.kernel.Order[(String, Option[String])] (expanded macros 0)  (1,195 Î¼s, 0.02%)</title><rect x="286.6" y="245" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="289.61" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.codec.ReprAsObjectCodec[List[org.scalasteward.core.repoconfig.UpdatePattern] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;pin&quot;)],List[org.scalasteward.core.repoconfig.UpdatePattern]] :: List[org.scalasteward.core.repoconfig.UpdatePattern] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;allow&quot;)],List[org.scalasteward.core.repoconfig.UpdatePattern]] :: List[org.scalasteward.core.repoconfig.UpdatePattern] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;allowPreReleases&quot;)],List[org.scalasteward.core.repoconfig.UpdatePattern]] :: List[org.scalasteward.core.repoconfig.UpdatePattern] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;ignore&quot;)],List[org.scalasteward.core.repoconfig.UpdatePattern]] :: Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)],Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]]] :: Option[List[String]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)],Option[List[String]]] :: shapeless.HNil] (id 8274) (expanded macros 3) (tree from `io.circe.generic.extras.ConfigurableDeriver.deriveConfiguredCodec`)  (19,959 Î¼s, 0.32%)</title><rect x="1096.8" y="197" width="3.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1099.79" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.data.ArtifactId] (expanded macros 0)  (32,706 Î¼s, 0.53%)</title><rect x="450.3" y="229" width="6.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="453.26" y="239.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[Option[org.http4s.Uri.Host]] (expanded macros 0)  (2,785 Î¼s, 0.05%)</title><rect x="173.3" y="229" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="176.27" y="239.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.gitea.GiteaApiAlg.PRBranchInfo] (expanded macros 0)  (30,949 Î¼s, 0.50%)</title><rect x="595.2" y="229" width="5.9" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="598.22" y="239.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.gitea.GiteaApiAlg.User]{type Repr = R} (expanded macros 0)  (16,632 Î¼s, 0.27%)</title><rect x="629.5" y="213" width="3.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="632.45" y="223.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.gitea.GiteaApiAlg.PayloadCommit]] (id 4582) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (26,077 Î¼s, 0.42%)</title><rect x="601.1" y="245" width="5.0" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="604.14" y="255.5" ></text>
</g>
<g >
<title>List[org.scalasteward.core.edit.update.data.VersionPosition] =&gt; scala.collection.IterableOnce[B] (expanded macros 0)  (915 Î¼s, 0.01%)</title><rect x="170.9" y="245" width="0.2" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="173.91" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;description&quot;)]} (id 4056) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,024 Î¼s, 0.02%)</title><rect x="849.3" y="165" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="852.33" y="175.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]]] (expanded macros 0)  (1,417 Î¼s, 0.02%)</title><rect x="1064.2" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1067.16" y="191.5" ></text>
</g>
<g >
<title>cats.Functor[List] (expanded macros 0)  (1,448 Î¼s, 0.02%)</title><rect x="236.4" y="245" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="239.42" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;clone_url&quot;)]} (id 4557) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,482 Î¼s, 0.02%)</title><rect x="624.0" y="101" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="627.02" y="111.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucket.CreateComment]{type Out = K} (id 3627) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (954 Î¼s, 0.02%)</title><rect x="508.4" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="511.44" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[org.scalasteward.core.data.GroupId with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;groupId&quot;)],org.scalasteward.core.data.GroupId] :: org.scalasteward.core.data.ArtifactId with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;artifactId&quot;)],org.scalasteward.core.data.ArtifactId] :: org.scalasteward.core.data.Version with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;version&quot;)],org.scalasteward.core.data.Version] :: Option[org.scalasteward.core.buildtool.sbt.data.SbtVersion] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;sbtVersion&quot;)],Option[org.scalasteward.core.buildtool.sbt.data.SbtVersion]] :: Option[org.scalasteward.core.buildtool.sbt.data.ScalaVersion] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;scalaVersion&quot;)],Option[org.scalasteward.core.buildtool.sbt.data.ScalaVersion]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;configurations&quot;)],Option[String]] :: shapeless.HNil]] (id 1475) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (37,701 Î¼s, 0.61%)</title><rect x="473.9" y="213" width="7.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="476.85" y="223.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.PullRequestGroup]{type Out = K} (id 7333) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (814 Î¼s, 0.01%)</title><rect x="794.0" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="796.97" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Resolver.Credentials]{type Out = K} (id 1640) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,597 Î¼s, 0.03%)</title><rect x="483.0" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="485.95" y="207.5" ></text>
</g>
<g >
<title>cats.Functor[F] (expanded macros 0)  (604 Î¼s, 0.01%)</title><rect x="57.8" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="60.83" y="239.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)]} (id 4473) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (797 Î¼s, 0.01%)</title><rect x="861.9" y="181" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="864.91" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)]} (id 5309) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (596 Î¼s, 0.01%)</title><rect x="763.1" y="181" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="766.14" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;message&quot;)]} (id 7067) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (543 Î¼s, 0.01%)</title><rect x="1000.9" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1003.86" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;content&quot;)] :: shapeless.HNil,String :: shapeless.HNil]{type Out = R} (expanded macros 0)  (1,824 Î¼s, 0.03%)</title><rect x="829.9" y="197" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="832.87" y="207.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.data.CrossDependency] (expanded macros 0)   (849 Î¼s, 0.01%)</title><rect x="676.1" y="165" width="0.2" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="679.11" y="175.5" ></text>
</g>
<g >
<title>cats.data.NonEmptyList[org.http4s.Uri] &lt;:&lt; cats.data.NonEmptyList[org.http4s.Uri] (expanded macros 0)  (2,545 Î¼s, 0.04%)</title><rect x="255.0" y="245" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="257.99" y="255.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[Option[org.http4s.Uri.Scheme]] (expanded macros 0)  (1,750 Î¼s, 0.03%)</title><rect x="273.2" y="245" width="0.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="276.24" y="255.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.repoconfig.GroupRepoConfig]{type Repr = R} (expanded macros 0)  (7,224 Î¼s, 0.12%)</title><rect x="658.7" y="213" width="1.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="661.68" y="223.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.update.artifact.ArtifactChange]{type Repr = R} (expanded macros 0)  (837 Î¼s, 0.01%)</title><rect x="1158.0" y="213" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1160.98" y="223.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[cats.data.NonEmptyList[org.scalasteward.core.forge.bitbucketserver.Json.Branch] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;values&quot;)],cats.data.NonEmptyList[org.scalasteward.core.forge.bitbucketserver.Json.Branch]] :: shapeless.HNil]] (id 3966) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (3,677 Î¼s, 0.06%)</title><rect x="710.7" y="213" width="0.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="713.72" y="223.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitlab.MergeRequestPayload]{type Repr = V} (id 5468) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (2,205 Î¼s, 0.04%)</title><rect x="882.6" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="885.59" y="207.5" ></text>
</g>
<g >
<title>(=&gt; Double) =&gt; Int (expanded macros 0)   (686 Î¼s, 0.01%)</title><rect x="22.2" y="245" width="0.1" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text  x="25.21" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;archived&quot;)]} (id 4432) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (972 Î¼s, 0.02%)</title><rect x="756.9" y="101" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="759.94" y="111.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.gitea.GiteaApiAlg.Repository]] (id 4539) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (64,484 Î¼s, 1.05%)</title><rect x="616.0" y="245" width="12.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="619.01" y="255.5" ></text>
</g>
<g >
<title>Numeric[Int] (expanded macros 0)  (927 Î¼s, 0.02%)</title><rect x="313.4" y="213" width="0.2" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="316.42" y="223.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Int] (expanded macros 0)  (640 Î¼s, 0.01%)</title><rect x="837.3" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="840.32" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.data.UserOut]{type Repr = V} (id 4492) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,448 Î¼s, 0.02%)</title><rect x="760.5" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="763.55" y="207.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.data.Resolver] (expanded macros 0)   (1,138 Î¼s, 0.02%)</title><rect x="504.0" y="149" width="0.2" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="507.03" y="159.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.forge.bitbucket.RepositoryResponse] (expanded macros 0)   (1,012 Î¼s, 0.02%)</title><rect x="365.9" y="229" width="0.2" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="368.90" y="239.5" ></text>
</g>
<g >
<title>Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;fork&quot;)],Boolean] :: Long with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)],Long] :: org.scalasteward.core.forge.gitea.GiteaApiAlg.User with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;owner&quot;)],org.scalasteward.core.forge.gitea.GiteaApiAlg.User] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;archived&quot;)],Boolean] :: org.http4s.Uri with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;clone_url&quot;)],org.http4s.Uri] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;default_branch&quot;)],String] :: Option[org.scalasteward.core.forge.gitea.GiteaApiAlg.Repository] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;parent&quot;)],Option[org.scalasteward.core.forge.gitea.GiteaApiAlg.Repository]] :: shapeless.HNil &lt;:&lt; (Boolean :: Long :: org.scalasteward.core.forge.gitea.GiteaApiAlg.User :: String :: Boolean :: org.http4s.Uri :: String :: Option[org.scalasteward.core.forge.gitea.GiteaApiAlg.Repository] :: shapeless.HNil) (expanded macros 0)  (673 Î¼s, 0.01%)</title><rect x="618.7" y="197" width="0.1" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="621.71" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.Resolver.Header] (expanded macros 0)  (1,880 Î¼s, 0.03%)</title><rect x="961.8" y="101" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="964.79" y="111.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucketserver.Json.Page[A]]{type Out = K} (id 4078) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (929 Î¼s, 0.02%)</title><rect x="730.2" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="733.22" y="207.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.bitbucket.CreateComment]{type Repr = R} (expanded macros 0)  (8,424 Î¼s, 0.14%)</title><rect x="508.2" y="213" width="1.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="511.19" y="223.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;maybeCrossName&quot;)]} (id 1391) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,403 Î¼s, 0.02%)</title><rect x="454.3" y="165" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="457.30" y="175.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucketserver.Json.User]{type Out = K} (id 4226) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,042 Î¼s, 0.02%)</title><rect x="529.0" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="531.97" y="207.5" ></text>
</g>
<g >
<title>unwrapped.type =&gt; ?{def === : ?} (expanded macros 0)  (582 Î¼s, 0.01%)</title><rect x="1175.2" y="245" width="0.1" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="1178.22" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;labels&quot;)]} (id 4736) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,358 Î¼s, 0.02%)</title><rect x="578.0" y="85" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="580.98" y="95.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.github.GitHubLabels]{type Out = K} (id 5286) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (796 Î¼s, 0.01%)</title><rect x="871.7" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="874.65" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;allow&quot;)]} (id 8251) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,112 Î¼s, 0.02%)</title><rect x="1090.1" y="165" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1093.15" y="175.5" ></text>
</g>
<g >
<title>List[Either[org.scalasteward.core.data.Dependency,org.scalasteward.core.data.Resolver]] =&gt; ?{def separate: ?} (expanded macros 0)  (1,087 Î¼s, 0.02%)</title><rect x="168.0" y="245" width="0.3" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="171.05" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;labels&quot;)]} (id 3397) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (766 Î¼s, 0.01%)</title><rect x="842.3" y="133" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="845.27" y="143.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.forge.data.PullRequestNumber] (expanded macros 0)   (542 Î¼s, 0.01%)</title><rect x="643.9" y="149" width="0.1" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="646.86" y="159.5" ></text>
</g>
<g >
<title>org.scalasteward.core.repoconfig.PullRequestUpdateStrategy =&gt; ?{def =!= : ?} (expanded macros 0)  (814 Î¼s, 0.01%)</title><rect x="406.6" y="245" width="0.1" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="409.59" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.Dependency] (expanded macros 0)  (2,205 Î¼s, 0.04%)</title><rect x="1121.2" y="197" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1124.18" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.repoconfig.PullRequestGroup] (expanded macros 0)  (2,153 Î¼s, 0.03%)</title><rect x="1034.6" y="165" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1037.60" y="175.5" ></text>
</g>
<g >
<title>F[List[better.files.File]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (1,113 Î¼s, 0.02%)</title><rect x="67.4" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="70.37" y="255.5" ></text>
</g>
<g >
<title>String =&gt; ?{def split(x$1: ? &gt;: Char('=')): ?} (expanded macros 0)  (4,417 Î¼s, 0.07%)</title><rect x="181.9" y="245" width="0.8" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="184.87" y="255.5" ></text>
</g>
<g >
<title>org.typelevel.log4cats.Logger[F] (expanded macros 0)  (3,448 Î¼s, 0.06%)</title><rect x="408.2" y="245" width="0.6" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="411.18" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucketserver.Json.Branches]{type Repr = V} (expanded macros 3)   (1,613 Î¼s, 0.03%)</title><rect x="709.6" y="197" width="0.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="712.61" y="207.5" ></text>
</g>
<g >
<title>cats.Functor[F] (expanded macros 0)  (614 Î¼s, 0.01%)</title><rect x="125.2" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="128.23" y="239.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[String]] (expanded macros 0)  (769 Î¼s, 0.01%)</title><rect x="701.3" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="704.34" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)]} (id 4711) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,461 Î¼s, 0.02%)</title><rect x="585.9" y="181" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="588.93" y="191.5" ></text>
</g>
<g >
<title>groupedDependencies.type =&gt; ?{def traverse: ?} (expanded macros 0)  (546 Î¼s, 0.01%)</title><rect x="328.0" y="245" width="0.1" height="15.0" fill="rgb(95,242,95)" rx="2" ry="2" />
<text  x="331.04" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.github.Repository]] (id 5337) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (10,692 Î¼s, 0.17%)</title><rect x="783.5" y="245" width="2.0" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="786.46" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.codec.UnwrappedCodec[org.scalasteward.core.data.CrossDependency]] (id 1419) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (17,636 Î¼s, 0.29%)</title><rect x="1120.0" y="245" width="3.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1122.99" y="255.5" ></text>
</g>
<g >
<title>F[(Option[String], List[org.scalasteward.core.data.Scope[List[org.scalasteward.core.data.Dependency]]])] =&gt; ?{def map: ?} (expanded macros 0)  (1,572 Î¼s, 0.03%)</title><rect x="43.8" y="245" width="0.3" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="46.80" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)]} (id 2068) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,189 Î¼s, 0.02%)</title><rect x="972.9" y="69" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="975.90" y="79.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[Option[org.scalasteward.core.data.Resolver.Credentials] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)],Option[org.scalasteward.core.data.Resolver.Credentials]] :: List[org.scalasteward.core.data.Resolver.Header] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)],List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil] (expanded macros 0)  (3,923 Î¼s, 0.06%)</title><rect x="947.3" y="117" width="0.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="950.28" y="127.5" ></text>
</g>
<g >
<title>F[better.files.File] =&gt; ?{def void: ?} (expanded macros 0)  (1,204 Î¼s, 0.02%)</title><rect x="125.3" y="245" width="0.3" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="128.35" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;uuid&quot;)],String] :: shapeless.HNil] (id 3726) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (3,818 Î¼s, 0.06%)</title><rect x="517.4" y="197" width="0.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="520.41" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;raw&quot;)]} (id 3650) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (734 Î¼s, 0.01%)</title><rect x="506.3" y="181" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="509.35" y="191.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.repoconfig.VersionPattern]] (id 8486) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (17,262 Î¼s, 0.28%)</title><rect x="891.0" y="245" width="3.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="894.03" y="255.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.git.Branch] (expanded macros 0)   (572 Î¼s, 0.01%)</title><rect x="642.3" y="149" width="0.1" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="645.29" y="159.5" ></text>
</g>
<g >
<title>cats.Monad[F] (expanded macros 0)  (2,567 Î¼s, 0.04%)</title><rect x="244.4" y="245" width="0.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="247.36" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.forge.data.PullRequestNumber] (expanded macros 0)  (1,177 Î¼s, 0.02%)</title><rect x="728.4" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="731.39" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.RepoConfig]{type Repr = V} (expanded macros 3)   (2,535 Î¼s, 0.04%)</title><rect x="1051.5" y="197" width="0.5" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="1054.49" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Update.ForArtifactId]{type Repr = V} (id 2301) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (3,718 Î¼s, 0.06%)</title><rect x="804.2" y="197" width="0.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="807.17" y="207.5" ></text>
</g>
<g >
<title>F[(List[org.scalasteward.core.data.Scope[List[org.scalasteward.core.data.Dependency]]], Seq[org.scalasteward.core.data.Scope[List[org.scalasteward.core.data.Dependency]]])] =&gt; ?{def flatMap: ?} (expanded macros 0)  (1,423 Î¼s, 0.02%)</title><rect x="42.9" y="245" width="0.3" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="45.93" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;includeMatchedLabels&quot;)]} (id 7467) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,248 Î¼s, 0.02%)</title><rect x="1030.9" y="149" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1033.90" y="159.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;commits&quot;)]} (id 7844) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (838 Î¼s, 0.01%)</title><rect x="1047.2" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1050.19" y="207.5" ></text>
</g>
<g >
<title>req.uri.scheme.type =&gt; ?{def === : ?} (expanded macros 0)  (3,105 Î¼s, 0.05%)</title><rect x="411.4" y="245" width="0.6" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="414.40" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucket.Reviewer]{type Repr = V} (id 3720) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,372 Î¼s, 0.02%)</title><rect x="516.7" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="519.71" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[Vector[Int]]] (expanded macros 0)  (1,373 Î¼s, 0.02%)</title><rect x="581.6" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="584.57" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;closed&quot;)]} (id 4053) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (820 Î¼s, 0.01%)</title><rect x="850.3" y="117" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="853.27" y="127.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.Validate[Char,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less['a']]]{type R = RA} (expanded macros 0)  (8,186 Î¼s, 0.13%)</title><rect x="309.2" y="165" width="1.6" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="312.22" y="175.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitea.GiteaApiAlg.CommentResp]{type Out = K} (id 4786) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (2,203 Î¼s, 0.04%)</title><rect x="548.4" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="551.39" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)]} (id 2113) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,042 Î¼s, 0.02%)</title><rect x="981.6" y="133" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="984.56" y="143.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;parent&quot;)]} (id 4435) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,180 Î¼s, 0.02%)</title><rect x="756.0" y="149" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="759.00" y="159.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[org.scalasteward.core.data.GroupId]] (expanded macros 0)  (1,382 Î¼s, 0.02%)</title><rect x="1013.0" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1016.01" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;version&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;links&quot;)] :: shapeless.HNil,Int :: String :: org.scalasteward.core.forge.data.PullRequestState :: scala.collection.immutable.Map[String,cats.data.NonEmptyList[org.scalasteward.core.forge.bitbucketserver.Json.Link]] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (5,337 Î¼s, 0.09%)</title><rect x="726.4" y="181" width="1.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="729.42" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;newVersion&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;rewriteRules&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;doc&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;scalacOptions&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;authors&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;target&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;executionOrder&quot;)] :: shapeless.HNil,org.scalasteward.core.data.Version :: cats.data.NonEmptyList[String] :: Option[String] :: Option[cats.data.NonEmptyList[String]] :: Option[cats.data.NonEmptyList[org.scalasteward.core.git.Author]] :: Option[org.scalasteward.core.edit.scalafix.ScalafixMigration.Target] :: Option[org.scalasteward.core.edit.scalafix.ScalafixMigration.ExecutionOrder] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (15,009 Î¼s, 0.24%)</title><rect x="697.0" y="165" width="2.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="700.02" y="175.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.data.CrossDependency] (expanded macros 0)   (891 Î¼s, 0.01%)</title><rect x="812.4" y="165" width="0.2" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="815.44" y="175.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;grouping&quot;)]} (id 7453) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,400 Î¼s, 0.02%)</title><rect x="1027.1" y="165" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1030.05" y="175.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.gitlab.ForkPayload]{type Repr = R} (expanded macros 0)  (8,778 Î¼s, 0.14%)</title><rect x="877.0" y="213" width="1.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="879.98" y="223.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.data.Scope[A]]{type Repr = R} (expanded macros 0)  (39,260 Î¼s, 0.64%)</title><rect x="493.7" y="213" width="7.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="496.65" y="223.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.edit.scalafix.ScalafixMigrations]{type Out = K} (id 2846) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (985 Î¼s, 0.02%)</title><rect x="1151.2" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1154.16" y="207.5" ></text>
</g>
<g >
<title>cats.FlatMap[Option] (expanded macros 0)  (1,263 Î¼s, 0.02%)</title><rect x="229.3" y="245" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="232.28" y="255.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.repocache.RepoCache]{type Repr = R} (expanded macros 0)  (14,251 Î¼s, 0.23%)</title><rect x="651.0" y="213" width="2.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="653.98" y="223.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucket.CommentContent]{type Repr = V} (expanded macros 3)   (1,388 Î¼s, 0.02%)</title><rect x="505.7" y="197" width="0.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="508.75" y="207.5" ></text>
</g>
<g >
<title>A with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;value&quot;)],A] :: List[org.scalasteward.core.data.Resolver] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;resolvers&quot;)],List[org.scalasteward.core.data.Resolver]] :: shapeless.HNil &lt;:&lt; (A :: List[org.scalasteward.core.data.Resolver] :: shapeless.HNil) (expanded macros 0)  (671 Î¼s, 0.01%)</title><rect x="494.5" y="197" width="0.1" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="497.46" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;changes&quot;)] :: shapeless.HNil,List[org.scalasteward.core.update.artifact.ArtifactChange] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (1,197 Î¼s, 0.02%)</title><rect x="1171.6" y="197" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1174.55" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.gitlab.CommitId]] (id 5515) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (13,751 Î¼s, 0.22%)</title><rect x="787.8" y="245" width="2.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="790.80" y="255.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.data.Resolver.Credentials]{type Repr = R} (expanded macros 0)  (13,388 Î¼s, 0.22%)</title><rect x="482.6" y="213" width="2.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="485.64" y="223.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.decoding.ConfiguredDecoder[org.scalasteward.core.data.Resolver.MavenRepository]] (id 1695) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (109,199 Î¼s, 1.77%)</title><rect x="948.0" y="181" width="20.9" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="951.03" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = 'a'} (id 5995) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (824 Î¼s, 0.01%)</title><rect x="310.2" y="117" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="313.21" y="127.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)]} (id 1707) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,312 Î¼s, 0.02%)</title><rect x="956.6" y="69" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="959.63" y="79.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;includeMatchedLabels&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;customLabels&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (5,160 Î¼s, 0.08%)</title><rect x="1038.5" y="181" width="0.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1041.45" y="191.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.data.ArtifactId]] (id 1381) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (40,574 Î¼s, 0.66%)</title><rect x="448.8" y="245" width="7.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="451.75" y="255.5" ></text>
</g>
<g >
<title>F[Vector[Int]] =&gt; ?{def map: ?} (expanded macros 0)  (1,742 Î¼s, 0.03%)</title><rect x="117.7" y="245" width="0.4" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="120.73" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;href&quot;)]} (id 4025) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (840 Î¼s, 0.01%)</title><rect x="721.4" y="181" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="724.44" y="191.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[org.scalasteward.core.data.GroupId] (expanded macros 0)  (904 Î¼s, 0.01%)</title><rect x="329.4" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="332.37" y="239.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.Validate[Int,eu.timepit.refined.numeric.Less[N]]{type R = R} (expanded macros 0)  (2,286 Î¼s, 0.04%)</title><rect x="315.4" y="213" width="0.4" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="318.41" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: None.type :: None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (4,340 Î¼s, 0.07%)</title><rect x="1067.0" y="117" width="0.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1069.99" y="127.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord[org.scalasteward.core.repoconfig.UpdatesConfig]{type Out = D} (expanded macros 0)  (13,482 Î¼s, 0.22%)</title><rect x="1084.4" y="213" width="2.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1087.44" y="223.5" ></text>
</g>
<g >
<title>Option[org.http4s.Uri.Host] =&gt; ?{def === : ?} (expanded macros 0)  (3,524 Î¼s, 0.06%)</title><rect x="173.1" y="245" width="0.7" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="176.13" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.github.InstallationOut]{type Repr = V} (id 5306) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (874 Î¼s, 0.01%)</title><rect x="762.9" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="765.86" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;default_branch&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;parent&quot;)] :: shapeless.HNil,String :: Option[org.scalasteward.core.forge.gitea.GiteaApiAlg.Repository] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (6,376 Î¼s, 0.10%)</title><rect x="624.3" y="101" width="1.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="627.30" y="111.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.Update.Grouped] =&gt; ?{def widen: ?} (expanded macros 0)  (1,041 Î¼s, 0.02%)</title><rect x="360.8" y="245" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="363.82" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.PullRequestsConfig]{type Repr = V} (expanded macros 3)   (2,284 Î¼s, 0.04%)</title><rect x="1025.5" y="197" width="0.4" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="1028.48" y="207.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[org.http4s.Status] (expanded macros 0)  (889 Î¼s, 0.01%)</title><rect x="1180.8" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1183.83" y="239.5" ></text>
</g>
<g >
<title>List[org.scalasteward.core.buildtool.BuildRoot] =&gt; ?{def traverse: ?} (expanded macros 0)  (1,136 Î¼s, 0.02%)</title><rect x="170.1" y="245" width="0.2" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="173.10" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lub[Symbol with shapeless.tag.Tagged[String(&quot;scalafmt&quot;)],Symbol with shapeless.tag.Tagged[_ &gt;: String(&quot;dependencyOverrides&quot;) with String(&quot;reviewers&quot;) with String(&quot;assignees&quot;) with String(&quot;buildRoots&quot;) with String(&quot;updatePullRequests&quot;) with String(&quot;postUpdateHooks&quot;) with String(&quot;updates&quot;) &lt;: String],Lub0] (expanded macros 0)  (1,156 Î¼s, 0.02%)</title><rect x="1068.9" y="165" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1071.93" y="175.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.forge.data.BranchOut] =&gt; ?{def map: ?} (expanded macros 0)  (1,303 Î¼s, 0.02%)</title><rect x="134.6" y="245" width="0.3" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="137.64" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[cats.data.NonEmptyList[org.scalasteward.core.data.Dependency]] (expanded macros 0)  (4,003 Î¼s, 0.06%)</title><rect x="1120.8" y="213" width="0.8" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1123.84" y="223.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.PostUpdateHookConfig]{type Out = K} (id 7186) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (979 Î¼s, 0.02%)</title><rect x="1009.8" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1012.78" y="207.5" ></text>
</g>
<g >
<title>ScalafixMigration.this.rewriteRules.type =&gt; ?{def mkString_: ?} (expanded macros 0)   (1,816 Î¼s, 0.03%)</title><rect x="178.3" y="245" width="0.3" height="15.0" fill="rgb(248,120,120)" rx="2" ry="2" />
<text  x="181.26" y="255.5" ></text>
</g>
<g >
<title>F[((List[org.scalasteward.core.update.data.UpdateState], List[org.scalasteward.core.data.Update.ForArtifactId]), (List[org.scalasteward.core.update.data.UpdateState], List[org.scalasteward.core.data.Update.ForArtifactId]))] =&gt; ?{def flatMap: ?} (expanded macros 0)  (721 Î¼s, 0.01%)</title><rect x="40.2" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="43.22" y="255.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.Validate[String,eu.timepit.refined.collection.Forall[eu.timepit.refined.boolean.Or[eu.timepit.refined.char.Digit,eu.timepit.refined.boolean.And[eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less['a']],eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Greater['f']]]]]]{type R = RA} (expanded macros 0)  (9,117 Î¼s, 0.15%)</title><rect x="354.5" y="213" width="1.8" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="357.53" y="223.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.ReprDecoder[Long with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)],Long] :: shapeless.HNil] (id 5312) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveDecoder`)  (1,817 Î¼s, 0.03%)</title><rect x="763.4" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="766.37" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.forge.bitbucketserver.Json.Ref] (expanded macros 0)  (14,744 Î¼s, 0.24%)</title><rect x="854.1" y="229" width="2.8" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="857.07" y="239.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.data.BranchOut]{type Out = K} (id 4267) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,128 Î¼s, 0.02%)</title><rect x="736.9" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="739.87" y="207.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[Some[org.scalasteward.core.repoconfig.ScalafmtConfig] :: Some[org.scalasteward.core.repoconfig.UpdatesConfig] :: Some[Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]]] :: Some[Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy]] :: Some[Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]]] :: Some[List[String]] :: Some[List[String]] :: Some[List[org.scalasteward.core.repoconfig.GroupRepoConfig]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;scalafmt&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil]{type Out = OutT} (expanded macros 0)  (5,354 Î¼s, 0.09%)</title><rect x="1048.2" y="165" width="1.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1051.20" y="175.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.codec.UnwrappedCodec[org.scalasteward.core.forge.data.PullRequestNumber] (expanded macros 0)  (4,235 Î¼s, 0.07%)</title><rect x="1146.7" y="229" width="0.8" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1149.68" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;newerArtifactId&quot;)] :: shapeless.HNil,Option[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (4,131 Î¼s, 0.07%)</title><rect x="672.1" y="149" width="0.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="675.08" y="159.5" ></text>
</g>
<g >
<title>io.circe.Decoder[String] (expanded macros 0)  (1,187 Î¼s, 0.02%)</title><rect x="445.0" y="165" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="447.99" y="175.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.data.BranchOut]{type Out = K} (id 5540) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (957 Î¼s, 0.02%)</title><rect x="740.2" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="743.16" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)]} (id 4105) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (607 Î¼s, 0.01%)</title><rect x="726.8" y="149" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="729.76" y="159.5" ></text>
</g>
<g >
<title>Char('0') =&gt; ?{def to: ?} (expanded macros 0)  (8,051 Î¼s, 0.13%)</title><rect x="30.4" y="245" width="1.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="33.38" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)]} (id 4830) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,482 Î¼s, 0.02%)</title><rect x="567.0" y="181" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="569.99" y="191.5" ></text>
</g>
<g >
<title>F[Long] =&gt; ?{def map: ?} (expanded macros 0)  (2,829 Î¼s, 0.05%)</title><rect x="77.5" y="245" width="0.6" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="80.54" y="255.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.data.Update] (expanded macros 0)   (558 Î¼s, 0.01%)</title><rect x="644.6" y="165" width="0.1" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="647.55" y="175.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.data.Resolver] (expanded macros 0)   (1,607 Î¼s, 0.03%)</title><rect x="360.4" y="229" width="0.3" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="363.44" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;location&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,String :: String :: Option[org.scalasteward.core.data.Resolver.Credentials] :: List[org.scalasteward.core.data.Resolver.Header] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (7,159 Î¼s, 0.12%)</title><rect x="989.5" y="133" width="1.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="992.50" y="143.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;addToGitBlameIgnoreRevs&quot;)]} (id 7196) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (645 Î¼s, 0.01%)</title><rect x="1011.4" y="117" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1014.38" y="127.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.Validate[String,eu.timepit.refined.collection.Size[eu.timepit.refined.generic.Equal[40]]]{type R = RB} (expanded macros 0)  (4,371 Î¼s, 0.07%)</title><rect x="310.9" y="213" width="0.8" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="313.86" y="223.5" ></text>
</g>
<g >
<title>F[Unit] =&gt; ?{def voidError: ?} (expanded macros 0)  (1,614 Î¼s, 0.03%)</title><rect x="117.4" y="245" width="0.3" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="120.42" y="255.5" ></text>
</g>
<g >
<title>((com.monovore.decline.Opts[List[String]], com.monovore.decline.Opts[List[String]], com.monovore.decline.Opts[Boolean])) =&gt; ?{def mapN: ?} (expanded macros 0)  (1,532 Î¼s, 0.02%)</title><rect x="16.7" y="245" width="0.3" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="19.74" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[String] (expanded macros 0)  (563 Î¼s, 0.01%)</title><rect x="993.0" y="117" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="996.03" y="127.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[List[String]]] (expanded macros 0)  (1,254 Î¼s, 0.02%)</title><rect x="1100.2" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1103.17" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;allow&quot;)]} (id 8343) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,169 Î¼s, 0.02%)</title><rect x="1106.7" y="181" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1109.71" y="191.5" ></text>
</g>
<g >
<title>F[Process] =&gt; ?{def flatMap: ?} (expanded macros 0)  (838 Î¼s, 0.01%)</title><rect x="88.4" y="245" width="0.2" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="91.44" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.ReprAsObjectEncoder[org.scalasteward.core.forge.data.PullRequestState with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)],org.scalasteward.core.forge.data.PullRequestState] :: shapeless.HNil] (id 4476) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveEncoder`)  (3,362 Î¼s, 0.05%)</title><rect x="862.2" y="197" width="0.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="865.23" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.gitea.GiteaApiAlg.EditPullRequestOption] (expanded macros 0)  (18,076 Î¼s, 0.29%)</title><rect x="583.8" y="229" width="3.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="586.82" y="239.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.ArtifactId]{type Repr = V} (expanded macros 3)   (5,516 Î¼s, 0.09%)</title><rect x="452.2" y="197" width="1.0" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="455.16" y="207.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[Option[org.http4s.Uri.Scheme]] (expanded macros 0)  (2,535 Î¼s, 0.04%)</title><rect x="411.5" y="229" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="414.51" y="239.5" ></text>
</g>
<g >
<title>io.circe.Decoder[String] (expanded macros 0)  (697 Î¼s, 0.01%)</title><rect x="718.2" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="721.24" y="191.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.github.GitHubAssignees]{type Out = K} (id 5257) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (740 Î¼s, 0.01%)</title><rect x="868.8" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="871.75" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.forge.data.PullRequestState] (expanded macros 0)  (1,617 Î¼s, 0.03%)</title><rect x="862.6" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="865.56" y="191.5" ></text>
</g>
<g >
<title>shapeless.Lub[Symbol with shapeless.tag.Tagged[String(&quot;location&quot;)],Symbol with shapeless.tag.Tagged[_ &gt;: String(&quot;headers&quot;) with String(&quot;credentials&quot;) &lt;: String],Lub0] (expanded macros 0)  (3,292 Î¼s, 0.05%)</title><rect x="965.1" y="117" width="0.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="968.06" y="127.5" ></text>
</g>
<g >
<title>shapeless.Default[org.scalasteward.core.data.Resolver.IvyRepository]{type Out = Options} (id 1875) (expanded macros 3) (tree from `shapeless.DefaultMacros.materialize`)  (1,965 Î¼s, 0.03%)</title><rect x="932.4" y="133" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="935.43" y="143.5" ></text>
</g>
<g >
<title>scala.reflect.ClassTag[java.util.regex.PatternSyntaxException] (expanded macros 1)  (7,875 Î¼s, 0.13%)</title><rect x="416.7" y="245" width="1.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="419.69" y="255.5" ></text>
</g>
<g >
<title>cats.Functor[F] (expanded macros 0)  (1,554 Î¼s, 0.03%)</title><rect x="65.9" y="229" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="68.93" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;parent&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;clone_url&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;default_branch&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;archived&quot;)] :: shapeless.HNil,Option[org.scalasteward.core.forge.data.RepoOut] :: org.http4s.Uri :: org.scalasteward.core.git.Branch :: Boolean :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (6,808 Î¼s, 0.11%)</title><rect x="755.9" y="165" width="1.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="758.88" y="175.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = 'a'} (id 5996) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (734 Î¼s, 0.01%)</title><rect x="310.4" y="117" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="313.37" y="127.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;user&quot;)]} (id 4215) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (716 Î¼s, 0.01%)</title><rect x="526.7" y="181" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="529.73" y="191.5" ></text>
</g>
<g >
<title>x$2.name.type =&gt; ?{def === : ?} (expanded macros 0)  (826 Î¼s, 0.01%)</title><rect x="1182.9" y="245" width="0.1" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="1185.85" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;head&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;labels&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;milestone&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: shapeless.HNil,Option[String] :: Option[Vector[Int]] :: Option[Int] :: Option[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (11,941 Î¼s, 0.19%)</title><rect x="577.2" y="117" width="2.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="580.20" y="127.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitea.GiteaApiAlg.CreatePullRequestOption]{type Out = K} (id 4720) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (2,907 Î¼s, 0.05%)</title><rect x="571.9" y="197" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="574.94" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.git.Sha1] (expanded macros 0)  (2,262 Î¼s, 0.04%)</title><rect x="746.2" y="181" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="749.17" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;artifactIdAfter&quot;)],String] :: shapeless.HNil] (expanded macros 0)  (1,020 Î¼s, 0.02%)</title><rect x="1167.4" y="165" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1170.37" y="175.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;newerGroupId&quot;)]} (id 2361) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,605 Î¼s, 0.03%)</title><rect x="671.8" y="149" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="674.78" y="159.5" ></text>
</g>
<g >
<title>cats.TraverseFilter[List] (expanded macros 0)  (967 Î¼s, 0.02%)</title><rect x="250.9" y="245" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="253.94" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.repoconfig.UpdatePattern] (expanded macros 0)  (1,064 Î¼s, 0.02%)</title><rect x="661.2" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="664.23" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucketserver.Json.Comment]{type Repr = V} (id 3976) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,234 Î¼s, 0.02%)</title><rect x="520.3" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="523.33" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (2,609 Î¼s, 0.04%)</title><rect x="1014.4" y="181" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1017.36" y="191.5" ></text>
</g>
<g >
<title>io.circe.Decoder[List[String]] (expanded macros 0)  (526 Î¼s, 0.01%)</title><rect x="1061.9" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1064.89" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;body&quot;)] :: shapeless.HNil,String :: shapeless.HNil]{type Out = R} (expanded macros 0)  (4,680 Î¼s, 0.08%)</title><rect x="561.6" y="197" width="0.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="564.56" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.decoding.ConfiguredDecoder[org.scalasteward.core.update.artifact.ArtifactChanges]] (id 8829) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (29,101 Î¼s, 0.47%)</title><rect x="1167.6" y="245" width="5.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1170.56" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;pattern&quot;)]} (id 1889) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,068 Î¼s, 0.02%)</title><rect x="947.1" y="117" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="950.07" y="127.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[Option[Boolean] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;addToGitBlameIgnoreRevs&quot;)],Option[Boolean]] :: shapeless.HNil] (expanded macros 0)  (1,231 Î¼s, 0.02%)</title><rect x="1017.4" y="149" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1020.39" y="159.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.util.RecordToMap[List[org.scalasteward.core.repoconfig.UpdatePattern] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;ignore&quot;)],List[org.scalasteward.core.repoconfig.UpdatePattern]] :: Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)],Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]]] :: Option[List[String]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)],Option[List[String]]] :: shapeless.HNil] (expanded macros 0)  (4,554 Î¼s, 0.07%)</title><rect x="1082.6" y="165" width="0.8" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1085.56" y="175.5" ></text>
</g>
<g >
<title>Array[String] =&gt; ?{def lastOption: ?} (expanded macros 0)  (1,050 Î¼s, 0.02%)</title><rect x="25.2" y="245" width="0.2" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="28.18" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: None.type :: None.type :: shapeless.HNil,List]{type Lub = Option[io.circe.generic.extras.JsonKey]} (expanded macros 0)  (6,404 Î¼s, 0.10%)</title><rect x="943.2" y="149" width="1.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="946.17" y="159.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.forge.data.PullRequestState] (expanded macros 0)   (562 Î¼s, 0.01%)</title><rect x="642.9" y="165" width="0.1" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="645.90" y="175.5" ></text>
</g>
<g >
<title>Int(0) =&gt; ?{def days: ?} (expanded macros 0)  (1,729 Î¼s, 0.03%)</title><rect x="153.1" y="245" width="0.4" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="156.14" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;allow&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;allowPreReleases&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;ignore&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)] :: shapeless.HNil,List[org.scalasteward.core.repoconfig.UpdatePattern] :: List[org.scalasteward.core.repoconfig.UpdatePattern] :: List[org.scalasteward.core.repoconfig.UpdatePattern] :: Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]] :: Option[List[String]] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (12,158 Î¼s, 0.20%)</title><rect x="1089.9" y="181" width="2.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1092.93" y="191.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.gitea.GiteaApiAlg.CreateForkOption]{type Repr = R} (expanded macros 0)  (17,508 Î¼s, 0.28%)</title><rect x="554.2" y="213" width="3.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="557.18" y="223.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.codec.ReprAsObjectCodec[Option[org.scalasteward.core.repoconfig.PullRequestFrequency] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;frequency&quot;)],Option[org.scalasteward.core.repoconfig.PullRequestFrequency]] :: List[org.scalasteward.core.repoconfig.PullRequestGroup] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;grouping&quot;)],List[org.scalasteward.core.repoconfig.PullRequestGroup]] :: Option[scala.util.matching.Regex] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;includeMatchedLabels&quot;)],Option[scala.util.matching.Regex]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;customLabels&quot;)],List[String]] :: shapeless.HNil]] (id 7471) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (19,721 Î¼s, 0.32%)</title><rect x="1031.8" y="213" width="3.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1034.76" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (3,282 Î¼s, 0.05%)</title><rect x="1067.2" y="101" width="0.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1070.19" y="111.5" ></text>
</g>
<g >
<title>io.circe.Encoder[List[org.scalasteward.core.repoconfig.BuildRootConfig]] (expanded macros 0)  (1,146 Î¼s, 0.02%)</title><rect x="1064.2" y="165" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1067.21" y="175.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;pattern&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,String :: Option[org.scalasteward.core.data.Resolver.Credentials] :: List[org.scalasteward.core.data.Resolver.Header] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (5,257 Î¼s, 0.09%)</title><rect x="975.1" y="117" width="1.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="978.08" y="127.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucketserver.Json.Project]{type Repr = V} (id 4141) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,181 Î¼s, 0.02%)</title><rect x="523.5" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="526.51" y="207.5" ></text>
</g>
<g >
<title>cats.kernel.Monoid[List[org.scalasteward.core.nurture.UpdateInfoUrl]] (expanded macros 0)  (1,608 Î¼s, 0.03%)</title><rect x="281.7" y="245" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="284.72" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.repoconfig.PullRequestsConfig] (expanded macros 0)  (823 Î¼s, 0.01%)</title><rect x="1065.1" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1068.09" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)]} (id 4685) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,360 Î¼s, 0.02%)</title><rect x="611.4" y="165" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="614.40" y="175.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;organization&quot;)] :: shapeless.HNil,Option[String] :: Option[String] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (7,175 Î¼s, 0.12%)</title><rect x="556.2" y="197" width="1.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="559.15" y="207.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.gitea.GiteaApiAlg.PullRequestResp]{type Repr = R} (expanded macros 0)  (31,293 Î¼s, 0.51%)</title><rect x="607.9" y="213" width="6.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="610.90" y="223.5" ></text>
</g>
<g >
<title>cats.Functor[F] (expanded macros 0)   (999 Î¼s, 0.02%)</title><rect x="413.0" y="229" width="0.2" height="15.0" fill="rgb(220,80,80)" rx="2" ry="2" />
<text  x="416.05" y="239.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;ignore&quot;)]} (id 8268) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,077 Î¼s, 0.02%)</title><rect x="1095.4" y="133" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1098.39" y="143.5" ></text>
</g>
<g >
<title>cats.Parallel[[_]F[_]] (expanded macros 0)  (1,653 Î¼s, 0.03%)</title><rect x="301.7" y="229" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="304.72" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;description&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;open&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;closed&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;fromRef&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;toRef&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;locked&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: shapeless.HNil,String :: String :: org.scalasteward.core.forge.data.PullRequestState :: Boolean :: Boolean :: org.scalasteward.core.forge.bitbucketserver.Json.Ref :: org.scalasteward.core.forge.bitbucketserver.Json.Ref :: Boolean :: List[org.scalasteward.core.forge.bitbucketserver.Json.Reviewer] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (15,831 Î¼s, 0.26%)</title><rect x="848.7" y="197" width="3.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="851.69" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;pullRequests&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;scalafmt&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil,org.scalasteward.core.repoconfig.PullRequestsConfig :: org.scalasteward.core.repoconfig.ScalafmtConfig :: org.scalasteward.core.repoconfig.UpdatesConfig :: Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]] :: Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy] :: Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]] :: List[String] :: List[String] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (11,599 Î¼s, 0.19%)</title><rect x="1057.8" y="181" width="2.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1060.78" y="191.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.data.DependencyInfo]] (id 1589) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (42,403 Î¼s, 0.69%)</title><rect x="456.5" y="245" width="8.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="459.51" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;text&quot;)]} (id 3979) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (956 Î¼s, 0.02%)</title><rect x="520.7" y="181" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="523.70" y="191.5" ></text>
</g>
<g >
<title>F[List[org.scalasteward.core.forge.github.RepositoriesOut]] =&gt; ?{def map: ?} (expanded macros 0)  (1,306 Î¼s, 0.02%)</title><rect x="75.8" y="245" width="0.3" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="78.84" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.gitea.GiteaApiAlg.AttachLabelReq] (expanded macros 0)  (22,686 Î¼s, 0.37%)</title><rect x="537.2" y="229" width="4.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="540.23" y="239.5" ></text>
</g>
<g >
<title>shapeless.Annotations[io.circe.generic.extras.JsonKey,org.scalasteward.core.repoconfig.PostUpdateHookConfig]{type Out = K} (id 7286) (expanded macros 3) (tree from `shapeless.AnnotationMacros.materializeVariableAnnotations`)  (989 Î¼s, 0.02%)</title><rect x="1005.7" y="213" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1008.70" y="223.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;commits&quot;)]} (id 7657) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (531 Î¼s, 0.01%)</title><rect x="1057.7" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1060.67" y="191.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[org.scalasteward.core.git.Sha1 with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)],org.scalasteward.core.git.Sha1] :: shapeless.HNil]] (id 4593) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (7,870 Î¼s, 0.13%)</title><rect x="604.6" y="213" width="1.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="607.63" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;artifactId&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;command&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;commitMessage&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;addToGitBlameIgnoreRevs&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (7,306 Î¼s, 0.12%)</title><rect x="1015.1" y="197" width="1.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1018.05" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.coproduct.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;IvyRepository&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;MavenRepository&quot;)] :: shapeless.HNil,org.scalasteward.core.data.Resolver.IvyRepository :+: org.scalasteward.core.data.Resolver.MavenRepository :+: shapeless.CNil]{type Out = R} (expanded macros 0)  (4,458 Î¼s, 0.07%)</title><rect x="923.3" y="197" width="0.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="926.30" y="207.5" ></text>
</g>
<g >
<title>eu.timepit.refined.internal.WitnessAs[40,Int] (expanded macros 0)  (2,302 Î¼s, 0.04%)</title><rect x="311.3" y="181" width="0.4" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="314.25" y="191.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.forge.gitlab.ForkPayload] (expanded macros 0)  (12,109 Î¼s, 0.20%)</title><rect x="876.9" y="229" width="2.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="879.89" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;pattern&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,String :: String :: Option[org.scalasteward.core.data.Resolver.Credentials] :: List[org.scalasteward.core.data.Resolver.Header] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (6,847 Î¼s, 0.11%)</title><rect x="971.9" y="133" width="1.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="974.88" y="143.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.forge.gitlab.ForkPayload]] (id 5393) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (16,403 Î¼s, 0.27%)</title><rect x="876.1" y="245" width="3.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="879.07" y="255.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[Some[List[org.scalasteward.core.repoconfig.UpdatePattern]] :: Some[List[org.scalasteward.core.repoconfig.UpdatePattern]] :: Some[Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]]] :: Some[Option[List[String]]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;allowPreReleases&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;ignore&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)] :: shapeless.HNil]{type Out = OutT} (expanded macros 0)  (5,164 Î¼s, 0.08%)</title><rect x="1085.3" y="165" width="1.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1088.31" y="175.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.forge.data.PullRequestState] (expanded macros 0)   (554 Î¼s, 0.01%)</title><rect x="644.8" y="165" width="0.1" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="647.84" y="175.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;full_name&quot;)],String] :: shapeless.HNil]] (id 5348) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (2,168 Î¼s, 0.04%)</title><rect x="785.1" y="213" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="788.09" y="223.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Update.ForArtifactId]{type Repr = V} (expanded macros 3)   (3,036 Î¼s, 0.05%)</title><rect x="668.9" y="197" width="0.6" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="671.88" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[String] (expanded macros 0)  (18,841 Î¼s, 0.31%)</title><rect x="348.5" y="245" width="3.6" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="351.51" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Update.ForArtifactId]{type Out = K} (id 2351) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (2,524 Î¼s, 0.04%)</title><rect x="667.9" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="670.90" y="207.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.coursier.DependencyMetadata] =&gt; ?{def flatMap: ?} (expanded macros 0)  (598 Î¼s, 0.01%)</title><rect x="129.4" y="245" width="0.1" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="132.37" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.github.RepositoriesOut]{type Out = K} (id 5319) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (623 Î¼s, 0.01%)</title><rect x="781.7" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="784.72" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucketserver.Json.NewPR]{type Repr = V} (id 4038) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (2,427 Î¼s, 0.04%)</title><rect x="848.2" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="851.23" y="207.5" ></text>
</g>
<g >
<title>h.type =&gt; ?{def show: ?} (expanded macros 0)  (523 Î¼s, 0.01%)</title><rect x="328.1" y="245" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="331.15" y="255.5" ></text>
</g>
<g >
<title>List[(org.scalasteward.core.data.Dependency, org.scalasteward.core.coursier.DependencyMetadata)] =&gt; ?{def mapFilter: ?} (expanded macros 0)  (832 Î¼s, 0.01%)</title><rect x="167.8" y="245" width="0.2" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="170.84" y="255.5" ></text>
</g>
<g >
<title>String =&gt; ?{def filterNot: ?} (expanded macros 0)  (570 Î¼s, 0.01%)</title><rect x="181.0" y="245" width="0.1" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="184.00" y="255.5" ></text>
</g>
<g >
<title>cats.Functor[F] (expanded macros 0)  (540 Î¼s, 0.01%)</title><rect x="79.8" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="82.77" y="239.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;frequency&quot;)]} (id 7454) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,163 Î¼s, 0.02%)</title><rect x="1026.6" y="181" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1029.62" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (8,122 Î¼s, 0.13%)</title><rect x="1070.6" y="117" width="1.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1073.60" y="127.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;newerArtifactId&quot;)]} (id 2307) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (2,243 Î¼s, 0.04%)</title><rect x="807.9" y="133" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="810.94" y="143.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;repositories&quot;)]} (id 5323) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (606 Î¼s, 0.01%)</title><rect x="782.5" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="785.47" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.DependencyInfo]{type Repr = V} (id 1595) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,922 Î¼s, 0.03%)</title><rect x="459.7" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="462.67" y="207.5" ></text>
</g>
<g >
<title>F[List[org.scalasteward.core.data.Scope[List[org.scalasteward.core.data.Dependency]]]] =&gt; ?{def map: ?} (expanded macros 0)  (2,080 Î¼s, 0.03%)</title><rect x="69.9" y="245" width="0.4" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="72.95" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.forge.github.CreatePullRequestPayload]] (id 4961) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (23,339 Î¼s, 0.38%)</title><rect x="862.9" y="245" width="4.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="865.87" y="255.5" ></text>
</g>
<g >
<title>cats.FlatMap[F] (expanded macros 0)  (739 Î¼s, 0.01%)</title><rect x="147.9" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="150.89" y="239.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitea.GiteaApiAlg.PRBranchInfo]{type Repr = V} (id 4636) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (2,038 Î¼s, 0.03%)</title><rect x="597.0" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="600.03" y="207.5" ></text>
</g>
<g >
<title>cats.Traverse[List] (expanded macros 0)  (615 Î¼s, 0.01%)</title><rect x="330.0" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="332.95" y="239.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.repoconfig.PostUpdateHookConfig]{type Repr = R} (expanded macros 0)   (14,190 Î¼s, 0.23%)</title><rect x="1007.0" y="213" width="2.7" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="1010.01" y="223.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.repoconfig.CommitsConfig]{type Repr = R} (expanded macros 0)  (623 Î¼s, 0.01%)</title><rect x="999.8" y="213" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1002.80" y="223.5" ></text>
</g>
<g >
<title>F[org.http4s.Request[F]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (1,091 Î¼s, 0.02%)</title><rect x="128.9" y="245" width="0.2" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="131.91" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.forge.github.RepositoriesOut] (expanded macros 0)  (1,818 Î¼s, 0.03%)</title><rect x="373.1" y="245" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="376.07" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)]} (id 4391) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (529 Î¼s, 0.01%)</title><rect x="750.0" y="165" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="752.96" y="175.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.GroupId] (expanded macros 0)  (978 Î¼s, 0.02%)</title><rect x="1162.1" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1165.11" y="191.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.bitbucketserver.Json.PR] (expanded macros 0)  (25,936 Î¼s, 0.42%)</title><rect x="724.2" y="229" width="5.0" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="727.25" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;location&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (14,472 Î¼s, 0.23%)</title><rect x="964.6" y="133" width="2.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="967.56" y="143.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;pattern&quot;)]} (id 1833) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (958 Î¼s, 0.02%)</title><rect x="935.6" y="101" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="938.61" y="111.5" ></text>
</g>
<g >
<title>com.monovore.decline.Argument[org.http4s.Uri] (expanded macros 0)  (2,481 Î¼s, 0.04%)</title><rect x="298.1" y="245" width="0.5" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="301.11" y="255.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.RefType[eu.timepit.refined.api.Refined] (expanded macros 0)  (1,073 Î¼s, 0.02%)</title><rect x="157.4" y="229" width="0.2" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="160.38" y="239.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.repoconfig.UpdatePattern]{type Repr = R} (expanded macros 0)  (9,420 Î¼s, 0.15%)</title><rect x="662.2" y="213" width="1.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="665.21" y="223.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.github.TokenOut]{type Repr = R} (expanded macros 0)  (5,953 Î¼s, 0.10%)</title><rect x="786.1" y="213" width="1.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="789.12" y="223.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[Option[org.scalasteward.core.repoconfig.VersionPattern]] (expanded macros 0)  (1,421 Î¼s, 0.02%)</title><rect x="273.6" y="245" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="276.57" y="255.5" ></text>
</g>
<g >
<title>((Nothing, Nothing, Nothing)) =&gt; String (expanded macros 0)   (2,851 Î¼s, 0.05%)</title><rect x="13.9" y="245" width="0.6" height="15.0" fill="rgb(241,111,111)" rx="2" ry="2" />
<text  x="16.92" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.ReprAsObjectEncoder[List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;labels&quot;)],List[String]] :: shapeless.HNil] (id 5293) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveEncoder`)  (4,012 Î¼s, 0.07%)</title><rect x="872.9" y="197" width="0.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="875.91" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.git.Sha1] (expanded macros 0)  (2,037 Î¼s, 0.03%)</title><rect x="600.8" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="603.75" y="191.5" ></text>
</g>
<g >
<title>cats.kernel.Order[Int] (expanded macros 0)  (613 Î¼s, 0.01%)</title><rect x="393.1" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="396.07" y="239.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.forge.github.GitHubLabels] (expanded macros 0)  (13,683 Î¼s, 0.22%)</title><rect x="871.1" y="229" width="2.6" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="874.06" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;sha1&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyInfos&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;maybeRepoConfig&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;maybeRepoConfigParsingError&quot;)] :: shapeless.HNil,org.scalasteward.core.git.Sha1 :: List[org.scalasteward.core.data.Scope[List[org.scalasteward.core.data.DependencyInfo]]] :: Option[org.scalasteward.core.repoconfig.RepoConfig] :: Option[String] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (7,159 Î¼s, 0.12%)</title><rect x="652.3" y="197" width="1.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="655.34" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.data.Comment]] (id 4295) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (16,220 Î¼s, 0.26%)</title><rect x="533.4" y="245" width="3.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="536.38" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[String] (expanded macros 0)  (533 Î¼s, 0.01%)</title><rect x="521.8" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="524.77" y="191.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.ReprDecoder[org.scalasteward.core.git.Sha1 with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)],org.scalasteward.core.git.Sha1] :: shapeless.HNil] (id 5527) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveDecoder`)  (3,041 Î¼s, 0.05%)</title><rect x="789.9" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="792.85" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.data.UserOut]{type Out = K} (id 4489) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (836 Î¼s, 0.01%)</title><rect x="760.0" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="763.03" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;open&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;closed&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;fromRef&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;toRef&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;locked&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: shapeless.HNil,Boolean :: Boolean :: org.scalasteward.core.forge.bitbucketserver.Json.Ref :: org.scalasteward.core.forge.bitbucketserver.Json.Ref :: Boolean :: List[org.scalasteward.core.forge.bitbucketserver.Json.Reviewer] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (9,705 Î¼s, 0.16%)</title><rect x="849.9" y="149" width="1.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="852.86" y="159.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;location&quot;)],String] :: Option[org.scalasteward.core.data.Resolver.Credentials] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)],Option[org.scalasteward.core.data.Resolver.Credentials]] :: List[org.scalasteward.core.data.Resolver.Header] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)],List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil]{type Out = F} (expanded macros 0)  (8,303 Î¼s, 0.13%)</title><rect x="967.3" y="149" width="1.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="970.33" y="159.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.PullRequestGroup]{type Repr = V} (expanded macros 3)   (1,035 Î¼s, 0.02%)</title><rect x="889.1" y="197" width="0.2" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="892.07" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitlab.ProjectId]{type Repr = V} (id 5454) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,051 Î¼s, 0.02%)</title><rect x="791.9" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="794.85" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;full_name&quot;)] :: shapeless.HNil,String :: shapeless.HNil]{type Out = R} (expanded macros 0)  (1,180 Î¼s, 0.02%)</title><rect x="784.9" y="197" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="787.86" y="207.5" ></text>
</g>
<g >
<title>cats.Functor[F] (expanded macros 0)  (2,318 Î¼s, 0.04%)</title><rect x="116.4" y="229" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="119.43" y="239.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)]} (id 4104) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (686 Î¼s, 0.01%)</title><rect x="727.0" y="133" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="729.97" y="143.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[Vector[Int]]] (expanded macros 0)  (1,382 Î¼s, 0.02%)</title><rect x="582.5" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="585.54" y="191.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.data.GroupId] (expanded macros 0)  (804 Î¼s, 0.01%)</title><rect x="665.6" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="668.61" y="191.5" ></text>
</g>
<g >
<title>p1.artifactId.type =&gt; ?{def === : ?} (expanded macros 0)  (979 Î¼s, 0.02%)</title><rect x="409.0" y="245" width="0.2" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="412.02" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.forge.github.CreatePullRequestPayload] (expanded macros 0)  (1,111 Î¼s, 0.02%)</title><rect x="386.1" y="245" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="389.07" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.bitbucketserver.Json.Repo] (expanded macros 0)  (13,970 Î¼s, 0.23%)</title><rect x="732.9" y="229" width="2.7" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="735.92" y="239.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.forge.github.GitHubAssignees]] (id 5252) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (15,981 Î¼s, 0.26%)</title><rect x="867.3" y="245" width="3.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="870.34" y="255.5" ></text>
</g>
<g >
<title>cats.Functor[[+A]cats.effect.kernel.Resource[F,A]] (expanded macros 0)  (1,839 Î¼s, 0.03%)</title><rect x="236.8" y="245" width="0.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="239.83" y="255.5" ></text>
</g>
<g >
<title>F[(List[org.scalasteward.core.edit.EditAttempt], List[org.scalasteward.core.git.Commit])] =&gt; ?{def flatMap: ?} (expanded macros 0)  (534 Î¼s, 0.01%)</title><rect x="43.2" y="245" width="0.1" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="46.20" y="255.5" ></text>
</g>
<g >
<title>F[Int] =&gt; ?{def flatMap: ?} (expanded macros 0)  (1,601 Î¼s, 0.03%)</title><rect x="58.1" y="245" width="0.3" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="61.06" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[Long with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)],Long] :: shapeless.HNil]] (id 5459) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (2,442 Î¼s, 0.04%)</title><rect x="792.4" y="213" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="795.40" y="223.5" ></text>
</g>
<g >
<title>io.circe.Decoder[String] (expanded macros 0)  (684 Î¼s, 0.01%)</title><rect x="486.3" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="489.28" y="191.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.data.Dependency] (expanded macros 0)  (2,279 Î¼s, 0.04%)</title><rect x="1121.8" y="197" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1124.79" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.Resolver.Header] (expanded macros 0)  (5,153 Î¼s, 0.08%)</title><rect x="343.8" y="213" width="1.0" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="346.82" y="223.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.github.UpdatePullRequestPayload]{type Repr = V} (expanded macros 3)   (1,192 Î¼s, 0.02%)</title><rect x="874.8" y="197" width="0.2" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="877.78" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;pattern&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,String :: Option[org.scalasteward.core.data.Resolver.Credentials] :: List[org.scalasteward.core.data.Resolver.Header] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (5,158 Î¼s, 0.08%)</title><rect x="972.2" y="117" width="1.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="975.21" y="127.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;owner&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;parent&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;clone_url&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;default_branch&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;archived&quot;)] :: shapeless.HNil,org.scalasteward.core.forge.data.UserOut :: Option[org.scalasteward.core.forge.data.RepoOut] :: org.http4s.Uri :: org.scalasteward.core.git.Branch :: Boolean :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (8,141 Î¼s, 0.13%)</title><rect x="755.6" y="181" width="1.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="758.63" y="191.5" ></text>
</g>
<g >
<title>F[coursier.core.Repository] =&gt; ?{def attempt: ?} (expanded macros 0)  (2,136 Î¼s, 0.03%)</title><rect x="126.3" y="245" width="0.4" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="129.29" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;labels&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;assignee_ids&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewer_ids&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;target_project_id&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;remove_source_branch&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;source_branch&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;target_branch&quot;)] :: shapeless.HNil,Option[List[String]] :: Option[List[Int]] :: Option[List[Int]] :: Long :: Option[Boolean] :: String :: org.scalasteward.core.git.Branch :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (11,599 Î¼s, 0.19%)</title><rect x="884.0" y="149" width="2.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="886.98" y="159.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.Validate[String,eu.timepit.refined.collection.Forall[eu.timepit.refined.boolean.Or[eu.timepit.refined.char.Digit,eu.timepit.refined.boolean.And[eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less['a']],eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Greater['f']]]]]]{type R = RA} (expanded macros 0)  (15,596 Î¼s, 0.25%)</title><rect x="307.9" y="213" width="3.0" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="310.87" y="223.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;owner&quot;)]} (id 4436) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (765 Î¼s, 0.01%)</title><rect x="755.7" y="165" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="758.74" y="175.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.update.artifact.ArtifactChanges] (expanded macros 0)  (1,113 Î¼s, 0.02%)</title><rect x="377.7" y="245" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="380.65" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)]} (id 1831) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,363 Î¼s, 0.02%)</title><rect x="936.2" y="69" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="939.23" y="79.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[org.scalasteward.core.git.Sha1 with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;baseSha1&quot;)],org.scalasteward.core.git.Sha1] :: org.scalasteward.core.data.Update with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;update&quot;)],org.scalasteward.core.data.Update] :: org.scalasteward.core.forge.data.PullRequestState with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)],org.scalasteward.core.forge.data.PullRequestState] :: org.scalasteward.core.util.Timestamp with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;entryCreatedAt&quot;)],org.scalasteward.core.util.Timestamp] :: Option[org.scalasteward.core.forge.data.PullRequestNumber] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;number&quot;)],Option[org.scalasteward.core.forge.data.PullRequestNumber]] :: Option[org.scalasteward.core.git.Branch] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;updateBranch&quot;)],Option[org.scalasteward.core.git.Branch]] :: shapeless.HNil] (id 6594) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (27,653 Î¼s, 0.45%)</title><rect x="640.4" y="197" width="5.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="643.36" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = shapeless._0} (expanded macros 0)  (805 Î¼s, 0.01%)</title><rect x="1099.4" y="101" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1102.37" y="111.5" ></text>
</g>
<g >
<title>cats.effect.kernel.Async[[_]F[_]] (expanded macros 0)  (1,840 Î¼s, 0.03%)</title><rect x="302.0" y="229" width="0.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="305.03" y="239.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;login&quot;)],String] :: Long with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)],Long] :: shapeless.HNil] (id 4534) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (5,536 Î¼s, 0.09%)</title><rect x="632.8" y="197" width="1.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="635.82" y="207.5" ></text>
</g>
<g >
<title>StewardAlg.this.logger.type =&gt; ?{def attemptError: ?} (expanded macros 0)  (612 Î¼s, 0.01%)</title><rect x="180.4" y="245" width="0.1" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="183.37" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;commit&quot;)] :: shapeless.HNil,org.scalasteward.core.forge.gitea.GiteaApiAlg.PayloadCommit :: shapeless.HNil]{type Out = R} (expanded macros 0)  (4,403 Î¼s, 0.07%)</title><rect x="544.5" y="197" width="0.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="547.53" y="207.5" ></text>
</g>
<g >
<title>String(&quot;X-Attempt&quot;) =&gt; ?{def -&gt; : ?} (expanded macros 0)  (2,092 Î¼s, 0.03%)</title><rect x="185.4" y="245" width="0.4" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="188.36" y="255.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.repoconfig.PostUpdateHookConfig]{type Repr = R} (expanded macros 0)  (1,148 Î¼s, 0.02%)</title><rect x="1006.8" y="213" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1009.79" y="223.5" ></text>
</g>
<g >
<title>F[Either[Throwable,List[String]]] =&gt; ?{def map: ?} (expanded macros 0)  (791 Î¼s, 0.01%)</title><rect x="55.9" y="245" width="0.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="58.92" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.gitlab.ProjectId]] (id 5448) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (12,749 Î¼s, 0.21%)</title><rect x="790.4" y="245" width="2.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="793.43" y="255.5" ></text>
</g>
<g >
<title>cats.Reducible[cats.data.NonEmptyList] (expanded macros 0)  (866 Î¼s, 0.01%)</title><rect x="327.6" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="330.62" y="239.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.decoding.ConfiguredDecoder[org.scalasteward.core.edit.scalafix.ScalafixMigrations] (expanded macros 0)  (32,451 Î¼s, 0.53%)</title><rect x="1149.5" y="229" width="6.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1152.48" y="239.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[org.scalasteward.core.data.Resolver.Credentials]] (expanded macros 0)  (2,438 Î¼s, 0.04%)</title><rect x="992.6" y="117" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="995.57" y="127.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;command&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;commitMessage&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;addToGitBlameIgnoreRevs&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (5,342 Î¼s, 0.09%)</title><rect x="1015.4" y="181" width="1.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1018.43" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[List[org.scalasteward.core.data.Resolver.Header] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)],List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil] (expanded macros 0)  (2,014 Î¼s, 0.03%)</title><rect x="997.6" y="101" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1000.63" y="111.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: shapeless.HNil,String :: shapeless.HNil]{type Out = R} (expanded macros 0)  (3,198 Î¼s, 0.05%)</title><rect x="531.0" y="197" width="0.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="533.97" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[org.scalasteward.core.data.GroupId]] (expanded macros 0)  (1,297 Î¼s, 0.02%)</title><rect x="1013.6" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1016.64" y="191.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.data.Update.ForGroupId]] (id 2434) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (34,242 Î¼s, 0.56%)</title><rect x="676.3" y="245" width="6.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="679.30" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[org.scalasteward.core.repoconfig.PullRequestFrequency]] (expanded macros 0)  (2,082 Î¼s, 0.03%)</title><rect x="1033.8" y="181" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1036.81" y="191.5" ></text>
</g>
<g >
<title>org.scalasteward.core.util.Details =&gt; ?{def some: ?} (expanded macros 0)  (941 Î¼s, 0.02%)</title><rect x="407.4" y="245" width="0.2" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="410.44" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.decoding.ConfiguredDecoder[org.scalasteward.core.data.Resolver.IvyRepository]] (id 1819) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (93,130 Î¼s, 1.51%)</title><rect x="930.2" y="181" width="17.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="933.21" y="191.5" ></text>
</g>
<g >
<title>shapeless.Default[org.scalasteward.core.repoconfig.UpdatesConfig]{type Out = Options} (id 8317) (expanded macros 3) (tree from `shapeless.DefaultMacros.materialize`)  (2,023 Î¼s, 0.03%)</title><rect x="1086.6" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1089.63" y="207.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.gitea.GiteaApiAlg.BranchResp]{type Repr = R} (expanded macros 0)  (14,745 Î¼s, 0.24%)</title><rect x="542.6" y="213" width="2.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="545.55" y="223.5" ></text>
</g>
<g >
<title>scopes.type =&gt; ?{def groupByNel: ?} (expanded macros 0)  (3,586 Î¼s, 0.06%)</title><rect x="419.9" y="245" width="0.7" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="422.90" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[org.scalasteward.core.repoconfig.PullRequestsConfig with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;pullRequests&quot;)],org.scalasteward.core.repoconfig.PullRequestsConfig] :: org.scalasteward.core.repoconfig.UpdatePattern with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;dependency&quot;)],org.scalasteward.core.repoconfig.UpdatePattern] :: shapeless.HNil]] (id 7118) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (7,374 Î¼s, 0.12%)</title><rect x="660.1" y="213" width="1.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="663.06" y="223.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.github.CreatePullRequestPayload]{type Repr = V} (id 4967) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,395 Î¼s, 0.02%)</title><rect x="864.9" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="867.94" y="207.5" ></text>
</g>
<g >
<title>cats.FunctorFilter[cats.parse.Parser] (expanded macros 0)  (986 Î¼s, 0.02%)</title><rect x="295.6" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="298.56" y="239.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.data.BranchOut]{type Repr = V} (expanded macros 3)   (1,733 Î¼s, 0.03%)</title><rect x="737.1" y="197" width="0.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="740.09" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitea.GiteaApiAlg.CreateForkOption]{type Repr = V} (expanded macros 3)   (2,431 Î¼s, 0.04%)</title><rect x="555.3" y="197" width="0.5" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="558.30" y="207.5" ></text>
</g>
<g >
<title>(=&gt; (Nothing, Nothing, Nothing)) =&gt; String (expanded macros 0)   (614 Î¼s, 0.01%)</title><rect x="21.8" y="245" width="0.1" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text  x="24.80" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitlab.ProjectId]{type Out = K} (id 5451) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (914 Î¼s, 0.01%)</title><rect x="791.2" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="794.25" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.data.Version] (expanded macros 0)  (4,878 Î¼s, 0.08%)</title><rect x="446.3" y="165" width="0.9" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="449.27" y="175.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.git.Sha1] (expanded macros 0)  (1,394 Î¼s, 0.02%)</title><rect x="790.2" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="793.17" y="191.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.repoconfig.GroupRepoConfig]] (id 7105) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (18,163 Î¼s, 0.29%)</title><rect x="658.0" y="245" width="3.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="661.00" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,Option[org.scalasteward.core.data.Resolver.Credentials] :: List[org.scalasteward.core.data.Resolver.Header] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (3,977 Î¼s, 0.06%)</title><rect x="987.0" y="101" width="0.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="990.00" y="111.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.Validate[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]] (expanded macros 0)  (3,921 Î¼s, 0.06%)</title><rect x="311.7" y="245" width="0.7" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="314.69" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.encoding.ConfiguredAsObjectEncoder[org.scalasteward.core.data.Resolver.MavenRepository] (expanded macros 0)  (76,703 Î¼s, 1.24%)</title><rect x="983.3" y="165" width="14.7" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="986.34" y="175.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (966 Î¼s, 0.02%)</title><rect x="688.6" y="149" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="691.63" y="159.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.CrossDependency] (expanded macros 0)  (3,804 Î¼s, 0.06%)</title><rect x="352.7" y="229" width="0.7" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="355.68" y="239.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[Some[org.scalasteward.core.repoconfig.PullRequestsConfig] :: Some[org.scalasteward.core.repoconfig.ScalafmtConfig] :: Some[org.scalasteward.core.repoconfig.UpdatesConfig] :: Some[Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]]] :: Some[Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy]] :: Some[Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]]] :: Some[List[String]] :: Some[List[String]] :: Some[List[org.scalasteward.core.repoconfig.GroupRepoConfig]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;pullRequests&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;scalafmt&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil]{type Out = OutT} (expanded macros 0)  (6,070 Î¼s, 0.10%)</title><rect x="1048.1" y="181" width="1.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1051.06" y="191.5" ></text>
</g>
<g >
<title>io.circe.Encoder[String] (expanded macros 0)  (602 Î¼s, 0.01%)</title><rect x="491.9" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="494.90" y="191.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.data.Update] (expanded macros 0)  (1,480 Î¼s, 0.02%)</title><rect x="644.4" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="647.39" y="191.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[org.scalasteward.core.forge.data.RepoOut]] (expanded macros 0)  (2,217 Î¼s, 0.04%)</title><rect x="347.8" y="245" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="350.78" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[org.scalasteward.core.forge.gitea.GiteaApiAlg.Repository]] (expanded macros 0)  (974 Î¼s, 0.02%)</title><rect x="627.9" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="630.89" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;displayId&quot;)]} (id 3933) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (654 Î¼s, 0.01%)</title><rect x="706.4" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="709.40" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucketserver.Json.PR]{type Repr = V} (expanded macros 3)   (2,158 Î¼s, 0.03%)</title><rect x="725.3" y="197" width="0.4" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="728.29" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[String] (expanded macros 0)  (859 Î¼s, 0.01%)</title><rect x="447.6" y="165" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="450.62" y="175.5" ></text>
</g>
<g >
<title>cats.kernel.Order[(org.scalasteward.core.data.GroupId, String, org.scalasteward.core.data.Version)] (expanded macros 0)  (980 Î¼s, 0.02%)</title><rect x="287.3" y="245" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="290.32" y="255.5" ></text>
</g>
<g >
<title>shapeless.Annotations[io.circe.generic.extras.JsonKey,org.scalasteward.core.repoconfig.CommitsConfig]{type Out = K} (id 7100) (expanded macros 3) (tree from `shapeless.AnnotationMacros.materializeVariableAnnotations`)  (626 Î¼s, 0.01%)</title><rect x="999.2" y="213" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1002.22" y="223.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)]} (id 4273) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (667 Î¼s, 0.01%)</title><rect x="737.8" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="740.80" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;commitMessage&quot;)],String] :: Option[Boolean] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;addToGitBlameIgnoreRevs&quot;)],Option[Boolean]] :: shapeless.HNil] (expanded macros 0)  (2,235 Î¼s, 0.04%)</title><rect x="1017.2" y="165" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1020.20" y="175.5" ></text>
</g>
<g >
<title>F[Int] =&gt; ?{def map: ?} (expanded macros 0)  (1,107 Î¼s, 0.02%)</title><rect x="58.4" y="245" width="0.2" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="61.37" y="255.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.repoconfig.VersionPattern]{type Repr = R} (expanded macros 0)  (11,049 Î¼s, 0.18%)</title><rect x="891.7" y="213" width="2.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="894.67" y="223.5" ></text>
</g>
<g >
<title>cats.kernel.Order[cats.data.NonEmptyList[org.scalasteward.core.data.CrossDependency]] (expanded macros 0)  (1,183 Î¼s, 0.02%)</title><rect x="286.9" y="229" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="289.94" y="239.5" ></text>
</g>
<g >
<title>shapeless.Annotations[io.circe.generic.extras.JsonKey,org.scalasteward.core.repoconfig.UpdatesConfig]{type Out = K} (id 8382) (expanded macros 3) (tree from `shapeless.AnnotationMacros.materializeVariableAnnotations`)  (1,707 Î¼s, 0.03%)</title><rect x="1084.1" y="213" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1087.11" y="223.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.nurture.PullRequestRepository.Entry] (expanded macros 0)  (54,709 Î¼s, 0.89%)</title><rect x="635.2" y="229" width="10.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="638.18" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;key&quot;)] :: shapeless.HNil,String :: shapeless.HNil]{type Out = R} (expanded macros 0)  (1,730 Î¼s, 0.03%)</title><rect x="523.7" y="197" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="526.74" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[List[org.scalasteward.core.forge.bitbucket.Reviewer] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;values&quot;)],List[org.scalasteward.core.forge.bitbucket.Reviewer]] :: shapeless.HNil] (id 3693) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (7,126 Î¼s, 0.12%)</title><rect x="513.6" y="197" width="1.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="516.58" y="207.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.data.RepoOut]{type Repr = R} (expanded macros 0)  (18,915 Î¼s, 0.31%)</title><rect x="753.6" y="213" width="3.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="756.57" y="223.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.gitea.GiteaApiAlg.EditPullRequestOption]] (id 4702) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (21,995 Î¼s, 0.36%)</title><rect x="583.1" y="245" width="4.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="586.07" y="255.5" ></text>
</g>
<g >
<title>cats.kernel.Semigroup[Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]]] (expanded macros 0)  (982 Î¼s, 0.02%)</title><rect x="1189.3" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1192.30" y="239.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.Validate[String,eu.timepit.refined.collection.Size[eu.timepit.refined.generic.Equal[40]]]{type R = RB} (expanded macros 0)  (3,567 Î¼s, 0.06%)</title><rect x="356.3" y="213" width="0.7" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="359.27" y="223.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.ReprAsObjectEncoder[cats.data.NonEmptyList[org.scalasteward.core.data.Update.ForArtifactId] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;forArtifactIds&quot;)],cats.data.NonEmptyList[org.scalasteward.core.data.Update.ForArtifactId]] :: shapeless.HNil]] (id 2409) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (5,499 Î¼s, 0.09%)</title><rect x="819.5" y="213" width="1.0" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="822.49" y="223.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.repocache.RefreshErrorAlg.Entry]{type Repr = R} (expanded macros 0)  (8,679 Î¼s, 0.14%)</title><rect x="646.4" y="213" width="1.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="649.42" y="223.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucketserver.Json.PR]{type Out = K} (id 4093) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,608 Î¼s, 0.03%)</title><rect x="724.7" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="727.71" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)]} (id 1832) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (977 Î¼s, 0.02%)</title><rect x="935.9" y="85" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="938.92" y="95.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;links&quot;)] :: shapeless.HNil,scala.collection.immutable.Map[String,cats.data.NonEmptyList[org.scalasteward.core.forge.bitbucketserver.Json.Link]] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,403 Î¼s, 0.02%)</title><rect x="734.5" y="181" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="737.47" y="191.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[org.scalasteward.core.edit.scalafix.ScalafixMigration.Target]] (expanded macros 0)  (1,867 Î¼s, 0.03%)</title><rect x="702.6" y="181" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="705.63" y="191.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.update.artifact.ArtifactMigrationsFinder] =&gt; ?{def map: ?} (expanded macros 0)  (4,468 Î¼s, 0.07%)</title><rect x="146.4" y="245" width="0.9" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="149.43" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.data.RepoOut]{type Out = K} (id 4421) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,792 Î¼s, 0.03%)</title><rect x="753.9" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="756.90" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;allowPreReleases&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;ignore&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (11,285 Î¼s, 0.18%)</title><rect x="1103.8" y="181" width="2.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1106.82" y="191.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.data.RepoOut]] (id 4418) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (36,569 Î¼s, 0.59%)</title><rect x="752.1" y="245" width="6.9" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="755.05" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil,Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]] :: Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy] :: Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]] :: List[String] :: List[String] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (7,832 Î¼s, 0.13%)</title><rect x="1058.5" y="133" width="1.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1061.50" y="143.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.data.PullRequestOut]{type Repr = R} (expanded macros 0)  (14,154 Î¼s, 0.23%)</title><rect x="747.8" y="213" width="2.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="750.85" y="223.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repocache.RepoCache]{type Out = K} (id 6848) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,249 Î¼s, 0.02%)</title><rect x="651.5" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="654.49" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;groupId&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;artifactIds&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;newVersion&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;rewriteRules&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;doc&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;scalacOptions&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;authors&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;target&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;executionOrder&quot;)] :: shapeless.HNil,org.scalasteward.core.data.GroupId :: cats.data.NonEmptyList[String] :: org.scalasteward.core.data.Version :: cats.data.NonEmptyList[String] :: Option[String] :: Option[cats.data.NonEmptyList[String]] :: Option[cats.data.NonEmptyList[org.scalasteward.core.git.Author]] :: Option[org.scalasteward.core.edit.scalafix.ScalafixMigration.Target] :: Option[org.scalasteward.core.edit.scalafix.ScalafixMigration.ExecutionOrder] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (20,331 Î¼s, 0.33%)</title><rect x="696.0" y="197" width="3.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="699.00" y="207.5" ></text>
</g>
<g >
<title>Option[String] =&gt; Iterable[String] (expanded macros 0)  (542 Î¼s, 0.01%)</title><rect x="173.0" y="245" width="0.1" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="175.99" y="255.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.data.Update.ForGroupId]{type Repr = R} (expanded macros 0)  (20,645 Î¼s, 0.33%)</title><rect x="677.5" y="213" width="4.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="680.54" y="223.5" ></text>
</g>
<g >
<title>String =&gt; ?{def r: ?} (expanded macros 0)  (1,322 Î¼s, 0.02%)</title><rect x="181.4" y="245" width="0.3" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="184.45" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucketserver.Json.Condition]{type Repr = V} (expanded macros 3)   (1,997 Î¼s, 0.03%)</title><rect x="713.0" y="197" width="0.4" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="715.98" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;labels&quot;)] :: shapeless.HNil,List[String] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (2,021 Î¼s, 0.03%)</title><rect x="872.4" y="197" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="875.40" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;customLabels&quot;)],List[String]] :: shapeless.HNil] (expanded macros 0)  (2,220 Î¼s, 0.04%)</title><rect x="1040.7" y="165" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1043.71" y="175.5" ></text>
</g>
<g >
<title>cats.Foldable[List] (expanded macros 0)  (4,679 Î¼s, 0.08%)</title><rect x="229.5" y="245" width="0.9" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="232.54" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.forge.bitbucketserver.Json.NewPR] (expanded macros 0)  (38,423 Î¼s, 0.62%)</title><rect x="846.1" y="229" width="7.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="849.07" y="239.5" ></text>
</g>
<g >
<title>cats.effect.kernel.GenConcurrent[F,Throwable] (expanded macros 0)  (1,655 Î¼s, 0.03%)</title><rect x="266.2" y="245" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="269.17" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[org.scalasteward.core.forge.gitea.GiteaApiAlg.Repository]] (expanded macros 0)  (986 Î¼s, 0.02%)</title><rect x="627.4" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="630.41" y="191.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.data.GroupId] (expanded macros 0)  (3,633 Î¼s, 0.06%)</title><rect x="810.6" y="165" width="0.7" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="813.58" y="175.5" ></text>
</g>
<g >
<title>io.circe.Encoder[String] (expanded macros 0)  (1,065 Î¼s, 0.02%)</title><rect x="830.7" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="833.69" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)]} (id 8351) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,077 Î¼s, 0.02%)</title><rect x="1108.2" y="117" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1111.15" y="127.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;pattern&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,String :: String :: Option[org.scalasteward.core.data.Resolver.Credentials] :: List[org.scalasteward.core.data.Resolver.Header] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (7,347 Î¼s, 0.12%)</title><rect x="935.1" y="133" width="1.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="938.15" y="143.5" ></text>
</g>
<g >
<title>cats.kernel.Order[List[org.scalasteward.core.data.Resolver]] (expanded macros 0)  (3,343 Î¼s, 0.05%)</title><rect x="288.9" y="245" width="0.7" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="291.94" y="255.5" ></text>
</g>
<g >
<title>fs2.Stream[[_]F[_],String] =&gt; ?{def mapFilter: ?} (expanded macros 0)  (3,422 Î¼s, 0.06%)</title><rect x="323.2" y="245" width="0.6" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="326.15" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Update.Grouped]{type Repr = V} (expanded macros 3)   (3,435 Î¼s, 0.06%)</title><rect x="823.5" y="197" width="0.6" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="826.48" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitea.GiteaApiAlg.CreateLabelReq]{type Repr = V} (expanded macros 3)   (2,643 Î¼s, 0.04%)</title><rect x="565.6" y="197" width="0.5" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="568.64" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Resolver.IvyRepository]{type Out = K} (id 2059) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,773 Î¼s, 0.03%)</title><rect x="970.3" y="133" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="973.29" y="143.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.gitea.GiteaApiAlg.CommentResp] (expanded macros 0)  (30,342 Î¼s, 0.49%)</title><rect x="547.2" y="229" width="5.8" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="550.24" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,027 Î¼s, 0.02%)</title><rect x="672.7" y="133" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="675.68" y="143.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;pattern&quot;)]} (id 2070) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (895 Î¼s, 0.01%)</title><rect x="972.3" y="101" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="975.33" y="111.5" ></text>
</g>
<g >
<title>cats.Functor[F] (expanded macros 0)  (671 Î¼s, 0.01%)</title><rect x="137.9" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="140.85" y="239.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitlab.CommitId]{type Out = K} (id 5518) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (886 Î¼s, 0.01%)</title><rect x="788.7" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="791.69" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.gitea.GiteaApiAlg.Label] (expanded macros 0)  (30,728 Î¼s, 0.50%)</title><rect x="588.2" y="229" width="5.9" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="591.21" y="239.5" ></text>
</g>
<g >
<title>cats.Foldable[cats.data.NonEmptyList] (expanded macros 0)  (1,783 Î¼s, 0.03%)</title><rect x="230.6" y="245" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="233.60" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[List[org.scalasteward.core.forge.github.InstallationOut]] (expanded macros 0)  (2,787 Î¼s, 0.05%)</title><rect x="333.8" y="245" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="336.80" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;customLabels&quot;)]} (id 7536) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,048 Î¼s, 0.02%)</title><rect x="1020.6" y="149" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1023.55" y="159.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (4,435 Î¼s, 0.07%)</title><rect x="995.6" y="117" width="0.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="998.65" y="127.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;description&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;labels&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;assignee_ids&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewer_ids&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;target_project_id&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;remove_source_branch&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;source_branch&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;target_branch&quot;)] :: shapeless.HNil,String :: String :: String :: Option[List[String]] :: Option[List[Int]] :: Option[List[Int]] :: Long :: Option[Boolean] :: String :: org.scalasteward.core.git.Branch :: shapeless.HNil]{type Out = R} (expanded macros 0)  (16,655 Î¼s, 0.27%)</title><rect x="883.0" y="197" width="3.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="886.01" y="207.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.persistence.KeyValueStore[[_]F[_],org.scalasteward.core.data.Repo,Map[org.http4s.Uri,org.scalasteward.core.nurture.PullRequestRepository.Entry]]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (5,433 Î¼s, 0.09%)</title><rect x="144.8" y="245" width="1.1" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="147.82" y="255.5" ></text>
</g>
<g >
<title>List[org.scalasteward.core.data.Version.Component] =&gt; scala.collection.IterableOnce[B] (expanded macros 0)  (626 Î¼s, 0.01%)</title><rect x="170.7" y="245" width="0.1" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="173.68" y="255.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.github.GitHubLabels]{type Repr = R} (expanded macros 0)  (8,096 Î¼s, 0.13%)</title><rect x="871.2" y="213" width="1.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="874.24" y="223.5" ></text>
</g>
<g >
<title>cats.Bifoldable[Either] (expanded macros 0)  (1,073 Î¼s, 0.02%)</title><rect x="215.5" y="245" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="218.51" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.repoconfig.PullRequestGroup]] (id 7328) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (18,000 Î¼s, 0.29%)</title><rect x="792.9" y="245" width="3.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="795.87" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[Int]] (expanded macros 0)  (828 Î¼s, 0.01%)</title><rect x="581.2" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="584.17" y="191.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.edit.scalafix.ScalafixMigration]{type Out = K} (id 2763) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (2,576 Î¼s, 0.04%)</title><rect x="694.1" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="697.05" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.forge.azurerepos.ClosePullRequestPayload]] (id 3408) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (14,709 Î¼s, 0.24%)</title><rect x="830.9" y="245" width="2.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="833.90" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.update.artifact.ArtifactChange]{type Out = K} (id 8731) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (761 Î¼s, 0.01%)</title><rect x="1159.8" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1162.77" y="207.5" ></text>
</g>
<g >
<title>F[(better.files.File, List[(String, List[org.scalasteward.core.edit.update.data.Substring.Replacement])])] =&gt; ?{def flatMap: ?} (expanded macros 0)  (1,007 Î¼s, 0.02%)</title><rect x="48.0" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="50.96" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.gitea.GiteaApiAlg.CreatePullRequestOption] (expanded macros 0)  (62,096 Î¼s, 1.01%)</title><rect x="571.2" y="229" width="11.9" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="574.19" y="239.5" ></text>
</g>
<g >
<title>cats.effect.Ref.Make[F] (expanded macros 0)  (1,043 Î¼s, 0.02%)</title><rect x="257.9" y="245" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="260.88" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;location&quot;)]} (id 1709) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (949 Î¼s, 0.02%)</title><rect x="956.0" y="101" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="959.00" y="111.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)],Option[String]] :: cats.data.NonEmptyList[org.scalasteward.core.repoconfig.PullRequestUpdateFilter] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;filter&quot;)],cats.data.NonEmptyList[org.scalasteward.core.repoconfig.PullRequestUpdateFilter]] :: shapeless.HNil]] (id 7343) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (4,946 Î¼s, 0.08%)</title><rect x="795.4" y="213" width="0.9" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="798.37" y="223.5" ></text>
</g>
<g >
<title>x$1.groupId.type =&gt; ?{def === : ?} (expanded macros 0)  (2,017 Î¼s, 0.03%)</title><rect x="1179.8" y="245" width="0.4" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="1182.77" y="255.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.forge.gitea.GiteaApiAlg.BranchResp] =&gt; ?{def map: ?} (expanded macros 0)  (1,475 Î¼s, 0.02%)</title><rect x="136.8" y="245" width="0.3" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="139.82" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;customLabels&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (2,249 Î¼s, 0.04%)</title><rect x="1039.0" y="165" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1042.01" y="175.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.forge.azurerepos.ClosePullRequestPayload] (expanded macros 0)  (11,472 Î¼s, 0.19%)</title><rect x="831.5" y="229" width="2.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="834.52" y="239.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitea.GiteaApiAlg.PRBranchInfo]{type Out = K} (id 4635) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,884 Î¼s, 0.03%)</title><rect x="596.2" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="599.18" y="207.5" ></text>
</g>
<g >
<title>F[Option[scala.concurrent.duration.FiniteDuration]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (785 Î¼s, 0.01%)</title><rect x="88.1" y="245" width="0.1" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="91.08" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.github.GitHubLabels]{type Out = K} (id 5284) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (974 Î¼s, 0.02%)</title><rect x="871.5" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="874.46" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;sourceRefName&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;targetRefName&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;labels&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;description&quot;)] :: shapeless.HNil,String :: String :: String :: Option[List[String]] :: String :: shapeless.HNil]{type Out = R} (expanded macros 0)  (9,663 Î¼s, 0.16%)</title><rect x="840.9" y="197" width="1.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="843.95" y="207.5" ></text>
</g>
<g >
<title>F[(Vector[Int], org.scalasteward.core.forge.gitea.GiteaApiAlg.CreatePullRequestOption)] =&gt; ?{def flatMap: ?} (expanded macros 0)  (1,559 Î¼s, 0.03%)</title><rect x="47.7" y="245" width="0.3" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="50.67" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.repoconfig.UpdatePattern]] (id 8174) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (22,424 Î¼s, 0.36%)</title><rect x="661.5" y="245" width="4.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="664.47" y="255.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[org.scalasteward.core.forge.data.PullRequestState] (expanded macros 0)  (1,903 Î¼s, 0.03%)</title><rect x="1173.8" y="229" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1176.78" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.nat.ToInt[shapeless._0] (expanded macros 3)  (699 Î¼s, 0.01%)</title><rect x="312.3" y="197" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="315.31" y="207.5" ></text>
</g>
<g >
<title>scala.util.Either[io.circe.DecodingFailure,org.scalasteward.core.util.Timestamp] =&gt; io.circe.Json (expanded macros 0)   (1,047 Î¼s, 0.02%)</title><rect x="448.6" y="181" width="0.2" height="15.0" fill="rgb(244,114,114)" rx="2" ry="2" />
<text  x="451.55" y="191.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitea.GiteaApiAlg.Repository]{type Out = K} (id 4542) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (2,795 Î¼s, 0.05%)</title><rect x="618.8" y="197" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="621.84" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.ReprAsObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;body&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;head&quot;)],String] :: org.scalasteward.core.git.Branch with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;base&quot;)],org.scalasteward.core.git.Branch] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;draft&quot;)],Boolean] :: shapeless.HNil]] (id 4980) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (5,398 Î¼s, 0.09%)</title><rect x="866.3" y="213" width="1.0" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="869.31" y="223.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.codec.ReprAsObjectCodec[Option[org.scalasteward.core.data.GroupId] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;groupId&quot;)],Option[org.scalasteward.core.data.GroupId]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;artifactId&quot;)],Option[String]] :: cats.data.NonEmptyList[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;command&quot;)],cats.data.NonEmptyList[String]] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;commitMessage&quot;)],String] :: Option[Boolean] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;addToGitBlameIgnoreRevs&quot;)],Option[Boolean]] :: shapeless.HNil]] (id 7202) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (13,027 Î¼s, 0.21%)</title><rect x="1011.5" y="213" width="2.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1014.54" y="223.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.forge.data.RepoOut] (expanded macros 0)  (3,314 Î¼s, 0.05%)</title><rect x="372.2" y="245" width="0.6" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="375.15" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[org.scalasteward.core.repoconfig.UpdatesConfig with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)],org.scalasteward.core.repoconfig.UpdatesConfig] :: Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)],Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]]] :: Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)],Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy]] :: Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)],Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)],List[String]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)],List[String]] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)],List[org.scalasteward.core.repoconfig.GroupRepoConfig]] :: shapeless.HNil] (expanded macros 0)  (10,104 Î¼s, 0.16%)</title><rect x="1073.0" y="165" width="1.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1075.97" y="175.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.coursier.VersionsCache.Value] (expanded macros 0)   (549 Î¼s, 0.01%)</title><rect x="383.8" y="229" width="0.1" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="386.84" y="239.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;slug&quot;)]} (id 4178) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (546 Î¼s, 0.01%)</title><rect x="734.4" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="737.37" y="191.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.data.Scope[A]]] (id 2188) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (64,110 Î¼s, 1.04%)</title><rect x="492.0" y="245" width="12.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="495.01" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)]} (id 4057) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (791 Î¼s, 0.01%)</title><rect x="849.0" y="181" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="852.03" y="191.5" ></text>
</g>
<g >
<title>org.scalasteward.core.data.Update.ForArtifactIdDecoder.type =&gt; ?{def widen: ?} (expanded macros 0)  (1,594 Î¼s, 0.03%)</title><rect x="402.3" y="245" width="0.3" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="405.29" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.util.RecordToMap[List[org.scalasteward.core.repoconfig.PullRequestGroup] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;grouping&quot;)],List[org.scalasteward.core.repoconfig.PullRequestGroup]] :: Option[scala.util.matching.Regex] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;includeMatchedLabels&quot;)],Option[scala.util.matching.Regex]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;customLabels&quot;)],List[String]] :: shapeless.HNil] (expanded macros 0)  (4,419 Î¼s, 0.07%)</title><rect x="1020.3" y="197" width="0.9" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1023.33" y="207.5" ></text>
</g>
<g >
<title>eu.timepit.refined.internal.WitnessAs[shapeless._0,Int] (expanded macros 0)  (10,759 Î¼s, 0.17%)</title><rect x="313.0" y="229" width="2.0" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="315.97" y="239.5" ></text>
</g>
<g >
<title>cats.Traverse[Seq] (expanded macros 0)  (719 Î¼s, 0.01%)</title><rect x="252.2" y="245" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="255.18" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]]] (expanded macros 0)  (1,540 Î¼s, 0.02%)</title><rect x="1064.4" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1067.43" y="191.5" ></text>
</g>
<g >
<title>cats.ApplicativeError[F,E] (expanded macros 0)  (1,098 Î¼s, 0.02%)</title><rect x="211.0" y="245" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="214.00" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.RepoConfig]{type Repr = V} (id 7636) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,822 Î¼s, 0.03%)</title><rect x="1057.1" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1060.13" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[List[org.scalasteward.core.data.Resolver]] (expanded macros 0)  (4,536 Î¼s, 0.07%)</title><rect x="502.5" y="181" width="0.9" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="505.53" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: shapeless.HNil,List[String] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (2,059 Î¼s, 0.03%)</title><rect x="869.4" y="197" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="872.36" y="207.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.git.Sha1] (expanded macros 0)   (540 Î¼s, 0.01%)</title><rect x="645.1" y="165" width="0.1" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="648.12" y="175.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)]} (id 6589) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,098 Î¼s, 0.02%)</title><rect x="638.5" y="149" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="641.54" y="159.5" ></text>
</g>
<g >
<title>cats.kernel.Order[org.scalasteward.core.data.Version.Component] (expanded macros 0)  (633 Î¼s, 0.01%)</title><rect x="210.5" y="213" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="213.53" y="223.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;color&quot;)],String] :: shapeless.HNil]] (id 4832) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (5,350 Î¼s, 0.09%)</title><rect x="568.0" y="213" width="1.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="571.03" y="223.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[Boolean]] (expanded macros 0)  (863 Î¼s, 0.01%)</title><rect x="1012.8" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1015.75" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (2,181 Î¼s, 0.04%)</title><rect x="1067.4" y="85" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1070.40" y="95.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.update.artifact.ArtifactChanges]{type Out = K} (id 8841) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (851 Î¼s, 0.01%)</title><rect x="1170.9" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1173.86" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[List[org.scalasteward.core.repoconfig.PullRequestGroup]] (expanded macros 0)  (2,713 Î¼s, 0.04%)</title><rect x="1034.5" y="181" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1037.49" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;ignore&quot;)]} (id 8347) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,146 Î¼s, 0.02%)</title><rect x="1107.4" y="149" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1110.42" y="159.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;update&quot;)]} (id 6590) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,134 Î¼s, 0.02%)</title><rect x="638.1" y="165" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="641.12" y="175.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.ReprAsObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)],Option[String]] :: List[org.scalasteward.core.data.Update.ForArtifactId] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)],List[org.scalasteward.core.data.Update.ForArtifactId]] :: shapeless.HNil]] (id 2464) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (7,081 Î¼s, 0.11%)</title><rect x="826.6" y="213" width="1.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="829.65" y="223.5" ></text>
</g>
<g >
<title>cats.kernel.Order[org.scalasteward.core.data.Resolver] (expanded macros 0)  (751 Î¼s, 0.01%)</title><rect x="289.4" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="292.43" y="239.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Map[org.http4s.Uri,org.scalasteward.core.nurture.PullRequestRepository.Entry]] (expanded macros 0)  (45,004 Î¼s, 0.73%)</title><rect x="334.3" y="245" width="8.6" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="337.34" y="255.5" ></text>
</g>
<g >
<title>Either[String,eu.timepit.refined.api.Refined[String,eu.timepit.refined.boolean.And[eu.timepit.refined.collection.Forall[eu.timepit.refined.boolean.Or[eu.timepit.refined.char.Digit,eu.timepit.refined.boolean.And[eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less['a']],eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Greater['f']]]]],eu.timepit.refined.collection.Size[eu.timepit.refined.generic.Equal[40]]]]] =&gt; ?{def bimap: ?} (expanded macros 0)  (634 Î¼s, 0.01%)</title><rect x="39.3" y="245" width="0.1" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="42.25" y="255.5" ></text>
</g>
<g >
<title>cats.UnorderedFoldable[Option] (expanded macros 0)  (531 Î¼s, 0.01%)</title><rect x="172.7" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="175.73" y="239.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.gitea.GiteaApiAlg.PRBranchInfo]{type Repr = R} (expanded macros 0)  (19,544 Î¼s, 0.32%)</title><rect x="595.4" y="213" width="3.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="598.38" y="223.5" ></text>
</g>
<g >
<title>shapeless.Lub[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)],Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)],Lub0] (expanded macros 0)  (2,491 Î¼s, 0.04%)</title><rect x="966.3" y="101" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="969.31" y="111.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[String]] (expanded macros 0)  (769 Î¼s, 0.01%)</title><rect x="894.2" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="897.19" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucketserver.Json.Branch]{type Repr = V} (id 3928) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,502 Î¼s, 0.02%)</title><rect x="706.0" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="708.98" y="207.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.data.Version] (expanded macros 0)   (965 Î¼s, 0.02%)</title><rect x="354.1" y="213" width="0.2" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="357.11" y="223.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = 'a'} (id 6026) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (751 Î¼s, 0.01%)</title><rect x="355.9" y="117" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="358.90" y="127.5" ></text>
</g>
<g >
<title>F[(org.scalasteward.core.update.artifact.ArtifactMigrationsFinder, org.scalasteward.core.edit.scalafix.ScalafixMigrationsLoader[F])] =&gt; ?{def flatMap: ?} (expanded macros 0)  (4,289 Î¼s, 0.07%)</title><rect x="51.2" y="245" width="0.8" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="54.17" y="255.5" ></text>
</g>
<g >
<title>List[String] =&gt; ?{def mkString_: ?} (expanded macros 0)   (1,980 Î¼s, 0.03%)</title><rect x="168.7" y="245" width="0.3" height="15.0" fill="rgb(230,94,94)" rx="2" ry="2" />
<text  x="171.67" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucket.CommentContent]{type Out = K} (id 3644) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,026 Î¼s, 0.02%)</title><rect x="505.4" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="508.40" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;due_date&quot;)]} (id 4738) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,339 Î¼s, 0.02%)</title><rect x="576.9" y="117" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="579.95" y="127.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;remove_source_branch&quot;)]} (id 5482) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (900 Î¼s, 0.01%)</title><rect x="885.3" y="69" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="888.30" y="79.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.data.Resolver] (expanded macros 0)   (1,090 Î¼s, 0.02%)</title><rect x="503.2" y="149" width="0.2" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="506.15" y="159.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.repoconfig.RepoConfigAlg.ConfigParsingResult] =&gt; ?{def map: ?} (expanded macros 0)  (551 Î¼s, 0.01%)</title><rect x="146.1" y="245" width="0.1" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="149.12" y="255.5" ></text>
</g>
<g >
<title>F[org.http4s.Uri] =&gt; ?{def flatMap: ?} (expanded macros 0)  (738 Î¼s, 0.01%)</title><rect x="129.2" y="245" width="0.2" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="132.23" y="255.5" ></text>
</g>
<g >
<title>String(&quot;|  ____            _         ____  _                             _\n         | / ___|  ___ __ _| | __ _  / ___|| |_ _____      ____ _ _ __ __| |\n         | \\___ \\ / __/ _` | |/ _` | \\___ \\| __/ _ \\ \\ /\\ / / _` | \'__/ _` |\n         |  ___) | (_| (_| | | (_| |  ___) | ||  __/\\ V  V / (_| | | | (_| |\n         | |____/ \\___\\__,_|_|\\__,_| |____/ \\__\\___| \\_/\\_/ \\__,_|_|  \\__,_|&quot;) =&gt; ?{def stripMargin: ?} (expanded macros 0)  (3,150 Î¼s, 0.05%)</title><rect x="203.1" y="245" width="0.6" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="206.10" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)]} (id 1392) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,237 Î¼s, 0.02%)</title><rect x="453.9" y="181" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="456.92" y="191.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.git.Branch] (expanded macros 0)  (1,494 Î¼s, 0.02%)</title><rect x="644.1" y="165" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="647.11" y="175.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.git.Branch] (expanded macros 0)  (1,404 Î¼s, 0.02%)</title><rect x="707.4" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="710.41" y="191.5" ></text>
</g>
<g >
<title>org.http4s.Header.Select[org.http4s.headers.Link] (expanded macros 0)  (2,899 Î¼s, 0.05%)</title><rect x="395.1" y="245" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="398.07" y="255.5" ></text>
</g>
<g >
<title>cats.kernel.Monoid[Unit] (expanded macros 0)  (652 Î¼s, 0.01%)</title><rect x="285.2" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="288.22" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil,List[String] :: List[String] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (4,114 Î¼s, 0.07%)</title><rect x="1059.2" y="85" width="0.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1062.21" y="95.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.forge.bitbucketserver.Json.Ref]] (id 4150) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (18,169 Î¼s, 0.29%)</title><rect x="853.4" y="245" width="3.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="856.42" y="255.5" ></text>
</g>
<g >
<title>F[java.net.http.HttpClient] =&gt; ?{def map: ?} (expanded macros 0)  (3,903 Î¼s, 0.06%)</title><rect x="127.6" y="245" width="0.7" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="130.56" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,List[org.scalasteward.core.data.Resolver.Header] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (2,431 Î¼s, 0.04%)</title><rect x="939.4" y="85" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="942.43" y="95.5" ></text>
</g>
<g >
<title>eu.timepit.refined.internal.WitnessAs['a',Char] (expanded macros 0)  (6,510 Î¼s, 0.11%)</title><rect x="309.5" y="133" width="1.3" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="312.54" y="143.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.CommitsConfig]{type Repr = V} (id 7073) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (700 Î¼s, 0.01%)</title><rect x="1001.4" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1004.37" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;allowPreReleases&quot;)]} (id 8250) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,117 Î¼s, 0.02%)</title><rect x="1090.6" y="149" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1093.58" y="159.5" ></text>
</g>
<g >
<title>Either[java.util.regex.PatternSyntaxException,scala.util.matching.Regex] =&gt; ?{def leftMap: ?} (expanded macros 0)  (629 Î¼s, 0.01%)</title><rect x="40.1" y="245" width="0.1" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="43.10" y="255.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.Validate[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[N]]]{type R = RP} (expanded macros 0)  (2,815 Î¼s, 0.05%)</title><rect x="315.3" y="229" width="0.5" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="318.31" y="239.5" ></text>
</g>
<g >
<title>cats.kernel.Semigroup[Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]]] (expanded macros 0)  (754 Î¼s, 0.01%)</title><rect x="294.7" y="245" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="297.75" y="255.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[String] (expanded macros 0)  (891 Î¼s, 0.01%)</title><rect x="318.8" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="321.83" y="239.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.CommitsConfig]{type Out = K} (id 7072) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (553 Î¼s, 0.01%)</title><rect x="1001.1" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1004.11" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;sha&quot;)]} (id 4319) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,013 Î¼s, 0.02%)</title><rect x="744.8" y="181" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="747.82" y="191.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[Boolean]] (expanded macros 0)  (662 Î¼s, 0.01%)</title><rect x="1013.4" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1016.42" y="191.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[org.scalasteward.core.repoconfig.RepoConfig]] (expanded macros 0)  (1,235 Î¼s, 0.02%)</title><rect x="657.6" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="660.58" y="191.5" ></text>
</g>
<g >
<title>F[Option[org.scalasteward.core.data.Version]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (1,964 Î¼s, 0.03%)</title><rect x="84.4" y="245" width="0.4" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="87.41" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.util.RecordToMap[org.scalasteward.core.repoconfig.PullRequestsConfig with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;pullRequests&quot;)],org.scalasteward.core.repoconfig.PullRequestsConfig] :: org.scalasteward.core.repoconfig.ScalafmtConfig with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;scalafmt&quot;)],org.scalasteward.core.repoconfig.ScalafmtConfig] :: org.scalasteward.core.repoconfig.UpdatesConfig with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)],org.scalasteward.core.repoconfig.UpdatesConfig] :: Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)],Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]]] :: Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)],Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy]] :: Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)],Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)],List[String]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)],List[String]] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)],List[org.scalasteward.core.repoconfig.GroupRepoConfig]] :: shapeless.HNil] (expanded macros 0)  (9,257 Î¼s, 0.15%)</title><rect x="1045.4" y="197" width="1.8" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1048.42" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Update.ForArtifactId]{type Out = K} (id 2298) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (3,125 Î¼s, 0.05%)</title><rect x="802.2" y="197" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="805.18" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;allowPreReleases&quot;)]} (id 8331) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,093 Î¼s, 0.02%)</title><rect x="1083.4" y="165" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1086.43" y="175.5" ></text>
</g>
<g >
<title>strings.type =&gt; ?{def mkString_(x$1: ? &gt;: String(&quot;(&quot;), x$2: ? &gt;: String(&quot;|&quot;), x$3: ? &gt;: String(&quot;)&quot;)): ?} (expanded macros 0)  (836 Î¼s, 0.01%)</title><rect x="1174.3" y="245" width="0.1" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="1177.25" y="255.5" ></text>
</g>
<g >
<title>((Nothing, Nothing)) =&gt; Throwable (expanded macros 0)   (1,086 Î¼s, 0.02%)</title><rect x="12.5" y="245" width="0.3" height="15.0" fill="rgb(241,111,111)" rx="2" ry="2" />
<text  x="15.55" y="255.5" ></text>
</g>
<g >
<title>cats.Traverse[org.scalasteward.core.util.Nel] (expanded macros 0)  (716 Î¼s, 0.01%)</title><rect x="252.4" y="245" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="255.37" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitea.GiteaApiAlg.CreateIssueCommentOption]{type Out = K} (id 4769) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,905 Î¼s, 0.03%)</title><rect x="560.0" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="563.02" y="207.5" ></text>
</g>
<g >
<title>mr.mergeStatus.type =&gt; ?{def =!= : ?} (expanded macros 0)  (1,156 Î¼s, 0.02%)</title><rect x="391.7" y="245" width="0.2" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="394.69" y="255.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.edit.scalafix.ScalafixMigrations]{type Repr = R} (expanded macros 0)   (8,455 Î¼s, 0.14%)</title><rect x="1150.9" y="213" width="1.6" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="1153.93" y="223.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.forge.bitbucketserver.Json.Repo] (expanded macros 0)  (1,746 Î¼s, 0.03%)</title><rect x="368.9" y="245" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="371.95" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.ReprAsObjectEncoder[List[org.scalasteward.core.forge.azurerepos.AzureComment] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;comments&quot;)],List[org.scalasteward.core.forge.azurerepos.AzureComment]] :: Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;status&quot;)],Int] :: shapeless.HNil]] (id 3449) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (4,641 Î¼s, 0.08%)</title><rect x="836.7" y="213" width="0.9" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="839.67" y="223.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.repoconfig.GroupRepoConfig] (expanded macros 0)  (1,031 Î¼s, 0.02%)</title><rect x="1062.1" y="165" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1065.12" y="175.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.data.Update.ForGroupId]] (id 2398) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (40,538 Î¼s, 0.66%)</title><rect x="812.8" y="245" width="7.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="815.78" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,List[org.scalasteward.core.data.Resolver.Header] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (2,321 Î¼s, 0.04%)</title><rect x="936.1" y="85" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="939.11" y="95.5" ></text>
</g>
<g >
<title>((com.monovore.decline.Opts[Long], com.monovore.decline.Opts[better.files.File])) =&gt; ?{def mapN: ?} (expanded macros 0)  (1,050 Î¼s, 0.02%)</title><rect x="18.4" y="245" width="0.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="21.41" y="255.5" ></text>
</g>
<g >
<title>Map[org.http4s.Uri,org.scalasteward.core.nurture.PullRequestRepository.Entry] =&gt; Iterable[(org.http4s.Uri, org.scalasteward.core.nurture.PullRequestRepository.Entry)] (expanded macros 0)  (1,383 Î¼s, 0.02%)</title><rect x="379.4" y="229" width="0.2" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="382.37" y="239.5" ></text>
</g>
<g >
<title>all (6,167,184 Î¼s, 100%)</title><rect x="10.0" y="261" width="1180.0" height="15.0" fill="rgb(110,255,110)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[Vector[String]]] (expanded macros 0)  (1,469 Î¼s, 0.02%)</title><rect x="581.8" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="584.83" y="191.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.decoding.ConfiguredDecoder[org.scalasteward.core.update.artifact.ArtifactChanges] (expanded macros 0)  (25,607 Î¼s, 0.42%)</title><rect x="1168.2" y="229" width="4.9" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1171.23" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;changes&quot;)] :: shapeless.HNil,List[org.scalasteward.core.update.artifact.ArtifactChange] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (1,796 Î¼s, 0.03%)</title><rect x="1170.5" y="197" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1173.49" y="207.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.forge.bitbucket.DefaultReviewers] =&gt; ?{def map: ?} (expanded macros 0)  (1,290 Î¼s, 0.02%)</title><rect x="131.8" y="245" width="0.2" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="134.78" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (844 Î¼s, 0.01%)</title><rect x="1028.2" y="133" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1031.24" y="143.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitea.GiteaApiAlg.EditPullRequestOption]{type Repr = V} (id 4708) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,694 Î¼s, 0.03%)</title><rect x="585.3" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="588.29" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lub[Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)],Symbol with shapeless.tag.Tagged[_ &gt;: String(&quot;dependencyOverrides&quot;) with String(&quot;reviewers&quot;) with String(&quot;assignees&quot;) with String(&quot;buildRoots&quot;) with String(&quot;updatePullRequests&quot;) &lt;: String],Lub0] (expanded macros 0)  (1,001 Î¼s, 0.02%)</title><rect x="1069.9" y="133" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1072.95" y="143.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;sourceRefName&quot;)]} (id 3400) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (690 Î¼s, 0.01%)</title><rect x="841.5" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="844.49" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;location&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,String :: Option[org.scalasteward.core.data.Resolver.Credentials] :: List[org.scalasteward.core.data.Resolver.Header] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (5,494 Î¼s, 0.09%)</title><rect x="986.7" y="117" width="1.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="989.71" y="127.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.Resolver.Credentials] (expanded macros 0)  (5,660 Î¼s, 0.09%)</title><rect x="346.4" y="229" width="1.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="349.43" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;includeMatchedLabels&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;customLabels&quot;)] :: shapeless.HNil,Option[scala.util.matching.Regex] :: List[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (5,664 Î¼s, 0.09%)</title><rect x="1027.3" y="165" width="1.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1030.32" y="175.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;ref&quot;)]} (id 4642) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,314 Î¼s, 0.02%)</title><rect x="598.2" y="165" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="601.19" y="175.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)]} (id 1956) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,045 Î¼s, 0.02%)</title><rect x="987.1" y="85" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="990.12" y="95.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.Validate[A,eu.timepit.refined.boolean.Or[eu.timepit.refined.char.Digit,eu.timepit.refined.boolean.And[eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less['a']],eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Greater['f']]]]]{type R = R} (expanded macros 0)  (13,557 Î¼s, 0.22%)</title><rect x="308.3" y="197" width="2.6" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="311.26" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;location&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,List]{type Lub = Symbol} (expanded macros 0)  (11,901 Î¼s, 0.19%)</title><rect x="994.2" y="149" width="2.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="997.22" y="159.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;pin&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;allow&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;allowPreReleases&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;ignore&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)] :: shapeless.HNil,List[org.scalasteward.core.repoconfig.UpdatePattern] :: List[org.scalasteward.core.repoconfig.UpdatePattern] :: List[org.scalasteward.core.repoconfig.UpdatePattern] :: List[org.scalasteward.core.repoconfig.UpdatePattern] :: Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]] :: Option[List[String]] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (14,587 Î¼s, 0.24%)</title><rect x="1093.8" y="197" width="2.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1096.85" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil,List[String] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (4,436 Î¼s, 0.07%)</title><rect x="1055.2" y="69" width="0.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1058.20" y="79.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord[org.scalasteward.core.update.artifact.ArtifactChanges]{type Out = D} (expanded macros 0)  (2,832 Î¼s, 0.05%)</title><rect x="1168.6" y="213" width="0.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1171.62" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)] :: shapeless.HNil,Option[List[String]] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (3,244 Î¼s, 0.05%)</title><rect x="1091.6" y="117" width="0.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1094.63" y="127.5" ></text>
</g>
<g >
<title>cats.ApplicativeError[F,Throwable] (expanded macros 0)  (5,049 Î¼s, 0.08%)</title><rect x="211.2" y="245" width="1.0" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="214.21" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[String] (expanded macros 0)  (1,128 Î¼s, 0.02%)</title><rect x="844.1" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="847.14" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;newerGroupId&quot;)]} (id 2308) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (2,227 Î¼s, 0.04%)</title><rect x="807.2" y="149" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="810.20" y="159.5" ></text>
</g>
<g >
<title>x$1.name.type =&gt; ?{def === : ?} (expanded macros 0)  (1,424 Î¼s, 0.02%)</title><rect x="1180.2" y="245" width="0.2" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="1183.15" y="255.5" ></text>
</g>
<g >
<title>x.dependencyOverrides.type =&gt; ?{def |+| : ?} (expanded macros 0)  (565 Î¼s, 0.01%)</title><rect x="1188.7" y="245" width="0.1" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="1191.66" y="255.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[org.scalasteward.core.data.GroupId] (expanded macros 0)  (577 Î¼s, 0.01%)</title><rect x="305.1" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="308.11" y="239.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[org.scalasteward.core.data.Version.Component] (expanded macros 0)  (1,517 Î¼s, 0.02%)</title><rect x="209.9" y="229" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="212.92" y="239.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Dependency]{type Repr = V} (id 1460) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (3,109 Î¼s, 0.05%)</title><rect x="470.4" y="197" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="473.42" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Resolver.MavenRepository]{type Repr = V} (id 1701) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (2,200 Î¼s, 0.04%)</title><rect x="954.9" y="133" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="957.94" y="143.5" ></text>
</g>
<g >
<title>user.type =&gt; ?{def map: ?} (expanded macros 0)  (9,179 Î¼s, 0.15%)</title><rect x="1177.0" y="245" width="1.8" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="1180.04" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitea.GiteaApiAlg.Label]{type Repr = V} (id 4806) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (2,207 Î¼s, 0.04%)</title><rect x="590.7" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="593.71" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.PullRequestsConfig]{type Out = Labels} (id 7523) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,992 Î¼s, 0.03%)</title><rect x="1023.2" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1026.23" y="207.5" ></text>
</g>
<g >
<title>EditAlg.this.logger.type =&gt; ?{def attemptWarn: ?} (expanded macros 0)  (777 Î¼s, 0.01%)</title><rect x="38.9" y="245" width="0.2" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="41.94" y="255.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.repoconfig.RepoConfig]{type Repr = R} (expanded macros 0)   (30,031 Î¼s, 0.49%)</title><rect x="1050.3" y="213" width="5.7" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="1053.30" y="223.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[None.type :: None.type :: None.type :: Some[List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;location&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil]{type Out = Rec} (expanded macros 0)  (2,865 Î¼s, 0.05%)</title><rect x="951.2" y="133" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="954.17" y="143.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Resolver.IvyRepository]{type Out = K} (id 1824) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (2,005 Î¼s, 0.03%)</title><rect x="933.8" y="133" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="936.77" y="143.5" ></text>
</g>
<g >
<title>io.circe.Decoder[cats.data.NonEmptyList[org.scalasteward.core.forge.bitbucketserver.Json.Link]] (expanded macros 0)  (582 Î¼s, 0.01%)</title><rect x="729.1" y="165" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="732.07" y="175.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucketserver.Json.Ref]{type Repr = V} (id 4156) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,345 Î¼s, 0.02%)</title><rect x="855.5" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="858.47" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[List[org.scalasteward.core.repoconfig.UpdatePattern] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;ignore&quot;)],List[org.scalasteward.core.repoconfig.UpdatePattern]] :: Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)],Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]]] :: Option[List[String]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)],Option[List[String]]] :: shapeless.HNil] (expanded macros 0)  (5,892 Î¼s, 0.10%)</title><rect x="1107.3" y="165" width="1.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1110.29" y="175.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.gitlab.CommitId]{type Repr = R} (expanded macros 0)  (6,584 Î¼s, 0.11%)</title><rect x="788.5" y="213" width="1.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="791.49" y="223.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.data.Resolver.MavenRepository]{type Repr = R} (expanded macros 0)   (18,803 Î¼s, 0.30%)</title><rect x="984.2" y="149" width="3.6" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="987.16" y="159.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Update.Grouped]{type Out = K} (id 2475) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (2,146 Î¼s, 0.03%)</title><rect x="684.7" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="687.69" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.PullRequestsConfig]{type Repr = V} (expanded macros 3)   (1,881 Î¼s, 0.03%)</title><rect x="1029.0" y="197" width="0.4" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="1032.04" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.ReprDecoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)],Option[String]] :: cats.data.NonEmptyList[org.scalasteward.core.repoconfig.PullRequestUpdateFilter] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;filter&quot;)],cats.data.NonEmptyList[org.scalasteward.core.repoconfig.PullRequestUpdateFilter]] :: shapeless.HNil] (id 7344) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveDecoder`)  (4,379 Î¼s, 0.07%)</title><rect x="795.5" y="197" width="0.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="798.48" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[String]] (expanded macros 0)  (1,114 Î¼s, 0.02%)</title><rect x="381.6" y="245" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="384.58" y="255.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.azurerepos.AzureComment]{type Repr = R} (expanded macros 0)  (7,952 Î¼s, 0.13%)</title><rect x="828.7" y="213" width="1.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="831.70" y="223.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucketserver.Json.Link]{type Out = K} (id 4017) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,439 Î¼s, 0.02%)</title><rect x="720.0" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="723.02" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Resolver.Header]{type Repr = V} (id 1660) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (2,274 Î¼s, 0.04%)</title><rect x="489.5" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="492.46" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;addToGitBlameIgnoreRevs&quot;)]} (id 7179) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (740 Î¼s, 0.01%)</title><rect x="1009.5" y="117" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1012.54" y="127.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.repocache.RefreshErrorAlg.Entry] (expanded macros 0)   (546 Î¼s, 0.01%)</title><rect x="388.0" y="229" width="0.1" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="390.98" y="239.5" ></text>
</g>
<g >
<title>cats.FunctorFilter[[+O]fs2.Stream[[_]F[_],O]] (expanded macros 0)  (2,630 Î¼s, 0.04%)</title><rect x="323.3" y="229" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="326.31" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)] :: shapeless.HNil,org.scalasteward.core.git.Sha1 :: shapeless.HNil]{type Out = R} (expanded macros 0)  (1,689 Î¼s, 0.03%)</title><rect x="789.4" y="197" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="792.42" y="207.5" ></text>
</g>
<g >
<title>pr.baseSha1.type =&gt; ?{def === : ?} (expanded macros 0)  (1,000 Î¼s, 0.02%)</title><rect x="409.7" y="245" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="412.73" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;maybeCrossName&quot;)] :: shapeless.HNil,String :: Option[String] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (5,025 Î¼s, 0.08%)</title><rect x="453.7" y="197" width="0.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="456.68" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.github.InstallationOut]{type Out = K} (id 5305) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (611 Î¼s, 0.01%)</title><rect x="762.5" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="765.51" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucketserver.Json.Reviewer]{type Repr = V} (expanded macros 3)   (1,207 Î¼s, 0.02%)</title><rect x="526.2" y="197" width="0.2" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="529.19" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[String] (expanded macros 0)  (1,123 Î¼s, 0.02%)</title><rect x="833.5" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="836.50" y="191.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucket.Reviewer]{type Out = K} (id 3719) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,037 Î¼s, 0.02%)</title><rect x="516.2" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="519.20" y="207.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.Validate[String,eu.timepit.refined.collection.Size[eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[N]]]] (expanded macros 0)  (4,297 Î¼s, 0.07%)</title><rect x="315.0" y="245" width="0.8" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="318.02" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[org.scalasteward.core.data.GroupId with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;groupIdAfter&quot;)],org.scalasteward.core.data.GroupId] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;artifactIdBefore&quot;)],Option[String]] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;artifactIdAfter&quot;)],String] :: shapeless.HNil] (expanded macros 0)  (2,566 Î¼s, 0.04%)</title><rect x="1167.1" y="197" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1170.07" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[Option[org.scalasteward.core.data.Resolver.Credentials] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)],Option[org.scalasteward.core.data.Resolver.Credentials]] :: List[org.scalasteward.core.data.Resolver.Header] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)],List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil] (expanded macros 0)  (3,841 Î¼s, 0.06%)</title><rect x="997.3" y="117" width="0.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1000.28" y="127.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)] :: shapeless.HNil,Option[List[String]] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (3,295 Î¼s, 0.05%)</title><rect x="1096.0" y="117" width="0.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1099.01" y="127.5" ></text>
</g>
<g >
<title>Ordering[Int] (expanded macros 0)  (2,348 Î¼s, 0.04%)</title><rect x="174.9" y="245" width="0.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="177.90" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,023 Î¼s, 0.02%)</title><rect x="625.3" y="69" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="628.32" y="79.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[org.scalasteward.core.data.GroupId]] (expanded macros 0)  (4,424 Î¼s, 0.07%)</title><rect x="810.4" y="181" width="0.9" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="813.43" y="191.5" ></text>
</g>
<g >
<title>Either[io.circe.Error,org.scalasteward.core.buildtool.mill.Modules] =&gt; ?{def leftMap: ?} (expanded macros 0)  (824 Î¼s, 0.01%)</title><rect x="39.9" y="245" width="0.2" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="42.94" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[List[org.scalasteward.core.data.Resolver.Header]] (expanded macros 0)  (2,768 Î¼s, 0.04%)</title><rect x="941.5" y="117" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="944.49" y="127.5" ></text>
</g>
<g >
<title>String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;description&quot;)],String] :: org.scalasteward.core.forge.data.PullRequestState with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)],org.scalasteward.core.forge.data.PullRequestState] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;open&quot;)],Boolean] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;closed&quot;)],Boolean] :: org.scalasteward.core.forge.bitbucketserver.Json.Ref with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;fromRef&quot;)],org.scalasteward.core.forge.bitbucketserver.Json.Ref] :: org.scalasteward.core.forge.bitbucketserver.Json.Ref with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;toRef&quot;)],org.scalasteward.core.forge.bitbucketserver.Json.Ref] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;locked&quot;)],Boolean] :: List[org.scalasteward.core.forge.bitbucketserver.Json.Reviewer] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)],List[org.scalasteward.core.forge.bitbucketserver.Json.Reviewer]] :: shapeless.HNil &lt;:&lt; (String :: String :: org.scalasteward.core.forge.data.PullRequestState :: Boolean :: Boolean :: org.scalasteward.core.forge.bitbucketserver.Json.Ref :: org.scalasteward.core.forge.bitbucketserver.Json.Ref :: Boolean :: List[org.scalasteward.core.forge.bitbucketserver.Json.Reviewer] :: shapeless.HNil) (expanded macros 0)  (568 Î¼s, 0.01%)</title><rect x="846.6" y="197" width="0.1" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="849.57" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.repoconfig.VersionPattern] (expanded macros 0)  (15,354 Î¼s, 0.25%)</title><rect x="797.0" y="229" width="2.9" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="800.00" y="239.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.ReprAsObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;body&quot;)],String] :: shapeless.HNil]] (id 5378) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (2,474 Î¼s, 0.04%)</title><rect x="875.6" y="213" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="878.60" y="223.5" ></text>
</g>
<g >
<title>x$7.type =&gt; ?{def unwrap: ?} (expanded macros 0)  (1,380 Î¼s, 0.02%)</title><rect x="1187.2" y="245" width="0.2" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="1190.17" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.bitbucketserver.Json.DefaultReviewer] (expanded macros 0)  (14,469 Î¼s, 0.23%)</title><rect x="715.6" y="229" width="2.8" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="718.60" y="239.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[Int] (expanded macros 0)  (580 Î¼s, 0.01%)</title><rect x="315.9" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="318.95" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)] :: shapeless.HNil,org.scalasteward.core.forge.data.PullRequestState :: shapeless.HNil]{type Out = R} (expanded macros 0)  (1,965 Î¼s, 0.03%)</title><rect x="861.8" y="197" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="864.75" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)]} (id 5489) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (587 Î¼s, 0.01%)</title><rect x="883.3" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="886.27" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;location&quot;)]} (id 2002) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,111 Î¼s, 0.02%)</title><rect x="997.1" y="117" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1000.07" y="127.5" ></text>
</g>
<g >
<title>String(&quot;\\p{javaLowerCase}\\p{javaUpperCase}&quot;) =&gt; ?{def r: ?} (expanded macros 0)  (616 Î¼s, 0.01%)</title><rect x="185.8" y="245" width="0.1" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="188.76" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitea.GiteaApiAlg.PullRequestResp]{type Repr = V} (expanded macros 3)   (3,511 Î¼s, 0.06%)</title><rect x="609.4" y="197" width="0.6" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="612.37" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (5,386 Î¼s, 0.09%)</title><rect x="1066.8" y="133" width="1.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1069.79" y="143.5" ></text>
</g>
<g >
<title>cats.kernel.PartialOrder[org.scalasteward.core.data.Version] (expanded macros 0)  (3,300 Î¼s, 0.05%)</title><rect x="292.1" y="245" width="0.6" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="295.08" y="255.5" ></text>
</g>
<g >
<title>cats.Functor[F] (expanded macros 0)  (700 Î¼s, 0.01%)</title><rect x="138.5" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="141.48" y="239.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.codec.ConfiguredAsObjectCodec[org.scalasteward.core.repoconfig.PullRequestsConfig]] (id 7439) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (122,865 Î¼s, 1.99%)</title><rect x="1017.6" y="245" width="23.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1020.63" y="255.5" >s..</text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;newerVersions&quot;)]} (id 2309) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (2,494 Î¼s, 0.04%)</title><rect x="806.4" y="165" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="809.42" y="175.5" ></text>
</g>
<g >
<title>F[Unit] =&gt; ?{def adaptErr: ?} (expanded macros 0)  (631 Î¼s, 0.01%)</title><rect x="97.3" y="245" width="0.1" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="100.28" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[List[org.scalasteward.core.update.artifact.ArtifactChange]] (expanded macros 0)  (1,592 Î¼s, 0.03%)</title><rect x="1172.2" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1175.24" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;artifactIdBefore&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;artifactIdAfter&quot;)] :: shapeless.HNil,Option[String] :: String :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,780 Î¼s, 0.03%)</title><rect x="1159.4" y="165" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1162.41" y="175.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.data.GroupId] (expanded macros 0)   (1,248 Î¼s, 0.02%)</title><rect x="811.0" y="149" width="0.2" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="814.01" y="159.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (4,347 Î¼s, 0.07%)</title><rect x="993.4" y="133" width="0.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="996.39" y="143.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;value&quot;)] :: shapeless.HNil,String :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (2,476 Î¼s, 0.04%)</title><rect x="490.3" y="181" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="493.27" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.edit.scalafix.ScalafixMigrations]{type Repr = V} (id 2858) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,187 Î¼s, 0.02%)</title><rect x="1153.1" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1156.13" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;due_date&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;head&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;labels&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;milestone&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: shapeless.HNil,Option[String] :: Option[String] :: Option[Vector[Int]] :: Option[Int] :: Option[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (14,585 Î¼s, 0.24%)</title><rect x="576.7" y="133" width="2.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="579.70" y="143.5" ></text>
</g>
<g >
<title>create.type =&gt; ?{def map: ?} (expanded macros 0)  (2,676 Î¼s, 0.04%)</title><rect x="302.5" y="245" width="0.5" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="305.52" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;slug&quot;)]} (id 4198) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (538 Î¼s, 0.01%)</title><rect x="858.9" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="861.93" y="191.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.bitbucketserver.Json.Page[A]] (expanded macros 0)  (11,999 Î¼s, 0.19%)</title><rect x="729.9" y="229" width="2.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="732.88" y="239.5" ></text>
</g>
<g >
<title>dependencies.type =&gt; ?{def traverse: ?} (expanded macros 0)  (618 Î¼s, 0.01%)</title><rect x="304.6" y="245" width="0.1" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="307.59" y="255.5" ></text>
</g>
<g >
<title>cats.kernel.Order[(org.scalasteward.core.data.GroupId, org.scalasteward.core.data.ArtifactId, org.scalasteward.core.data.Version, Option[org.scalasteward.core.buildtool.sbt.data.SbtVersion], Option[org.scalasteward.core.buildtool.sbt.data.ScalaVersion], Option[String])] (expanded macros 0)  (2,419 Î¼s, 0.04%)</title><rect x="288.1" y="245" width="0.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="291.08" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;links&quot;)] :: shapeless.HNil,org.scalasteward.core.forge.data.PullRequestState :: scala.collection.immutable.Map[String,cats.data.NonEmptyList[org.scalasteward.core.forge.bitbucketserver.Json.Link]] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (2,981 Î¼s, 0.05%)</title><rect x="726.9" y="149" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="729.87" y="159.5" ></text>
</g>
<g >
<title>x.postUpdateHooks.type =&gt; ?{def |+| : ?} (expanded macros 0)  (1,163 Î¼s, 0.02%)</title><rect x="1189.3" y="245" width="0.2" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="1192.26" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.edit.scalafix.ScalafixMigrations]{type Out = K} (id 2857) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (818 Î¼s, 0.01%)</title><rect x="1152.7" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1155.73" y="207.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.repoconfig.UpdatesConfig]{type Repr = R} (expanded macros 0)  (1,841 Î¼s, 0.03%)</title><rect x="1087.0" y="213" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1090.01" y="223.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.PullRequestsConfig]{type Out = K} (id 7457) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,484 Î¼s, 0.02%)</title><rect x="1028.5" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1031.45" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;allowPreReleases&quot;)]} (id 8269) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,026 Î¼s, 0.02%)</title><rect x="1095.0" y="149" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1097.99" y="159.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.data.Update.ForArtifactId] (expanded macros 0)  (59,701 Î¼s, 0.97%)</title><rect x="801.4" y="229" width="11.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="804.36" y="239.5" ></text>
</g>
<g >
<title>cats.data.NonEmptyList[org.scalasteward.core.data.Update.ForArtifactId] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;forArtifactIds&quot;)],cats.data.NonEmptyList[org.scalasteward.core.data.Update.ForArtifactId]] :: shapeless.HNil &lt;:&lt; (cats.data.NonEmptyList[org.scalasteward.core.data.Update.ForArtifactId] :: shapeless.HNil) (expanded macros 0)  (870 Î¼s, 0.01%)</title><rect x="678.0" y="197" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="681.03" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;maybeRepoConfigParsingError&quot;)] :: shapeless.HNil,Option[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,711 Î¼s, 0.03%)</title><rect x="653.4" y="149" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="656.38" y="159.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.ReprAsObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;body&quot;)],String] :: shapeless.HNil] (id 5379) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveEncoder`)  (2,050 Î¼s, 0.03%)</title><rect x="875.7" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="878.68" y="207.5" ></text>
</g>
<g >
<title>String(&quot;organization: %s, version: %s, scalaVersion: %s, scalaBinaryVersion: %s, sbtVersion: %s, gitHubUrl: %s, gitHubUserContent: %s, mainBranch: %s, gitHeadCommit: %s, millPluginArtifactName: %s, millPluginVersion: %s&quot;) =&gt; ?{def format: ?} (expanded macros 0)  (69,948 Î¼s, 1.13%)</title><rect x="186.0" y="245" width="13.4" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="188.97" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[String] (expanded macros 0)  (738 Î¼s, 0.01%)</title><rect x="751.3" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="754.34" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;values&quot;)]} (id 4084) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (748 Î¼s, 0.01%)</title><rect x="731.4" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="734.39" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;pattern&quot;)],String] :: Option[org.scalasteward.core.data.Resolver.Credentials] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)],Option[org.scalasteward.core.data.Resolver.Credentials]] :: List[org.scalasteward.core.data.Resolver.Header] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)],List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil]{type Out = F} (expanded macros 0)  (8,072 Î¼s, 0.13%)</title><rect x="946.5" y="149" width="1.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="949.48" y="159.5" ></text>
</g>
<g >
<title>org.scalasteward.core.git.GenGitAlg[F,org.scalasteward.core.data.Repo] (expanded macros 0)  (2,071 Î¼s, 0.03%)</title><rect x="404.5" y="245" width="0.4" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="407.47" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;commit&quot;)] :: shapeless.HNil,org.scalasteward.core.forge.data.CommitOut :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,502 Î¼s, 0.02%)</title><rect x="737.9" y="181" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="740.93" y="191.5" ></text>
</g>
<g >
<title>coursier.util.Sync[F] (expanded macros 0)  (9,568 Î¼s, 0.16%)</title><rect x="300.6" y="245" width="1.8" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="303.56" y="255.5" ></text>
</g>
<g >
<title>cats.kernel.Order[org.scalasteward.core.data.Version] (expanded macros 0)  (535 Î¼s, 0.01%)</title><rect x="287.8" y="213" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="290.84" y="223.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.decoding.ReprDecoder[List[org.scalasteward.core.edit.scalafix.ScalafixMigration] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;migrations&quot;)],List[org.scalasteward.core.edit.scalafix.ScalafixMigration]] :: shapeless.HNil] (id 2864) (expanded macros 3) (tree from `io.circe.generic.extras.ConfigurableDeriver.deriveConfiguredDecoder`)  (5,220 Î¼s, 0.08%)</title><rect x="1153.8" y="197" width="1.0" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1156.79" y="207.5" ></text>
</g>
<g >
<title>shapeless.Annotations[io.circe.generic.extras.JsonKey,org.scalasteward.core.data.Resolver.MavenRepository]{type Out = K} (id 1790) (expanded macros 3) (tree from `shapeless.AnnotationMacros.materializeVariableAnnotations`)  (8,060 Î¼s, 0.13%)</title><rect x="949.4" y="149" width="1.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="952.43" y="159.5" ></text>
</g>
<g >
<title>cats.kernel.Semigroup[org.http4s.headers.Link] (expanded macros 0)  (1,918 Î¼s, 0.03%)</title><rect x="395.2" y="229" width="0.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="398.23" y="239.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;value&quot;)]} (id 2199) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (2,553 Î¼s, 0.04%)</title><rect x="499.3" y="181" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="502.32" y="191.5" ></text>
</g>
<g >
<title>F[List[org.scalasteward.core.forge.bitbucketserver.Json.Reviewer]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (1,113 Î¼s, 0.02%)</title><rect x="75.0" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="78.00" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (5,563 Î¼s, 0.09%)</title><rect x="1101.7" y="165" width="1.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1104.72" y="175.5" ></text>
</g>
<g >
<title>Seq[java.nio.file.LinkOption] (expanded macros 0)   (2,019 Î¼s, 0.03%)</title><rect x="179.8" y="245" width="0.4" height="15.0" fill="rgb(242,112,112)" rx="2" ry="2" />
<text  x="182.83" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[String]] (expanded macros 0)  (1,683 Î¼s, 0.03%)</title><rect x="674.0" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="677.01" y="191.5" ></text>
</g>
<g >
<title>F[Option[Map[org.http4s.Uri,org.scalasteward.core.nurture.PullRequestRepository.Entry]]] =&gt; ?{def map: ?} (expanded macros 0)  (1,776 Î¼s, 0.03%)</title><rect x="79.2" y="245" width="0.4" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="82.21" y="255.5" ></text>
</g>
<g >
<title>Seq[java.nio.file.attribute.FileAttribute[_]] (expanded macros 0)   (697 Î¼s, 0.01%)</title><rect x="180.2" y="245" width="0.2" height="15.0" fill="rgb(242,112,112)" rx="2" ry="2" />
<text  x="183.23" y="255.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.data.Resolver.Credentials] (expanded macros 0)   (573 Î¼s, 0.01%)</title><rect x="347.4" y="213" width="0.1" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="350.38" y="223.5" ></text>
</g>
<g >
<title>org.scalasteward.core.application.Config.ForgeCfg (expanded macros 0)  (970 Î¼s, 0.02%)</title><rect x="399.2" y="245" width="0.2" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="402.23" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.forge.data.PullRequestNumber] (expanded macros 0)  (4,738 Î¼s, 0.08%)</title><rect x="370.1" y="245" width="0.9" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="373.09" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[org.scalasteward.core.data.Repo]] (expanded macros 0)  (752 Î¼s, 0.01%)</title><rect x="345.4" y="245" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="348.45" y="255.5" ></text>
</g>
<g >
<title>StewardAlg.this.logger.type =&gt; ?{def infoTotalTime: ?} (expanded macros 0)  (1,442 Î¼s, 0.02%)</title><rect x="180.5" y="245" width="0.3" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="183.48" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;head&quot;)]} (id 4681) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,737 Î¼s, 0.03%)</title><rect x="613.4" y="101" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="616.37" y="111.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;pin&quot;)]} (id 8252) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,072 Î¼s, 0.02%)</title><rect x="1089.7" y="181" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1092.72" y="191.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.data.Version] (expanded macros 0)   (3,202 Î¼s, 0.05%)</title><rect x="443.9" y="149" width="0.6" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="446.92" y="159.5" ></text>
</g>
<g >
<title>io.circe.Decoder[String] (expanded macros 0)  (644 Î¼s, 0.01%)</title><rect x="943.0" y="117" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="946.04" y="127.5" ></text>
</g>
<g >
<title>cats.effect.kernel.Async[[_]F[_]] (expanded macros 0)  (1,213 Î¼s, 0.02%)</title><rect x="258.3" y="245" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="261.34" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)] :: shapeless.HNil,Long :: shapeless.HNil]{type Out = R} (expanded macros 0)  (1,842 Î¼s, 0.03%)</title><rect x="792.1" y="197" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="795.05" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[cats.data.NonEmptyList[org.scalasteward.core.data.Update.ForArtifactId]] (expanded macros 0)  (1,505 Î¼s, 0.02%)</title><rect x="820.3" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="823.25" y="191.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.azurerepos.ClosePullRequestPayload]{type Out = K} (id 3411) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (962 Î¼s, 0.02%)</title><rect x="831.8" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="834.84" y="207.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.forge.gitea.GiteaApiAlg.Repository] =&gt; ?{def map: ?} (expanded macros 0)  (3,310 Î¼s, 0.05%)</title><rect x="138.0" y="245" width="0.6" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="140.98" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lub[Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)],Symbol with shapeless.tag.Tagged[_ &gt;: String(&quot;dependencyOverrides&quot;) with String(&quot;reviewers&quot;) with String(&quot;assignees&quot;) &lt;: String],Lub0] (expanded macros 0)  (864 Î¼s, 0.01%)</title><rect x="1070.9" y="101" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1073.86" y="111.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;number&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: shapeless.HNil,org.scalasteward.core.forge.data.PullRequestState :: org.scalasteward.core.forge.data.PullRequestNumber :: String :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (3,551 Î¼s, 0.06%)</title><rect x="749.9" y="181" width="0.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="752.88" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitea.GiteaApiAlg.User]{type Repr = V} (id 4526) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,967 Î¼s, 0.03%)</title><rect x="630.9" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="633.95" y="207.5" ></text>
</g>
<g >
<title>names.type =&gt; ?{def mkString_(x$1: ? &gt;: String(&quot;(&quot;), x$2: ? &gt;: String(&quot;, &quot;), x$3: ? &gt;: String(&quot;)&quot;)): ?} (expanded macros 0)  (1,050 Î¼s, 0.02%)</title><rect x="392.0" y="245" width="0.2" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="395.02" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.ReprDecoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;full_name&quot;)],String] :: shapeless.HNil] (id 5349) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveDecoder`)  (1,755 Î¼s, 0.03%)</title><rect x="785.2" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="788.17" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.util.Timestamp] (expanded macros 0)  (4,226 Î¼s, 0.07%)</title><rect x="445.2" y="181" width="0.8" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="448.22" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;number&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;base&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;head&quot;)] :: shapeless.HNil,Int :: String :: org.scalasteward.core.forge.gitea.GiteaApiAlg.PRBranchInfo :: org.scalasteward.core.forge.gitea.GiteaApiAlg.PRBranchInfo :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (11,666 Î¼s, 0.19%)</title><rect x="611.7" y="165" width="2.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="614.66" y="175.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,List]{type Lub = Option[io.circe.generic.extras.JsonKey]} (expanded macros 0)  (4,300 Î¼s, 0.07%)</title><rect x="1014.0" y="213" width="0.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1017.03" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)] :: shapeless.HNil,Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]] :: Option[List[String]] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (5,375 Î¼s, 0.09%)</title><rect x="1091.2" y="133" width="1.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1094.22" y="143.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;number&quot;)]} (id 4684) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,475 Î¼s, 0.02%)</title><rect x="611.9" y="149" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="614.90" y="159.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.data.Update.Grouped]] (id 2472) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (39,372 Î¼s, 0.64%)</title><rect x="682.9" y="245" width="7.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="685.85" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (881 Î¼s, 0.01%)</title><rect x="1092.1" y="101" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1095.08" y="111.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: None.type :: None.type :: shapeless.HNil,List]{type Lub = Option[io.circe.generic.extras.JsonKey]} (expanded macros 0)  (10,009 Î¼s, 0.16%)</title><rect x="1035.5" y="213" width="2.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1038.54" y="223.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.git.Sha1] (expanded macros 0)  (2,133 Î¼s, 0.03%)</title><rect x="605.7" y="181" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="608.72" y="191.5" ></text>
</g>
<g >
<title>dependenciesWithNextVersion.type =&gt; ?{def flatTraverse: ?} (expanded macros 0)  (573 Î¼s, 0.01%)</title><rect x="304.7" y="245" width="0.1" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="307.71" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.data.Resolver.Header] (expanded macros 0)  (1,754 Î¼s, 0.03%)</title><rect x="977.3" y="101" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="980.25" y="111.5" ></text>
</g>
<g >
<title>io.circe.Encoder[String] (expanded macros 0)  (615 Î¼s, 0.01%)</title><rect x="563.2" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="566.23" y="191.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.codec.UnwrappedCodec[org.scalasteward.core.forge.data.PullRequestNumber]] (id 4370) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (6,632 Î¼s, 0.11%)</title><rect x="1146.2" y="245" width="1.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1149.22" y="255.5" ></text>
</g>
<g >
<title>cats.kernel.Order[(Int, org.http4s.Uri)] (expanded macros 0)  (868 Î¼s, 0.01%)</title><rect x="286.4" y="245" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="289.45" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.codec.UnwrappedCodec[org.scalasteward.core.data.Version] (expanded macros 0)  (116,032 Î¼s, 1.88%)</title><rect x="1124.0" y="229" width="22.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1127.02" y="239.5" >i..</text>
</g>
<g >
<title>io.circe.Decoder[Option[org.scalasteward.core.forge.data.RepoOut]] (expanded macros 0)  (905 Î¼s, 0.01%)</title><rect x="758.2" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="761.21" y="191.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucketserver.Json.NewPR]{type Out = K} (id 4037) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (2,185 Î¼s, 0.04%)</title><rect x="847.2" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="850.20" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;assignee&quot;)],Option[String]] :: Option[Vector[String]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)],Option[Vector[String]]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;base&quot;)],Option[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;body&quot;)],Option[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;due_date&quot;)],Option[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;head&quot;)],Option[String]] :: Option[Vector[Int]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;labels&quot;)],Option[Vector[Int]]] :: Option[Int] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;milestone&quot;)],Option[Int]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)],Option[String]] :: shapeless.HNil] (id 4745) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (17,767 Î¼s, 0.29%)</title><rect x="579.7" y="197" width="3.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="582.67" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.data.CommitOut] (expanded macros 0)  (19,304 Î¼s, 0.31%)</title><rect x="742.9" y="229" width="3.7" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="745.91" y="239.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.github.Repository] (expanded macros 0)  (8,127 Î¼s, 0.13%)</title><rect x="783.9" y="229" width="1.6" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="786.95" y="239.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.decoding.ReprDecoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;location&quot;)],String] :: Option[org.scalasteward.core.data.Resolver.Credentials] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)],Option[org.scalasteward.core.data.Resolver.Credentials]] :: List[org.scalasteward.core.data.Resolver.Header] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)],List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil]] (id 1727) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (15,006 Î¼s, 0.24%)</title><rect x="959.9" y="149" width="2.9" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="962.90" y="159.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.forge.data.NewPullRequestData] =&gt; ?{def flatMap: ?} (expanded macros 0)  (1,002 Î¼s, 0.02%)</title><rect x="135.1" y="245" width="0.2" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="138.07" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.DependencyInfo] (expanded macros 0)  (841 Î¼s, 0.01%)</title><rect x="656.8" y="133" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="659.80" y="143.5" ></text>
</g>
<g >
<title>shapeless.Lub[Symbol with shapeless.tag.Tagged[String(&quot;ignore&quot;)],Symbol with shapeless.tag.Tagged[_ &gt;: String(&quot;fileExtensions&quot;) with String(&quot;limit&quot;) &lt;: String],Lub0] (expanded macros 0)  (1,008 Î¼s, 0.02%)</title><rect x="1104.8" y="149" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1107.78" y="159.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;pin&quot;)]} (id 8271) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,015 Î¼s, 0.02%)</title><rect x="1094.2" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1097.15" y="191.5" ></text>
</g>
<g >
<title>com.monovore.decline.Argument[better.files.File] (expanded macros 0)  (1,381 Î¼s, 0.02%)</title><rect x="297.8" y="245" width="0.3" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="300.85" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucketserver.Json.Ref]{type Repr = V} (expanded macros 3)   (2,994 Î¼s, 0.05%)</title><rect x="854.9" y="197" width="0.6" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="857.90" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,157 Î¼s, 0.02%)</title><rect x="592.4" y="165" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="595.36" y="175.5" ></text>
</g>
<g >
<title>((Boolean, String)) =&gt; ?{def pure: ?} (expanded macros 0)  (587 Î¼s, 0.01%)</title><rect x="11.5" y="245" width="0.2" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="14.55" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lub[Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)],Symbol with shapeless.tag.Tagged[_ &gt;: String(&quot;dependencyOverrides&quot;) with String(&quot;reviewers&quot;) with String(&quot;assignees&quot;) with String(&quot;buildRoots&quot;) &lt;: String],Lub0] (expanded macros 0)  (982 Î¼s, 0.02%)</title><rect x="1070.4" y="117" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1073.41" y="127.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitea.GiteaApiAlg.User]{type Out = K} (id 4525) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,686 Î¼s, 0.03%)</title><rect x="630.2" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="633.17" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;token&quot;)] :: shapeless.HNil,String :: shapeless.HNil]{type Out = R} (expanded macros 0)  (1,486 Î¼s, 0.02%)</title><rect x="787.0" y="197" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="789.97" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.codec.ReprAsObjectCodec[org.scalasteward.core.data.Resolver.IvyRepository with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;IvyRepository&quot;)],org.scalasteward.core.data.Resolver.IvyRepository] :+: org.scalasteward.core.data.Resolver.MavenRepository with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;MavenRepository&quot;)],org.scalasteward.core.data.Resolver.MavenRepository] :+: shapeless.CNil] (id 1685) (expanded macros 3) (tree from `io.circe.generic.extras.ConfigurableDeriver.deriveConfiguredCodec`)  (383,681 Î¼s, 6.22%)</title><rect x="924.6" y="197" width="73.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="927.60" y="207.5" >io.circe..</text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;number&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updateBranch&quot;)] :: shapeless.HNil,Option[org.scalasteward.core.forge.data.PullRequestNumber] :: Option[org.scalasteward.core.git.Branch] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (5,596 Î¼s, 0.09%)</title><rect x="639.2" y="133" width="1.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="642.16" y="143.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;fork&quot;)],Boolean] :: Long with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)],Long] :: org.scalasteward.core.forge.gitea.GiteaApiAlg.User with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;owner&quot;)],org.scalasteward.core.forge.gitea.GiteaApiAlg.User] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;archived&quot;)],Boolean] :: org.http4s.Uri with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;clone_url&quot;)],org.http4s.Uri] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;default_branch&quot;)],String] :: Option[org.scalasteward.core.forge.gitea.GiteaApiAlg.Repository] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;parent&quot;)],Option[org.scalasteward.core.forge.gitea.GiteaApiAlg.Repository]] :: shapeless.HNil] (id 4565) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (13,924 Î¼s, 0.23%)</title><rect x="625.7" y="197" width="2.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="628.69" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (12,892 Î¼s, 0.21%)</title><rect x="817.0" y="181" width="2.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="820.02" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;assignee&quot;)]} (id 4742) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,303 Î¼s, 0.02%)</title><rect x="574.9" y="181" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="577.92" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: shapeless.HNil,Option[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (3,904 Î¼s, 0.06%)</title><rect x="578.7" y="69" width="0.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="581.74" y="79.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.forge.bitbucket.RepositoryResponse] (expanded macros 0)  (14,196 Î¼s, 0.23%)</title><rect x="363.4" y="245" width="2.7" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="366.43" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.CrossDependency] (expanded macros 0)  (2,656 Î¼s, 0.04%)</title><rect x="675.8" y="181" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="678.79" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.UpdatePattern]{type Repr = V} (expanded macros 3)   (1,349 Î¼s, 0.02%)</title><rect x="662.8" y="197" width="0.2" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="665.76" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)]} (id 7650) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (583 Î¼s, 0.01%)</title><rect x="1059.3" y="69" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1062.32" y="79.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.ReprDecoder[Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;prefix&quot;)],Option[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;suffix&quot;)],Option[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;exact&quot;)],Option[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;contains&quot;)],Option[String]] :: shapeless.HNil] (id 8482) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveDecoder`)  (2,725 Î¼s, 0.04%)</title><rect x="799.4" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="802.41" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.UpdatesConfig]{type Repr = V} (id 8239) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,885 Î¼s, 0.03%)</title><rect x="1089.0" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1091.96" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;scalafmt&quot;)]} (id 7655) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (552 Î¼s, 0.01%)</title><rect x="1058.2" y="149" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1061.16" y="159.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[org.scalasteward.core.repoconfig.RepoConfig]] (expanded macros 0)  (1,407 Î¼s, 0.02%)</title><rect x="656.0" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="658.95" y="191.5" ></text>
</g>
<g >
<title>d.groupId.value.type =&gt; ?{def === : ?} (expanded macros 0)  (615 Î¼s, 0.01%)</title><rect x="303.8" y="245" width="0.1" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="306.75" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)]} (id 2071) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (868 Î¼s, 0.01%)</title><rect x="972.0" y="117" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="975.04" y="127.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)],Int] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: shapeless.HNil] (id 4814) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (7,165 Î¼s, 0.12%)</title><rect x="592.7" y="197" width="1.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="595.72" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;ignore&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (8,299 Î¼s, 0.13%)</title><rect x="1104.4" y="165" width="1.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1107.39" y="175.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.repocache.RepoCache] (expanded macros 0)   (589 Î¼s, 0.01%)</title><rect x="388.7" y="229" width="0.2" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="391.74" y="239.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;content&quot;)]} (id 3431) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (864 Î¼s, 0.01%)</title><rect x="830.0" y="181" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="833.01" y="191.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.codec.UnwrappedCodec[org.scalasteward.core.buildtool.sbt.data.SbtVersion]] (id 994) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (47,442 Î¼s, 0.77%)</title><rect x="1108.4" y="245" width="9.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1111.41" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[eu.timepit.refined.api.Refined[String,eu.timepit.refined.boolean.And[eu.timepit.refined.collection.Forall[eu.timepit.refined.boolean.Or[eu.timepit.refined.char.Digit,eu.timepit.refined.boolean.And[eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less['a']],eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Greater['f']]]]],eu.timepit.refined.collection.Size[eu.timepit.refined.generic.Equal[40]]]]] (expanded macros 0)  (14,065 Î¼s, 0.23%)</title><rect x="354.3" y="245" width="2.7" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="357.33" y="255.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.data.Resolver.IvyRepository]{type Repr = R} (expanded macros 0)  (1,427 Î¼s, 0.02%)</title><rect x="932.8" y="149" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="935.80" y="159.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.VersionPattern]{type Repr = V} (expanded macros 3)   (1,859 Î¼s, 0.03%)</title><rect x="797.8" y="197" width="0.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="800.76" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[String] (expanded macros 0)  (580 Î¼s, 0.01%)</title><rect x="536.3" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="539.29" y="191.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucket.CreateComment]{type Out = K} (id 3629) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (960 Î¼s, 0.02%)</title><rect x="508.6" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="511.62" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;body&quot;)],String] :: shapeless.HNil]] (id 4777) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (4,673 Î¼s, 0.08%)</title><rect x="562.5" y="213" width="0.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="565.45" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,List]{type Lub = Option[io.circe.generic.extras.JsonKey]} (expanded macros 0)  (10,798 Î¼s, 0.18%)</title><rect x="1065.8" y="213" width="2.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1068.75" y="223.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.encoding.ReprAsObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;pattern&quot;)],String] :: Option[org.scalasteward.core.data.Resolver.Credentials] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)],Option[org.scalasteward.core.data.Resolver.Credentials]] :: List[org.scalasteward.core.data.Resolver.Header] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)],List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil]] (id 2088) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (10,599 Î¼s, 0.17%)</title><rect x="976.1" y="149" width="2.0" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="979.08" y="159.5" ></text>
</g>
<g >
<title>x.commits.type =&gt; ?{def |+| : ?} (expanded macros 0)  (1,781 Î¼s, 0.03%)</title><rect x="1188.2" y="245" width="0.3" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="1191.16" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.PostUpdateHookConfig]{type Repr = V} (id 7189) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,224 Î¼s, 0.02%)</title><rect x="1010.4" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1013.41" y="207.5" ></text>
</g>
<g >
<title>cats.kernel.Order[cats.data.NonEmptyList[org.scalasteward.core.data.Version]] (expanded macros 0)  (779 Î¼s, 0.01%)</title><rect x="287.2" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="290.17" y="239.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.data.Update.ForGroupId] (expanded macros 0)  (28,790 Î¼s, 0.47%)</title><rect x="677.3" y="229" width="5.6" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="680.34" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[Option[org.scalasteward.core.data.Resolver.Credentials] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)],Option[org.scalasteward.core.data.Resolver.Credentials]] :: List[org.scalasteward.core.data.Resolver.Header] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)],List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil] (expanded macros 0)  (4,183 Î¼s, 0.07%)</title><rect x="968.1" y="117" width="0.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="971.12" y="127.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,List[org.scalasteward.core.data.Resolver.Header] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,984 Î¼s, 0.03%)</title><rect x="975.7" y="85" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="978.70" y="95.5" ></text>
</g>
<g >
<title>header.head.value.type =&gt; ?{def toIntOption: ?} (expanded macros 0)  (2,035 Î¼s, 0.03%)</title><rect x="328.2" y="245" width="0.4" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="331.25" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (1,736 Î¼s, 0.03%)</title><rect x="1014.5" y="165" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1017.52" y="175.5" ></text>
</g>
<g >
<title>Ordering[org.scalasteward.core.data.Scope[org.scalasteward.core.data.Dependency]] (expanded macros 0)  (1,153 Î¼s, 0.02%)</title><rect x="175.7" y="245" width="0.2" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="178.69" y="255.5" ></text>
</g>
<g >
<title>cats.kernel.Monoid[List[org.scalasteward.core.forge.github.InstallationOut]] (expanded macros 0)  (1,955 Î¼s, 0.03%)</title><rect x="281.1" y="245" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="284.05" y="255.5" ></text>
</g>
<g >
<title>configFileCandidates.type =&gt; ?{def flatMap: ?} (expanded macros 0)  (545 Î¼s, 0.01%)</title><rect x="300.0" y="245" width="0.1" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="302.99" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.ReprAsObjectEncoder[List[org.scalasteward.core.forge.azurerepos.AzureComment] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;comments&quot;)],List[org.scalasteward.core.forge.azurerepos.AzureComment]] :: Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;status&quot;)],Int] :: shapeless.HNil] (id 3450) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveEncoder`)  (3,861 Î¼s, 0.06%)</title><rect x="836.8" y="197" width="0.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="839.82" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)]} (id 7626) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (622 Î¼s, 0.01%)</title><rect x="1054.2" y="117" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1057.19" y="127.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil,org.scalasteward.core.repoconfig.UpdatesConfig :: Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]] :: Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy] :: Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]] :: List[String] :: List[String] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (9,061 Î¼s, 0.15%)</title><rect x="1058.3" y="149" width="1.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1061.26" y="159.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (2,510 Î¼s, 0.04%)</title><rect x="1037.0" y="165" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1039.97" y="175.5" ></text>
</g>
<g >
<title>io.circe.Decoder[String] (expanded macros 0)  (526 Î¼s, 0.01%)</title><rect x="476.4" y="165" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="479.41" y="175.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.bitbucketserver.Json.Project]] (id 4135) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (15,722 Î¼s, 0.25%)</title><rect x="521.9" y="245" width="3.0" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="524.87" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;crossDependency&quot;)]} (id 2310) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (2,775 Î¼s, 0.04%)</title><rect x="805.5" y="181" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="808.53" y="191.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.data.Resolver.Credentials] (expanded macros 0)  (20,983 Î¼s, 0.34%)</title><rect x="482.5" y="229" width="4.0" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="485.51" y="239.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucketserver.Json.Repository]{type Repr = V} (expanded macros 3)   (1,447 Î¼s, 0.02%)</title><rect x="858.3" y="197" width="0.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="861.31" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[List[org.scalasteward.core.data.Version]] (expanded macros 0)  (9,147 Î¼s, 0.15%)</title><rect x="442.9" y="181" width="1.7" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="445.88" y="191.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.data.PullRequestOut] (expanded macros 0)  (22,542 Î¼s, 0.37%)</title><rect x="747.7" y="229" width="4.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="750.74" y="239.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)]} (id 8266) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,371 Î¼s, 0.02%)</title><rect x="1096.2" y="101" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1099.21" y="111.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)] :: shapeless.HNil,String :: Option[String] :: List[org.scalasteward.core.data.Update.ForArtifactId] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (10,631 Î¼s, 0.17%)</title><rect x="824.6" y="197" width="2.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="827.61" y="207.5" ></text>
</g>
<g >
<title>cats.kernel.Semigroup[org.scalasteward.core.repoconfig.CommitsConfig] (expanded macros 0)  (1,602 Î¼s, 0.03%)</title><rect x="1188.2" y="229" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1191.19" y="239.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.util.UrlChecker[F]] =&gt; ?{def map: ?} (expanded macros 0)  (4,985 Î¼s, 0.08%)</title><rect x="148.7" y="245" width="1.0" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="151.71" y="255.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.repocache.RepoCache] (expanded macros 0)   (608 Î¼s, 0.01%)</title><rect x="377.3" y="229" width="0.1" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="380.26" y="239.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.ScalafmtConfig]{type Repr = V} (expanded macros 3)   (690 Î¼s, 0.01%)</title><rect x="1077.7" y="197" width="0.2" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="1080.73" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.forge.azurerepos.PullRequestCommentPayload] (expanded macros 0)  (16,375 Î¼s, 0.27%)</title><rect x="834.4" y="229" width="3.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="837.42" y="239.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.gitea.GiteaApiAlg.Label]] (id 4800) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (35,606 Î¼s, 0.58%)</title><rect x="587.3" y="245" width="6.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="590.28" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;exact&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;contains&quot;)] :: shapeless.HNil,Option[String] :: Option[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (2,565 Î¼s, 0.04%)</title><rect x="893.3" y="165" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="896.30" y="175.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[org.scalasteward.core.buildtool.sbt.data.SbtVersion]] (expanded macros 0)  (2,648 Î¼s, 0.04%)</title><rect x="479.0" y="181" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="481.96" y="191.5" ></text>
</g>
<g >
<title>cats.Traverse[List] (expanded macros 0)  (562 Î¼s, 0.01%)</title><rect x="399.8" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="402.80" y="239.5" ></text>
</g>
<g >
<title>x$3.type =&gt; ?{def =!= : ?} (expanded macros 0)  (762 Î¼s, 0.01%)</title><rect x="1184.7" y="245" width="0.1" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="1187.68" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitea.GiteaApiAlg.CommentResp]{type Repr = V} (expanded macros 3)   (3,143 Î¼s, 0.05%)</title><rect x="548.8" y="197" width="0.6" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="551.81" y="207.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.forge.data.PullRequestOut] =&gt; ?{def adaptErr: ?} (expanded macros 0)  (1,005 Î¼s, 0.02%)</title><rect x="135.3" y="245" width="0.2" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="138.32" y="255.5" ></text>
</g>
<g >
<title>expr.datePart.type =&gt; ?{def allOf: ?} (expanded macros 0)  (3,235 Î¼s, 0.05%)</title><rect x="316.2" y="245" width="0.6" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="319.17" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucket.CreateComment]{type Repr = V} (id 3630) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,286 Î¼s, 0.02%)</title><rect x="509.1" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="512.15" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;maybeRepoConfig&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;maybeRepoConfigParsingError&quot;)] :: shapeless.HNil,Option[org.scalasteward.core.repoconfig.RepoConfig] :: Option[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (3,054 Î¼s, 0.05%)</title><rect x="653.1" y="165" width="0.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="656.12" y="175.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;pattern&quot;)],String] :: Option[org.scalasteward.core.data.Resolver.Credentials] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)],Option[org.scalasteward.core.data.Resolver.Credentials]] :: List[org.scalasteward.core.data.Resolver.Header] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)],List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil] (expanded macros 0)  (6,851 Î¼s, 0.11%)</title><rect x="981.8" y="133" width="1.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="984.76" y="143.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = 3} (id 2275) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (2,503 Î¼s, 0.04%)</title><rect x="1173.1" y="245" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1176.13" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;ref&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;sha&quot;)] :: shapeless.HNil,String :: org.scalasteward.core.git.Sha1 :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (6,007 Î¼s, 0.10%)</title><rect x="598.0" y="181" width="1.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="600.97" y="191.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[org.scalasteward.core.util.Timestamp with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;failedAt&quot;)],org.scalasteward.core.util.Timestamp] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;message&quot;)],String] :: shapeless.HNil]] (id 6813) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (6,736 Î¼s, 0.11%)</title><rect x="648.1" y="213" width="1.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="651.08" y="223.5" ></text>
</g>
<g >
<title>cats.Functor[org.scalasteward.core.data.Scope] (expanded macros 0)  (1,504 Î¼s, 0.02%)</title><rect x="1186.5" y="229" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1189.49" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;target_branch&quot;)] :: shapeless.HNil,org.scalasteward.core.git.Branch :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (2,228 Î¼s, 0.04%)</title><rect x="885.8" y="53" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="888.77" y="63.5" ></text>
</g>
<g >
<title>io.circe.Decoder[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]] (expanded macros 0)  (1,359 Î¼s, 0.02%)</title><rect x="1062.7" y="165" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1065.66" y="175.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;color&quot;)],String] :: shapeless.HNil] (id 4833) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (4,639 Î¼s, 0.08%)</title><rect x="568.2" y="197" width="0.9" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="571.17" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;exact&quot;)]} (id 8477) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (526 Î¼s, 0.01%)</title><rect x="798.9" y="149" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="801.93" y="159.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[Some[Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]]] :: Some[Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy]] :: Some[Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]]] :: Some[List[String]] :: Some[List[String]] :: Some[List[org.scalasteward.core.repoconfig.GroupRepoConfig]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil]{type Out = OutT} (expanded macros 0)  (3,957 Î¼s, 0.06%)</title><rect x="1048.5" y="133" width="0.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1051.47" y="143.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[org.scalasteward.core.data.CrossDependency with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;crossDependency&quot;)],org.scalasteward.core.data.CrossDependency] :: cats.data.NonEmptyList[org.scalasteward.core.data.Version] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;newerVersions&quot;)],cats.data.NonEmptyList[org.scalasteward.core.data.Version]] :: Option[org.scalasteward.core.data.GroupId] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;newerGroupId&quot;)],Option[org.scalasteward.core.data.GroupId]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;newerArtifactId&quot;)],Option[String]] :: shapeless.HNil]] (id 2365) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (17,910 Î¼s, 0.29%)</title><rect x="672.9" y="213" width="3.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="675.87" y="223.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;body&quot;)]} (id 4775) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,644 Î¼s, 0.03%)</title><rect x="561.9" y="181" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="564.93" y="191.5" ></text>
</g>
<g >
<title>F[Unit] =&gt; ?{def onError: ?} (expanded macros 0)  (2,039 Î¼s, 0.03%)</title><rect x="117.0" y="245" width="0.4" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="119.97" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.gitea.GiteaApiAlg.CreateIssueCommentOption]] (id 4766) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (23,972 Î¼s, 0.39%)</title><rect x="558.8" y="245" width="4.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="561.76" y="255.5" ></text>
</g>
<g >
<title>org.scalasteward.core.util.uri.authorityWithUserInfo.type =&gt; ?{def compose: ?} (expanded macros 0)  (1,145 Î¼s, 0.02%)</title><rect x="408.0" y="245" width="0.2" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="410.96" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil,Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]] :: List[String] :: List[String] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (5,324 Î¼s, 0.09%)</title><rect x="1059.0" y="101" width="1.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1061.98" y="111.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.bitbucket.DefaultReviewers]] (id 3681) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (23,002 Î¼s, 0.37%)</title><rect x="510.5" y="245" width="4.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="513.54" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.util.RecordToMap[Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)],Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]]] :: Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)],Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy]] :: Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)],Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)],List[String]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)],List[String]] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)],List[org.scalasteward.core.repoconfig.GroupRepoConfig]] :: shapeless.HNil] (expanded macros 0)  (6,159 Î¼s, 0.10%)</title><rect x="1045.6" y="149" width="1.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1048.62" y="159.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (4,585 Î¼s, 0.07%)</title><rect x="1036.6" y="181" width="0.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1039.57" y="191.5" ></text>
</g>
<g >
<title>io.circe.Decoder[List[org.scalasteward.core.forge.bitbucketserver.Json.Condition]] (expanded macros 0)  (3,076 Î¼s, 0.05%)</title><rect x="332.6" y="245" width="0.6" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="335.62" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.repoconfig.ScalafmtConfig] (expanded macros 0)  (818 Î¼s, 0.01%)</title><rect x="1065.2" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1068.25" y="191.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.edit.scalafix.ScalafixMigrations]{type Repr = R} (expanded macros 0)  (5,801 Î¼s, 0.09%)</title><rect x="1152.5" y="213" width="1.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1155.55" y="223.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.data.UserOut]{type Repr = V} (expanded macros 3)   (1,159 Î¼s, 0.02%)</title><rect x="760.3" y="197" width="0.2" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="763.32" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;groupId&quot;)]} (id 2783) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (904 Î¼s, 0.01%)</title><rect x="696.4" y="181" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="699.44" y="191.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[None.type :: Some[List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil]{type Out = OutT} (expanded macros 0)  (1,420 Î¼s, 0.02%)</title><rect x="951.4" y="101" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="954.45" y="111.5" ></text>
</g>
<g >
<title>cats.data.NonEmptyList[String] =&gt; ?{def mkString_(x$1: ? &gt;: String(&quot;{&quot;), x$2: ? &gt;: String(&quot;, &quot;), x$3: ? &gt;: String(&quot;}&quot;)): ?} (expanded macros 0)  (1,299 Î¼s, 0.02%)</title><rect x="253.7" y="245" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="256.73" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (3,727 Î¼s, 0.06%)</title><rect x="1102.1" y="149" width="0.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1105.07" y="159.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.forge.bitbucket.CreateComment] (expanded macros 0)  (1,672 Î¼s, 0.03%)</title><rect x="362.1" y="245" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="365.12" y="255.5" ></text>
</g>
<g >
<title>org.scalasteward.core.data.Version =&gt; ?{def === : ?} (expanded macros 0)  (1,983 Î¼s, 0.03%)</title><rect x="403.5" y="245" width="0.4" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="406.53" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Update.Grouped]{type Out = K} (id 2454) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (2,476 Î¼s, 0.04%)</title><rect x="823.0" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="826.01" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[List[org.scalasteward.core.repoconfig.UpdatePattern] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;allowPreReleases&quot;)],List[org.scalasteward.core.repoconfig.UpdatePattern]] :: List[org.scalasteward.core.repoconfig.UpdatePattern] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;ignore&quot;)],List[org.scalasteward.core.repoconfig.UpdatePattern]] :: Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)],Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]]] :: Option[List[String]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)],Option[List[String]]] :: shapeless.HNil] (expanded macros 0)  (7,759 Î¼s, 0.13%)</title><rect x="1106.9" y="181" width="1.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1109.93" y="191.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.gitlab.ProjectId] (expanded macros 0)  (9,933 Î¼s, 0.16%)</title><rect x="791.0" y="229" width="1.9" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="793.97" y="239.5" ></text>
</g>
<g >
<title>F[(org.scalasteward.core.data.RepoData, org.scalasteward.core.forge.data.RepoOut)] =&gt; ?{def flatMap: ?} (expanded macros 0)  (1,469 Î¼s, 0.02%)</title><rect x="49.5" y="245" width="0.3" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="52.52" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitea.GiteaApiAlg.CreateLabelReq]{type Out = K} (id 4824) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,928 Î¼s, 0.03%)</title><rect x="565.3" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="568.27" y="207.5" ></text>
</g>
<g >
<title>(=&gt; (Nothing, Nothing)) =&gt; org.http4s.QueryParam[?T] (expanded macros 0)   (1,204 Î¼s, 0.02%)</title><rect x="21.6" y="245" width="0.2" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text  x="24.57" y="255.5" ></text>
</g>
<g >
<title>x.buildRoots.type =&gt; ?{def |+| : ?} (expanded macros 0)  (971 Î¼s, 0.02%)</title><rect x="1188.0" y="245" width="0.2" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="1190.97" y="255.5" ></text>
</g>
<g >
<title>cats.MonadError[[_]F[_],Throwable] (expanded macros 0)  (3,171 Î¼s, 0.05%)</title><rect x="243.8" y="245" width="0.6" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="246.75" y="255.5" ></text>
</g>
<g >
<title>String =&gt; ?{def apply: ?} (expanded macros 0)  (614 Î¼s, 0.01%)</title><rect x="180.8" y="245" width="0.1" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="183.78" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Update.ForGroupId]{type Out = K} (id 2401) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (2,078 Î¼s, 0.03%)</title><rect x="814.4" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="817.37" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.update.artifact.ArtifactChanges]{type Repr = V} (expanded macros 3)   (1,146 Î¼s, 0.02%)</title><rect x="1171.1" y="197" width="0.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="1174.15" y="207.5" ></text>
</g>
<g >
<title>scala.collection.Factory[Symbol with shapeless.tag.Tagged[_ &gt;: String(&quot;headers&quot;) with String(&quot;credentials&quot;) with String(&quot;location&quot;) &lt;: String],List[Symbol with shapeless.tag.Tagged[_ &gt;: String(&quot;headers&quot;) with String(&quot;credentials&quot;) with String(&quot;location&quot;) &lt;: String]]] (expanded macros 0)  (2,283 Î¼s, 0.04%)</title><rect x="994.9" y="117" width="0.4" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="997.87" y="127.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.git.Branch] (expanded macros 0)  (1,326 Î¼s, 0.02%)</title><rect x="742.0" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="745.00" y="191.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.ReprAsObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;namespace&quot;)],String] :: shapeless.HNil] (id 5407) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveEncoder`)  (2,415 Î¼s, 0.04%)</title><rect x="878.7" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="881.75" y="207.5" ></text>
</g>
<g >
<title>expr.type =&gt; ?{def next: ?} (expanded macros 0)  (1,454 Î¼s, 0.02%)</title><rect x="316.8" y="245" width="0.3" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="319.79" y="255.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.Validate[Char,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less['a']]]{type R = RA} (expanded macros 0)  (3,190 Î¼s, 0.05%)</title><rect x="355.6" y="165" width="0.6" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="358.59" y="175.5" ></text>
</g>
<g >
<title>List[org.scalasteward.core.forge.github.Repository] =&gt; ?{def flatTraverse: ?} (expanded macros 0)  (1,204 Î¼s, 0.02%)</title><rect x="171.1" y="245" width="0.2" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="174.09" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[String] (expanded macros 0)  (1,060 Î¼s, 0.02%)</title><rect x="593.7" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="596.69" y="191.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;label&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;ref&quot;)],String] :: org.scalasteward.core.git.Sha1 with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;sha&quot;)],org.scalasteward.core.git.Sha1] :: shapeless.HNil] (id 4646) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (9,781 Î¼s, 0.16%)</title><rect x="599.3" y="197" width="1.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="602.27" y="207.5" ></text>
</g>
<g >
<title>F[List[org.scalasteward.core.buildtool.mill.MillModule]] =&gt; ?{def map: ?} (expanded macros 0)  (2,116 Î¼s, 0.03%)</title><rect x="68.2" y="245" width="0.4" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="71.20" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;label&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;ref&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;sha&quot;)] :: shapeless.HNil,String :: String :: org.scalasteward.core.git.Sha1 :: shapeless.HNil]{type Out = R} (expanded macros 0)  (8,874 Î¼s, 0.14%)</title><rect x="597.4" y="197" width="1.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="600.42" y="207.5" ></text>
</g>
<g >
<title>org.scalasteward.core.data.Version =&gt; ?{def &lt; : ?} (expanded macros 0)  (2,136 Î¼s, 0.03%)</title><rect x="403.1" y="245" width="0.4" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="406.12" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[org.scalasteward.core.data.Resolver.Credentials]] (expanded macros 0)  (5,360 Î¼s, 0.09%)</title><rect x="942.0" y="117" width="1.0" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="945.02" y="127.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Vector[String]] (expanded macros 0)  (899 Î¼s, 0.01%)</title><rect x="582.9" y="165" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="585.90" y="175.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.data.UpdateState]{type Out = K} (id 4469) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (771 Î¼s, 0.01%)</title><rect x="861.1" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="864.12" y="207.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[Some[List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil]{type Out = OutT} (expanded macros 0)  (843 Î¼s, 0.01%)</title><rect x="951.6" y="85" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="954.56" y="95.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.GroupRepoConfig]{type Out = K} (id 7108) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (880 Î¼s, 0.01%)</title><rect x="658.9" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="661.87" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.Version] (expanded macros 0)  (2,057 Î¼s, 0.03%)</title><rect x="478.3" y="181" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="481.34" y="191.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;assignee&quot;)],Option[String]] :: Option[Vector[String]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)],Option[Vector[String]]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;base&quot;)],Option[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;body&quot;)],Option[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;due_date&quot;)],Option[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;head&quot;)],Option[String]] :: Option[Vector[Int]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;labels&quot;)],Option[Vector[Int]]] :: Option[Int] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;milestone&quot;)],Option[Int]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)],Option[String]] :: shapeless.HNil]] (id 4744) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (18,725 Î¼s, 0.30%)</title><rect x="579.5" y="213" width="3.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="582.49" y="223.5" ></text>
</g>
<g >
<title>io.circe.Decoder[cats.data.NonEmptyList[org.scalasteward.core.data.Version]] (expanded macros 0)  (4,364 Î¼s, 0.07%)</title><rect x="675.0" y="181" width="0.8" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="677.96" y="191.5" ></text>
</g>
<g >
<title>F[List[org.scalasteward.core.edit.EditAttempt]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (2,289 Î¼s, 0.04%)</title><rect x="72.3" y="245" width="0.4" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="75.26" y="255.5" ></text>
</g>
<g >
<title>cats.FlatMap[F] (expanded macros 0)  (3,853 Î¼s, 0.06%)</title><rect x="106.9" y="229" width="0.7" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="109.87" y="239.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[List[org.scalasteward.core.forge.github.Repository] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;repositories&quot;)],List[org.scalasteward.core.forge.github.Repository]] :: shapeless.HNil]] (id 5325) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (4,378 Î¼s, 0.07%)</title><rect x="782.6" y="213" width="0.9" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="785.62" y="223.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.repoconfig.PullRequestUpdateFilter] (expanded macros 0)  (1,100 Î¼s, 0.02%)</title><rect x="796.1" y="165" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="799.11" y="175.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.VersionPattern]{type Repr = V} (id 8470) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,344 Î¼s, 0.02%)</title><rect x="798.1" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="801.11" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.gitea.GiteaApiAlg.User]] (id 4520) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (28,891 Î¼s, 0.47%)</title><rect x="628.4" y="245" width="5.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="631.35" y="255.5" ></text>
</g>
<g >
<title>groupId.type =&gt; ?{def === : ?} (expanded macros 0)  (1,334 Î¼s, 0.02%)</title><rect x="327.8" y="245" width="0.2" height="15.0" fill="rgb(95,242,95)" rx="2" ry="2" />
<text  x="330.79" y="255.5" ></text>
</g>
<g >
<title>preCommit.type =&gt; ?{def map: ?} (expanded macros 0)  (1,302 Î¼s, 0.02%)</title><rect x="409.9" y="245" width="0.3" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="412.92" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;color&quot;)] :: shapeless.HNil,String :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (3,985 Î¼s, 0.06%)</title><rect x="567.3" y="181" width="0.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="570.27" y="191.5" ></text>
</g>
<g >
<title>cats.kernel.Order[Int] (expanded macros 0)  (1,113 Î¼s, 0.02%)</title><rect x="286.1" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="289.11" y="239.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[None.type :: Some[Option[Boolean]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;commitMessage&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;addToGitBlameIgnoreRevs&quot;)] :: shapeless.HNil]{type Out = OutT} (expanded macros 0)  (796 Î¼s, 0.01%)</title><rect x="1006.2" y="149" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1009.23" y="159.5" ></text>
</g>
<g >
<title>F[List[org.scalasteward.core.data.Update.ForArtifactId]] =&gt; ?{def map: ?} (expanded macros 0)  (2,638 Î¼s, 0.04%)</title><rect x="70.6" y="245" width="0.5" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="73.64" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[List[org.scalasteward.core.data.Dependency]] (expanded macros 0)  (3,555 Î¼s, 0.06%)</title><rect x="331.9" y="245" width="0.7" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="334.94" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Update.Grouped]{type Out = K} (id 2477) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (3,076 Î¼s, 0.05%)</title><rect x="685.1" y="197" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="688.10" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Long] (expanded macros 0)  (616 Î¼s, 0.01%)</title><rect x="633.5" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="636.50" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Resolver.MavenRepository]{type Repr = V} (expanded macros 3)   (2,336 Î¼s, 0.04%)</title><rect x="954.5" y="133" width="0.4" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="957.49" y="143.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)],Int] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: shapeless.HNil]] (id 4813) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (7,922 Î¼s, 0.13%)</title><rect x="592.6" y="213" width="1.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="595.58" y="223.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;pullRequests&quot;)]} (id 7656) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (529 Î¼s, 0.01%)</title><rect x="1057.9" y="165" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1060.92" y="175.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.Dependency] (expanded macros 0)  (2,563 Î¼s, 0.04%)</title><rect x="332.1" y="229" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="335.13" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (848 Î¼s, 0.01%)</title><rect x="1014.7" y="149" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1017.69" y="159.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.github.RepositoriesOut]{type Out = K} (id 5317) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (728 Î¼s, 0.01%)</title><rect x="781.6" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="784.58" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[List[org.scalasteward.core.repoconfig.GroupRepoConfig]] (expanded macros 0)  (1,378 Î¼s, 0.02%)</title><rect x="1063.9" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1066.90" y="191.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.repoconfig.RepoConfigAlg.ConfigParsingResult] =&gt; ?{def flatMap: ?} (expanded macros 0)  (1,369 Î¼s, 0.02%)</title><rect x="145.9" y="245" width="0.2" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="148.86" y="255.5" ></text>
</g>
<g >
<title>dependency.version.type =&gt; ?{def &lt;= : ?} (expanded macros 0)  (601 Î¼s, 0.01%)</title><rect x="305.9" y="245" width="0.2" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="308.94" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.buildtool.mill.Modules] (expanded macros 0)  (3,498 Î¼s, 0.06%)</title><rect x="357.4" y="245" width="0.6" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="360.38" y="255.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.repoconfig.PullRequestFrequency] (expanded macros 0)   (684 Î¼s, 0.01%)</title><rect x="1035.3" y="149" width="0.1" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="1038.29" y="159.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: shapeless.HNil,List[org.scalasteward.core.forge.bitbucketserver.Json.DefaultReviewer] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (2,999 Î¼s, 0.05%)</title><rect x="713.6" y="197" width="0.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="716.62" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitea.GiteaApiAlg.CreateLabelReq]{type Repr = V} (id 4825) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (2,295 Î¼s, 0.04%)</title><rect x="566.1" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="569.14" y="207.5" ></text>
</g>
<g >
<title>((com.monovore.decline.Opts[org.scalasteward.core.git.Author], com.monovore.decline.Opts[better.files.File], com.monovore.decline.Opts[Boolean])) =&gt; ?{def mapN: ?} (expanded macros 0)  (1,933 Î¼s, 0.03%)</title><rect x="20.5" y="245" width="0.3" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="23.46" y="255.5" ></text>
</g>
<g >
<title>org.scalasteward.core.util.HttpJsonClient[F] (expanded macros 0)  (1,229 Î¼s, 0.02%)</title><rect x="407.6" y="245" width="0.3" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="410.62" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.ReprAsObjectEncoder[List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)],List[String]] :: shapeless.HNil]] (id 5263) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (3,364 Î¼s, 0.05%)</title><rect x="869.8" y="213" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="872.75" y="223.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;key&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;value&quot;)],String] :: shapeless.HNil]] (id 1667) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (6,638 Î¼s, 0.11%)</title><rect x="490.7" y="213" width="1.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="493.74" y="223.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Resolver.MavenRepository]{type Out = K} (id 1946) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,819 Î¼s, 0.03%)</title><rect x="984.5" y="133" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="987.50" y="143.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;updatedAt&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;versions&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;maybeError&quot;)] :: shapeless.HNil,org.scalasteward.core.util.Timestamp :: List[org.scalasteward.core.data.Version] :: Option[String] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (30,848 Î¼s, 0.50%)</title><rect x="431.6" y="197" width="5.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="434.55" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[String] (expanded macros 0)  (645 Î¼s, 0.01%)</title><rect x="810.3" y="165" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="813.31" y="175.5" ></text>
</g>
<g >
<title>((Nothing, Nothing)) =&gt; Int (expanded macros 0)   (1,656 Î¼s, 0.03%)</title><rect x="11.8" y="245" width="0.3" height="15.0" fill="rgb(241,111,111)" rx="2" ry="2" />
<text  x="14.77" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[org.scalasteward.core.forge.data.PullRequestNumber with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)],org.scalasteward.core.forge.data.PullRequestNumber] :: Int with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;version&quot;)],Int] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)],String] :: org.scalasteward.core.forge.data.PullRequestState with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)],org.scalasteward.core.forge.data.PullRequestState] :: scala.collection.immutable.Map[String,cats.data.NonEmptyList[org.scalasteward.core.forge.bitbucketserver.Json.Link]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;links&quot;)],scala.collection.immutable.Map[String,cats.data.NonEmptyList[org.scalasteward.core.forge.bitbucketserver.Json.Link]]] :: shapeless.HNil]] (id 4109) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (9,233 Î¼s, 0.15%)</title><rect x="727.4" y="213" width="1.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="730.44" y="223.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[String]] (expanded macros 0)  (1,182 Î¼s, 0.02%)</title><rect x="722.8" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="725.80" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;baseSha1&quot;)]} (id 6591) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,043 Î¼s, 0.02%)</title><rect x="637.7" y="181" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="640.71" y="191.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.data.ArtifactId] (expanded macros 0)  (1,827 Î¼s, 0.03%)</title><rect x="480.0" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="482.97" y="191.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.forge.github.GitHubAssignees] (expanded macros 0)  (1,393 Î¼s, 0.02%)</title><rect x="386.3" y="245" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="389.28" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)]} (id 7856) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (655 Î¼s, 0.01%)</title><rect x="1046.4" y="101" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1049.43" y="111.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;location&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,List]{type Lub = Symbol} (expanded macros 0)  (17,104 Î¼s, 0.28%)</title><rect x="964.1" y="149" width="3.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="967.06" y="159.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucketserver.Json.DefaultReviewer]{type Repr = V} (id 4006) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,452 Î¼s, 0.02%)</title><rect x="717.0" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="720.04" y="207.5" ></text>
</g>
<g >
<title>F[String] =&gt; ?{def map: ?} (expanded macros 0)  (2,246 Î¼s, 0.04%)</title><rect x="93.4" y="245" width="0.4" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="96.37" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.ReprAsObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;content&quot;)],String] :: shapeless.HNil] (id 3434) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveEncoder`)  (2,919 Î¼s, 0.05%)</title><rect x="830.3" y="197" width="0.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="833.34" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Resolver.Header]{type Repr = V} (expanded macros 3)   (2,284 Î¼s, 0.04%)</title><rect x="489.0" y="197" width="0.5" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="492.02" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;labels&quot;)]} (id 5290) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (846 Î¼s, 0.01%)</title><rect x="872.6" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="875.59" y="191.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.gitea.GiteaApiAlg.Repository] (expanded macros 0)  (53,435 Î¼s, 0.87%)</title><rect x="618.1" y="229" width="10.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="621.13" y="239.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucketserver.Json.Branch]{type Repr = V} (expanded macros 3)   (3,288 Î¼s, 0.05%)</title><rect x="705.3" y="197" width="0.7" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="708.35" y="207.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[String] (expanded macros 0)  (1,646 Î¼s, 0.03%)</title><rect x="1182.1" y="229" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1185.07" y="239.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitea.GiteaApiAlg.CreateForkOption]{type Repr = V} (id 4507) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (2,012 Î¼s, 0.03%)</title><rect x="555.8" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="558.77" y="207.5" ></text>
</g>
<g >
<title>cats.Functor[org.scalasteward.core.data.Scope] (expanded macros 0)  (651 Î¼s, 0.01%)</title><rect x="329.6" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="332.61" y="239.5" ></text>
</g>
<g >
<title>com.monovore.decline.Argument[String] (expanded macros 0)  (6,014 Î¼s, 0.10%)</title><rect x="296.7" y="245" width="1.1" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="299.70" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;organization&quot;)]} (id 4511) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,775 Î¼s, 0.03%)</title><rect x="557.0" y="165" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="560.00" y="175.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.coursier.VersionsCache.Value]] (id 1315) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (142,915 Î¼s, 2.32%)</title><rect x="421.4" y="245" width="27.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="424.41" y="255.5" >s..</text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;commits&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;pullRequests&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;scalafmt&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil,org.scalasteward.core.repoconfig.CommitsConfig :: org.scalasteward.core.repoconfig.PullRequestsConfig :: org.scalasteward.core.repoconfig.ScalafmtConfig :: org.scalasteward.core.repoconfig.UpdatesConfig :: Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]] :: Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy] :: Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]] :: List[String] :: List[String] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (13,129 Î¼s, 0.21%)</title><rect x="1057.5" y="197" width="2.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1060.48" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Resolver.IvyRepository]{type Repr = V} (id 2077) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (2,206 Î¼s, 0.04%)</title><rect x="974.3" y="133" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="977.33" y="143.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;newVersion&quot;)]} (id 2781) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (840 Î¼s, 0.01%)</title><rect x="697.2" y="149" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="700.21" y="159.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.util.Timestamp]{type Repr = R :: shapeless.HNil} (expanded macros 3)   (908 Î¼s, 0.01%)</title><rect x="1148.2" y="197" width="0.1" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="1151.17" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[List[org.scalasteward.core.data.DependencyInfo]] (expanded macros 0)  (2,489 Î¼s, 0.04%)</title><rect x="657.0" y="149" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="659.96" y="159.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;value&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;resolvers&quot;)] :: shapeless.HNil,A :: List[org.scalasteward.core.data.Resolver] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (13,548 Î¼s, 0.22%)</title><rect x="498.6" y="197" width="2.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="501.57" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.repocache.RefreshErrorAlg.Entry] (expanded macros 0)  (4,122 Î¼s, 0.07%)</title><rect x="387.3" y="245" width="0.8" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="390.32" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.buildtool.sbt.data.SbtVersion] (id 998) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (2,211 Î¼s, 0.04%)</title><rect x="1114.7" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1117.68" y="207.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.repoconfig.ScalafmtConfig]{type Repr = R} (expanded macros 0)  (600 Î¼s, 0.01%)</title><rect x="1076.5" y="213" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1079.47" y="223.5" ></text>
</g>
<g >
<title>x$13.value.type =&gt; ?{def === : ?} (expanded macros 0)  (741 Î¼s, 0.01%)</title><rect x="1182.6" y="245" width="0.1" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="1185.59" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[org.scalasteward.core.forge.bitbucketserver.Json.User with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;user&quot;)],org.scalasteward.core.forge.bitbucketserver.Json.User] :: shapeless.HNil]] (id 4217) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (3,619 Î¼s, 0.06%)</title><rect x="526.9" y="213" width="0.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="529.91" y="223.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[Option[String]] (expanded macros 0)  (627 Î¼s, 0.01%)</title><rect x="409.1" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="412.09" y="239.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.codec.ReprAsObjectCodec[Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;message&quot;)],Option[String]] :: shapeless.HNil]] (id 7078) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (4,567 Î¼s, 0.07%)</title><rect x="1001.7" y="213" width="0.9" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1004.70" y="223.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.forge.github.GitHubLabels]] (id 5281) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (17,131 Î¼s, 0.28%)</title><rect x="870.4" y="245" width="3.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="873.40" y="255.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.forge.bitbucketserver.Json.Comment] =&gt; ?{def map: ?} (expanded macros 0)  (1,309 Î¼s, 0.02%)</title><rect x="133.3" y="245" width="0.3" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="136.34" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.ReprDecoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;token&quot;)],String] :: shapeless.HNil] (id 5363) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveDecoder`)  (2,301 Î¼s, 0.04%)</title><rect x="787.4" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="790.36" y="207.5" ></text>
</g>
<g >
<title>List[org.scalasteward.core.nurture.UpdateInfoUrl] =&gt; ?{def filterA: ?} (expanded macros 0)  (761 Î¼s, 0.01%)</title><rect x="171.3" y="245" width="0.2" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="174.32" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;archived&quot;)] :: shapeless.HNil,Boolean :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,753 Î¼s, 0.03%)</title><rect x="756.9" y="117" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="759.85" y="127.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Resolver.IvyRepository]{type Out = K} (id 2074) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,685 Î¼s, 0.03%)</title><rect x="973.2" y="133" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="976.25" y="143.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[Some[List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil]{type Out = OutT} (expanded macros 0)  (901 Î¼s, 0.01%)</title><rect x="931.9" y="85" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="934.91" y="95.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;namespace&quot;)] :: shapeless.HNil,String :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,609 Î¼s, 0.03%)</title><rect x="878.4" y="181" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="881.35" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.bitbucketserver.Json.PR]{type Repr = V} (id 4096) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,674 Î¼s, 0.03%)</title><rect x="725.7" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="728.71" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]] (expanded macros 0)  (1,233 Î¼s, 0.02%)</title><rect x="1064.5" y="165" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1067.49" y="175.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;contains&quot;)]} (id 8498) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (721 Î¼s, 0.01%)</title><rect x="893.6" y="133" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="896.59" y="143.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.decoding.ReprDecoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;pattern&quot;)],String] :: Option[org.scalasteward.core.data.Resolver.Credentials] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)],Option[org.scalasteward.core.data.Resolver.Credentials]] :: List[org.scalasteward.core.data.Resolver.Header] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)],List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil]] (id 1851) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (17,069 Î¼s, 0.28%)</title><rect x="939.9" y="149" width="3.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="942.90" y="159.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[List[String]]] (expanded macros 0)  (947 Î¼s, 0.02%)</title><rect x="887.4" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="890.43" y="191.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.DependencyInfo] (expanded macros 0)  (1,923 Î¼s, 0.03%)</title><rect x="655.1" y="133" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="658.12" y="143.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[org.http4s.Uri with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;href&quot;)],org.http4s.Uri] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],Option[String]] :: shapeless.HNil]] (id 4027) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (5,598 Î¼s, 0.09%)</title><rect x="722.0" y="213" width="1.0" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="724.97" y="223.5" ></text>
</g>
<g >
<title>cats.Foldable[org.scalasteward.core.util.Nel] (expanded macros 0)  (2,317 Î¼s, 0.04%)</title><rect x="230.9" y="245" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="233.94" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repocache.RefreshErrorAlg.Entry]{type Repr = V} (id 6806) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,115 Î¼s, 0.02%)</title><rect x="647.3" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="650.25" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.util.Timestamp] (expanded macros 0)  (958 Î¼s, 0.02%)</title><rect x="649.1" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="652.12" y="191.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.repoconfig.PullRequestGroup] (expanded macros 0)   (700 Î¼s, 0.01%)</title><rect x="1034.9" y="149" width="0.1" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="1037.86" y="159.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.coursier.VersionsCache.Value]{type Repr = V} (expanded macros 3)   (5,095 Î¼s, 0.08%)</title><rect x="429.3" y="197" width="1.0" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="432.35" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.SemVer.Change] (expanded macros 0)  (1,043 Î¼s, 0.02%)</title><rect x="347.6" y="229" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="350.59" y="239.5" ></text>
</g>
<g >
<title>cats.FlatMap[F] (expanded macros 0)  (883 Î¼s, 0.01%)</title><rect x="93.2" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="96.20" y="239.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.edit.scalafix.ScalafixMigrationsFinder] =&gt; ?{def map: ?} (expanded macros 0)  (3,956 Î¼s, 0.06%)</title><rect x="130.0" y="245" width="0.7" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="132.99" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucketserver.Json.Branches]{type Out = K} (id 3960) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (933 Î¼s, 0.02%)</title><rect x="709.4" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="712.43" y="207.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.github.InstallationOut]{type Repr = R} (expanded macros 0)  (5,783 Î¼s, 0.09%)</title><rect x="762.2" y="213" width="1.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="765.19" y="223.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.decoding.ReprDecoder[List[org.scalasteward.core.update.artifact.ArtifactChange] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;changes&quot;)],List[org.scalasteward.core.update.artifact.ArtifactChange]] :: shapeless.HNil]] (id 8849) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (3,979 Î¼s, 0.06%)</title><rect x="1171.8" y="213" width="0.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1174.78" y="223.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.forge.bitbucketserver.Json.Branches] (expanded macros 0)  (1,802 Î¼s, 0.03%)</title><rect x="366.5" y="245" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="369.49" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.data.DependencyInfo] (expanded macros 0)  (907 Î¼s, 0.01%)</title><rect x="655.6" y="133" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="658.59" y="143.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[org.scalasteward.core.repoconfig.PullRequestsConfig with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;pullRequests&quot;)],org.scalasteward.core.repoconfig.PullRequestsConfig] :: org.scalasteward.core.repoconfig.UpdatePattern with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;dependency&quot;)],org.scalasteward.core.repoconfig.UpdatePattern] :: shapeless.HNil] (id 7119) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (6,888 Î¼s, 0.11%)</title><rect x="660.2" y="197" width="1.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="663.16" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)]} (id 7651) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (598 Î¼s, 0.01%)</title><rect x="1059.1" y="85" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1062.09" y="95.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;exact&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;contains&quot;)] :: shapeless.HNil,Option[String] :: Option[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (2,567 Î¼s, 0.04%)</title><rect x="798.8" y="165" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="801.83" y="175.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitea.GiteaApiAlg.PullRequestResp]{type Repr = V} (id 4673) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (2,556 Î¼s, 0.04%)</title><rect x="610.0" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="613.04" y="207.5" ></text>
</g>
<g >
<title>F[Either[String,(coursier.core.Versions, String)]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (2,035 Î¼s, 0.03%)</title><rect x="55.4" y="245" width="0.4" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="58.39" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)]} (id 7860) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (627 Î¼s, 0.01%)</title><rect x="1046.2" y="69" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1049.19" y="79.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[Some[Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy]] :: Some[Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]]] :: Some[List[String]] :: Some[List[String]] :: Some[List[org.scalasteward.core.repoconfig.GroupRepoConfig]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil]{type Out = OutT} (expanded macros 0)  (3,326 Î¼s, 0.05%)</title><rect x="1048.6" y="117" width="0.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1051.59" y="127.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;uuid&quot;)] :: shapeless.HNil,String :: shapeless.HNil]{type Out = R} (expanded macros 0)  (1,623 Î¼s, 0.03%)</title><rect x="517.0" y="197" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="519.98" y="207.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.data.Resolver]{type Repr = R} (expanded macros 0)  (1,735 Î¼s, 0.03%)</title><rect x="917.7" y="213" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="920.71" y="223.5" ></text>
</g>
<g >
<title>F[_1] =&gt; ?{def flatMap: ?} (expanded macros 0)  (1,248 Î¼s, 0.02%)</title><rect x="119.1" y="245" width="0.2" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="122.06" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.forge.data.PullRequestNumber] (expanded macros 0)  (1,619 Î¼s, 0.03%)</title><rect x="751.5" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="754.50" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;base&quot;)]} (id 4975) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (605 Î¼s, 0.01%)</title><rect x="865.9" y="133" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="868.89" y="143.5" ></text>
</g>
<g >
<title>cats.FunctorFilter[[+O]fs2.Stream[[_]F[_],O]] (expanded macros 0)  (556 Î¼s, 0.01%)</title><rect x="231.4" y="245" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="234.42" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.ReprAsObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;description&quot;)],String] :: Option[List[String]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;labels&quot;)],Option[List[String]]] :: Option[List[Int]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;assignee_ids&quot;)],Option[List[Int]]] :: Option[List[Int]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;reviewer_ids&quot;)],Option[List[Int]]] :: Long with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;target_project_id&quot;)],Long] :: Option[Boolean] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;remove_source_branch&quot;)],Option[Boolean]] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;source_branch&quot;)],String] :: org.scalasteward.core.git.Branch with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;target_branch&quot;)],org.scalasteward.core.git.Branch] :: shapeless.HNil]] (id 5491) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (9,266 Î¼s, 0.15%)</title><rect x="886.2" y="213" width="1.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="889.20" y="223.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.codec.UnwrappedCodec[org.scalasteward.core.util.Timestamp]] (id 9041) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (4,476 Î¼s, 0.07%)</title><rect x="1147.5" y="245" width="0.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1150.49" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;owner&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;parent&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;clone_url&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;default_branch&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;archived&quot;)] :: shapeless.HNil,String :: org.scalasteward.core.forge.data.UserOut :: Option[org.scalasteward.core.forge.data.RepoOut] :: org.http4s.Uri :: org.scalasteward.core.git.Branch :: Boolean :: shapeless.HNil]{type Out = R} (expanded macros 0)  (9,791 Î¼s, 0.16%)</title><rect x="755.3" y="197" width="1.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="758.31" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Vector[Int]] (expanded macros 0)  (1,137 Î¼s, 0.02%)</title><rect x="541.4" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="544.35" y="191.5" ></text>
</g>
<g >
<title>cats.MonadError[F,Throwable] (expanded macros 0)  (4,670 Î¼s, 0.08%)</title><rect x="242.9" y="245" width="0.9" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="245.86" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.decoding.ConfiguredDecoder[org.scalasteward.core.data.Resolver.MavenRepository] (expanded macros 0)  (106,468 Î¼s, 1.73%)</title><rect x="948.5" y="165" width="20.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="951.55" y="175.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.edit.scalafix.ScalafixMigrations]{type Repr = V} (expanded macros 3)   (1,563 Î¼s, 0.03%)</title><rect x="1151.5" y="197" width="0.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="1154.51" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = shapeless._0} (expanded macros 0)  (3,286 Î¼s, 0.05%)</title><rect x="313.6" y="213" width="0.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="316.59" y="223.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.bitbucket.Reviewer] (expanded macros 0)  (12,726 Î¼s, 0.21%)</title><rect x="515.7" y="229" width="2.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="518.70" y="239.5" ></text>
</g>
<g >
<title>F[Option[org.scalasteward.core.coursier.VersionsCache.Value]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (1,551 Î¼s, 0.03%)</title><rect x="83.9" y="245" width="0.3" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="86.89" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.coproduct.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;MavenRepository&quot;)] :: shapeless.HNil,org.scalasteward.core.data.Resolver.MavenRepository :+: shapeless.CNil] (expanded macros 0)  (2,260 Î¼s, 0.04%)</title><rect x="920.2" y="181" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="923.16" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;groupIdBefore&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;groupIdAfter&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;artifactIdBefore&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;artifactIdAfter&quot;)] :: shapeless.HNil,Option[org.scalasteward.core.data.GroupId] :: org.scalasteward.core.data.GroupId :: Option[String] :: String :: shapeless.HNil]{type Out = R} (expanded macros 0)  (3,443 Î¼s, 0.06%)</title><rect x="1159.1" y="197" width="0.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1162.09" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[List[org.scalasteward.core.forge.data.PullRequestOut]] (expanded macros 0)  (3,110 Î¼s, 0.05%)</title><rect x="333.2" y="245" width="0.6" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="336.21" y="255.5" ></text>
</g>
<g >
<title>String(&quot;Grouped&quot;) =&gt; ?{def -&gt; : ?} (expanded macros 0)  (936 Î¼s, 0.02%)</title><rect x="185.2" y="245" width="0.2" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="188.18" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;body&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;due_date&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;head&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;labels&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;milestone&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: shapeless.HNil,Option[String] :: Option[String] :: Option[String] :: Option[Vector[Int]] :: Option[Int] :: Option[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (17,260 Î¼s, 0.28%)</title><rect x="576.2" y="149" width="3.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="579.19" y="159.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;frequency&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;grouping&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;includeMatchedLabels&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;customLabels&quot;)] :: shapeless.HNil,Option[org.scalasteward.core.repoconfig.PullRequestFrequency] :: List[org.scalasteward.core.repoconfig.PullRequestGroup] :: Option[scala.util.matching.Regex] :: List[String] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (11,207 Î¼s, 0.18%)</title><rect x="1026.3" y="197" width="2.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1029.26" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: shapeless.HNil,List]{type Lub = Option[io.circe.generic.extras.JsonKey]} (expanded macros 0)  (1,036 Î¼s, 0.02%)</title><rect x="1154.8" y="213" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1157.79" y="223.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitlab.ForkPayload]{type Out = K} (id 5398) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (908 Î¼s, 0.01%)</title><rect x="877.4" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="880.41" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.forge.azurerepos.AzureComment] (expanded macros 0)  (11,969 Î¼s, 0.19%)</title><rect x="828.6" y="229" width="2.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="831.61" y="239.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;location&quot;)]} (id 1972) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (865 Î¼s, 0.01%)</title><rect x="989.9" y="101" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="992.93" y="111.5" ></text>
</g>
<g >
<title>org.http4s.Header[org.http4s.headers.User-Agent, _] (expanded macros 0)  (709 Î¼s, 0.01%)</title><rect x="399.1" y="229" width="0.1" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="402.09" y="239.5" ></text>
</g>
<g >
<title>io.circe.Decoder[A] (expanded macros 0)  (578 Î¼s, 0.01%)</title><rect x="330.1" y="245" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="333.13" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.azurerepos.ClosePullRequestPayload]{type Repr = V} (expanded macros 3)   (1,455 Î¼s, 0.02%)</title><rect x="832.2" y="197" width="0.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="835.17" y="207.5" ></text>
</g>
<g >
<title>F[List[org.scalasteward.core.data.Update.ForArtifactId]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (1,515 Î¼s, 0.02%)</title><rect x="70.3" y="245" width="0.3" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="73.35" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;pin&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;allow&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;allowPreReleases&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;ignore&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)] :: shapeless.HNil,List]{type Lub = Symbol} (expanded macros 0)  (16,718 Î¼s, 0.27%)</title><rect x="1102.8" y="213" width="3.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1105.78" y="223.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.gitea.GiteaApiAlg.CommentResp]] (id 4781) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (34,989 Î¼s, 0.57%)</title><rect x="546.4" y="245" width="6.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="549.36" y="255.5" ></text>
</g>
<g >
<title>cats.Semigroupal[com.monovore.decline.Opts] (expanded macros 0)  (7,328 Î¼s, 0.12%)</title><rect x="246.8" y="245" width="1.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="249.79" y="255.5" ></text>
</g>
<g >
<title>shapeless.Default[org.scalasteward.core.repoconfig.RepoConfig]{type Out = Options} (id 7830) (expanded macros 3) (tree from `shapeless.DefaultMacros.materialize`)  (2,133 Î¼s, 0.03%)</title><rect x="1049.5" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1052.52" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)]} (id 4734) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,626 Î¼s, 0.03%)</title><rect x="579.0" y="53" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="581.97" y="63.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[org.scalasteward.core.data.GroupId] (expanded macros 0)  (4,073 Î¼s, 0.07%)</title><rect x="276.6" y="245" width="0.7" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="279.57" y="255.5" ></text>
</g>
<g >
<title>F[Option[org.scalasteward.core.nurture.PullRequestData[Option]]] =&gt; ?{def map: ?} (expanded macros 0)  (882 Î¼s, 0.01%)</title><rect x="86.7" y="245" width="0.2" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="89.72" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucketserver.Json.Branch]{type Out = K} (id 3927) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,144 Î¼s, 0.02%)</title><rect x="705.1" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="708.13" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.GroupId] (expanded macros 0)  (887 Î¼s, 0.01%)</title><rect x="665.1" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="668.10" y="191.5" ></text>
</g>
<g >
<title>F[(List[String], List[org.scalasteward.core.data.Scope[List[org.scalasteward.core.data.Dependency]]], List[org.scalasteward.core.data.Scope[List[org.scalasteward.core.data.Dependency]]])] =&gt; ?{def map: ?} (expanded macros 0)  (1,768 Î¼s, 0.03%)</title><rect x="41.4" y="245" width="0.4" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="44.44" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lub[Symbol with shapeless.tag.Tagged[String(&quot;allow&quot;)],Symbol with shapeless.tag.Tagged[_ &gt;: String(&quot;fileExtensions&quot;) with String(&quot;limit&quot;) with String(&quot;ignore&quot;) with String(&quot;allowPreReleases&quot;) &lt;: String],Lub0] (expanded macros 0)  (975 Î¼s, 0.02%)</title><rect x="1103.6" y="181" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1106.64" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Resolver.IvyRepository]{type Repr = V} (id 1825) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (2,729 Î¼s, 0.04%)</title><rect x="934.6" y="133" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="937.62" y="143.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.data.PullRequestNumber]{type Repr = R :: shapeless.HNil} (expanded macros 3)   (1,376 Î¼s, 0.02%)</title><rect x="1147.2" y="197" width="0.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="1150.23" y="207.5" ></text>
</g>
<g >
<title>ex.exitValue.type =&gt; ?{def === : ?} (expanded macros 0)  (1,106 Î¼s, 0.02%)</title><rect x="315.8" y="245" width="0.3" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="318.85" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[List[String]] (expanded macros 0)  (596 Î¼s, 0.01%)</title><rect x="887.5" y="165" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="890.50" y="175.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitlab.CommitId]{type Out = K} (id 5520) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (730 Î¼s, 0.01%)</title><rect x="788.9" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="791.86" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)]} (id 4232) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,213 Î¼s, 0.02%)</title><rect x="531.3" y="181" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="534.28" y="191.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.Resolver.Header] (expanded macros 0)  (1,771 Î¼s, 0.03%)</title><rect x="941.7" y="101" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="944.68" y="111.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;frequency&quot;)]} (id 7540) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,047 Î¼s, 0.02%)</title><rect x="1039.7" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1042.69" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[List[org.scalasteward.core.repoconfig.UpdatePattern]] (expanded macros 0)  (2,042 Î¼s, 0.03%)</title><rect x="1099.8" y="181" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1102.78" y="191.5" ></text>
</g>
<g >
<title>x$2.type =&gt; ?{def === : ?} (expanded macros 0)  (4,893 Î¼s, 0.08%)</title><rect x="1183.0" y="245" width="0.9" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="1186.01" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.Resolver] (expanded macros 0)  (3,303 Î¼s, 0.05%)</title><rect x="502.8" y="165" width="0.6" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="505.77" y="175.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;description&quot;)]} (id 5487) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (701 Î¼s, 0.01%)</title><rect x="883.8" y="149" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="886.84" y="159.5" ></text>
</g>
<g >
<title>shapeless.Default[org.scalasteward.core.data.Resolver.MavenRepository]{type Out = Options} (id 1751) (expanded macros 3) (tree from `shapeless.DefaultMacros.materialize`)  (5,640 Î¼s, 0.09%)</title><rect x="952.1" y="133" width="1.0" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="955.06" y="143.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Vector[org.scalasteward.core.forge.gitea.GiteaApiAlg.Label]] (expanded macros 0)  (797 Î¼s, 0.01%)</title><rect x="352.1" y="245" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="355.12" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.codec.ReprAsObjectCodec[org.scalasteward.core.repoconfig.CommitsConfig with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;commits&quot;)],org.scalasteward.core.repoconfig.CommitsConfig] :: org.scalasteward.core.repoconfig.PullRequestsConfig with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;pullRequests&quot;)],org.scalasteward.core.repoconfig.PullRequestsConfig] :: org.scalasteward.core.repoconfig.ScalafmtConfig with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;scalafmt&quot;)],org.scalasteward.core.repoconfig.ScalafmtConfig] :: org.scalasteward.core.repoconfig.UpdatesConfig with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)],org.scalasteward.core.repoconfig.UpdatesConfig] :: Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)],Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]]] :: Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)],Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy]] :: Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)],Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)],List[String]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)],List[String]] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)],List[org.scalasteward.core.repoconfig.GroupRepoConfig]] :: shapeless.HNil]] (id 7659) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (30,102 Î¼s, 0.49%)</title><rect x="1060.0" y="213" width="5.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1062.99" y="223.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.update.artifact.ArtifactChange]{type Repr = V} (expanded macros 3)   (1,322 Î¼s, 0.02%)</title><rect x="1158.7" y="197" width="0.2" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="1161.67" y="207.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.forge.gitlab.ProjectId] =&gt; ?{def flatMap: ?} (expanded macros 0)  (2,715 Î¼s, 0.04%)</title><rect x="140.1" y="245" width="0.6" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="143.13" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[org.scalasteward.core.git.Sha1 with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;sha&quot;)],org.scalasteward.core.git.Sha1] :: shapeless.HNil]] (id 4321) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (8,076 Î¼s, 0.13%)</title><rect x="745.1" y="213" width="1.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="748.06" y="223.5" ></text>
</g>
<g >
<title>cats.kernel.Order[cats.data.NonEmptyList[org.scalasteward.core.data.Dependency]] (expanded macros 0)  (1,080 Î¼s, 0.02%)</title><rect x="291.2" y="245" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="294.19" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;newerArtifactId&quot;)]} (id 2360) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,879 Î¼s, 0.03%)</title><rect x="672.3" y="133" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="675.32" y="143.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.codec.UnwrappedCodec[org.scalasteward.core.buildtool.sbt.data.ScalaVersion]] (id 1005) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (13,070 Î¼s, 0.21%)</title><rect x="1117.5" y="245" width="2.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1120.49" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.forge.data.BranchOut] (expanded macros 0)  (1,616 Î¼s, 0.03%)</title><rect x="369.3" y="245" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="372.28" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;version&quot;)]} (id 1471) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,061 Î¼s, 0.02%)</title><rect x="472.2" y="149" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="475.16" y="159.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[Some[List[org.scalasteward.core.repoconfig.UpdatePattern]] :: Some[List[org.scalasteward.core.repoconfig.UpdatePattern]] :: Some[List[org.scalasteward.core.repoconfig.UpdatePattern]] :: Some[List[org.scalasteward.core.repoconfig.UpdatePattern]] :: Some[Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]]] :: Some[Option[List[String]]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;pin&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;allow&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;allowPreReleases&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;ignore&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)] :: shapeless.HNil]{type Out = Rec} (expanded macros 0)  (7,928 Î¼s, 0.13%)</title><rect x="1084.8" y="197" width="1.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1087.79" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)]} (id 4530) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,592 Î¼s, 0.03%)</title><rect x="632.2" y="165" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="635.15" y="175.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.ReprAsObjectEncoder[Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;prefix&quot;)],Option[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;suffix&quot;)],Option[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;exact&quot;)],Option[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;contains&quot;)],Option[String]] :: shapeless.HNil]] (id 8503) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (2,857 Î¼s, 0.05%)</title><rect x="893.8" y="213" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="896.79" y="223.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Resolver]{type Repr = V} (id 1675) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (3,755 Î¼s, 0.06%)</title><rect x="922.6" y="197" width="0.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="925.58" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.util.RecordToMap[List[org.scalasteward.core.data.Resolver.Header] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)],List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil] (expanded macros 0)  (1,843 Î¼s, 0.03%)</title><rect x="949.1" y="149" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="952.08" y="159.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.edit.scalafix.ScalafixMigration.ExecutionOrder] (expanded macros 0)  (1,691 Î¼s, 0.03%)</title><rect x="702.3" y="165" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="705.31" y="175.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.bitbucketserver.Json.Comment]] (id 3970) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (19,517 Î¼s, 0.32%)</title><rect x="518.1" y="245" width="3.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="521.14" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;addToGitBlameIgnoreRevs&quot;)] :: shapeless.HNil,Option[Boolean] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,313 Î¼s, 0.02%)</title><rect x="1009.5" y="133" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1012.47" y="143.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;customLabels&quot;)] :: shapeless.HNil,List[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (3,257 Î¼s, 0.05%)</title><rect x="1031.1" y="149" width="0.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1034.14" y="159.5" ></text>
</g>
<g >
<title>F[Repo] =&gt; ?{def flatMap: ?} (expanded macros 0)  (12,157 Î¼s, 0.20%)</title><rect x="88.6" y="245" width="2.3" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="91.60" y="255.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.RefinedType[eu.timepit.refined.api.Refined[String,eu.timepit.refined.boolean.And[eu.timepit.refined.collection.Forall[eu.timepit.refined.boolean.Or[eu.timepit.refined.char.Digit,eu.timepit.refined.boolean.And[eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less['a']],eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Greater['f']]]]],eu.timepit.refined.collection.Size[eu.timepit.refined.generic.Equal[40]]]]]{type T = String} (expanded macros 0)  (22,914 Î¼s, 0.37%)</title><rect x="307.3" y="245" width="4.4" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="310.31" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;key&quot;)],String] :: shapeless.HNil]] (id 4146) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (4,244 Î¼s, 0.07%)</title><rect x="524.1" y="213" width="0.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="527.07" y="223.5" ></text>
</g>
<g >
<title>cats.UnorderedFoldable[List] (expanded macros 0)  (865 Î¼s, 0.01%)</title><rect x="252.6" y="245" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="255.57" y="255.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.Validate[Int,eu.timepit.refined.numeric.Less[shapeless._0]]{type R = R} (expanded macros 0)  (3,514 Î¼s, 0.06%)</title><rect x="1099.0" y="133" width="0.7" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="1101.98" y="143.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[Int] (expanded macros 0)  (1,338 Î¼s, 0.02%)</title><rect x="271.9" y="245" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="274.89" y="255.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.forge.data.RepoOut] =&gt; ?{def flatMap: ?} (expanded macros 0)  (2,024 Î¼s, 0.03%)</title><rect x="135.7" y="245" width="0.4" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="138.67" y="255.5" ></text>
</g>
<g >
<title>cats.data.NonEmptyList[String] =&gt; ?{def mkString_(x$1: ? &gt;: String(&quot;\n&quot;), x$2: ? &gt;: String(&quot;&quot;), x$3: ? &gt;: String(&quot;\n&quot;)): ?} (expanded macros 0)  (733 Î¼s, 0.01%)</title><rect x="253.6" y="245" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="256.59" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;newerVersions&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;newerGroupId&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;newerArtifactId&quot;)] :: shapeless.HNil,cats.data.NonEmptyList[org.scalasteward.core.data.Version] :: Option[org.scalasteward.core.data.GroupId] :: Option[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (13,389 Î¼s, 0.22%)</title><rect x="806.1" y="181" width="2.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="809.06" y="191.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[Some[List[String]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;customLabels&quot;)] :: shapeless.HNil]{type Out = OutT} (expanded macros 0)  (2,008 Î¼s, 0.03%)</title><rect x="1022.8" y="149" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1025.85" y="159.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitlab.CommitId]{type Repr = V} (id 5521) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (938 Î¼s, 0.02%)</title><rect x="789.2" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="792.24" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.UpdatesConfig]{type Repr = V} (expanded macros 3)   (2,230 Î¼s, 0.04%)</title><rect x="1093.0" y="197" width="0.5" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="1096.05" y="207.5" ></text>
</g>
<g >
<title>cats.Foldable[[+T2](String, T2)] (expanded macros 0)  (712 Î¼s, 0.01%)</title><rect x="16.0" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="18.99" y="239.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[Some[List[org.scalasteward.core.repoconfig.UpdatePattern]] :: Some[List[org.scalasteward.core.repoconfig.UpdatePattern]] :: Some[List[org.scalasteward.core.repoconfig.UpdatePattern]] :: Some[Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]]] :: Some[Option[List[String]]] :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;allow&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;allowPreReleases&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;ignore&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)] :: shapeless.HNil]{type Out = OutT} (expanded macros 0)  (6,309 Î¼s, 0.10%)</title><rect x="1085.1" y="181" width="1.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1088.10" y="191.5" ></text>
</g>
<g >
<title>org.http4s.Header[org.http4s.headers.Authorization, _] (expanded macros 0)  (624 Î¼s, 0.01%)</title><rect x="395.6" y="245" width="0.2" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="398.64" y="255.5" ></text>
</g>
<g >
<title>failuresSummaryOpt.type =&gt; ?{def toSeq: ?} (expanded macros 0)  (1,321 Î¼s, 0.02%)</title><rect x="317.4" y="245" width="0.3" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="320.43" y="255.5" ></text>
</g>
<g >
<title>F[Option[Map[org.http4s.Uri,org.scalasteward.core.nurture.PullRequestRepository.Entry]]] =&gt; ?{def void: ?} (expanded macros 0)  (1,656 Î¼s, 0.03%)</title><rect x="79.6" y="245" width="0.3" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="82.55" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitea.GiteaApiAlg.User]{type Repr = V} (expanded macros 3)   (2,364 Î¼s, 0.04%)</title><rect x="630.5" y="197" width="0.4" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="633.50" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,List[org.scalasteward.core.data.Resolver.Header] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (2,295 Î¼s, 0.04%)</title><rect x="956.5" y="85" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="959.51" y="95.5" ></text>
</g>
<g >
<title>cats.FlatMap[F] (expanded macros 0)  (62,617 Î¼s, 1.02%)</title><rect x="215.8" y="245" width="12.0" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="218.83" y="255.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.azurerepos.ClosePullRequestPayload]{type Repr = R} (expanded macros 0)  (7,313 Î¼s, 0.12%)</title><rect x="831.6" y="213" width="1.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="834.61" y="223.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.repoconfig.CommitsConfig] (expanded macros 0)  (801 Î¼s, 0.01%)</title><rect x="1063.2" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1066.16" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;baseSha1&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;update&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;entryCreatedAt&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;number&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updateBranch&quot;)] :: shapeless.HNil,org.scalasteward.core.git.Sha1 :: org.scalasteward.core.data.Update :: org.scalasteward.core.forge.data.PullRequestState :: org.scalasteward.core.util.Timestamp :: Option[org.scalasteward.core.forge.data.PullRequestNumber] :: Option[org.scalasteward.core.git.Branch] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (14,760 Î¼s, 0.24%)</title><rect x="637.4" y="197" width="2.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="640.40" y="207.5" ></text>
</g>
<g >
<title>author.signingKey.type =&gt; ?{def traverse_: ?} (expanded macros 0)  (613 Î¼s, 0.01%)</title><rect x="208.8" y="245" width="0.1" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="211.83" y="255.5" ></text>
</g>
<g >
<title>((Option[org.scalasteward.core.data.SemVer], Option[org.scalasteward.core.data.SemVer])) =&gt; ?{def tupled: ?} (expanded macros 0)  (1,506 Î¼s, 0.02%)</title><rect x="14.5" y="245" width="0.3" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="17.47" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;archived&quot;)]} (id 4558) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,433 Î¼s, 0.02%)</title><rect x="623.5" y="117" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="626.51" y="127.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Update.ForGroupId]{type Repr = V} (expanded macros 3)   (3,098 Î¼s, 0.05%)</title><rect x="679.2" y="197" width="0.6" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="682.17" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.nurture.PullRequestRepository.Entry]{type Out = K} (id 6575) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (2,745 Î¼s, 0.04%)</title><rect x="635.7" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="638.70" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;targetRefName&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;labels&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;description&quot;)] :: shapeless.HNil,String :: String :: Option[List[String]] :: String :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (6,108 Î¼s, 0.10%)</title><rect x="841.6" y="181" width="1.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="844.63" y="191.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.bitbucket.Reviewer]] (id 3714) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (16,688 Î¼s, 0.27%)</title><rect x="514.9" y="245" width="3.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="517.94" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitea.GiteaApiAlg.CommentResp]{type Out = K} (id 4784) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (2,622 Î¼s, 0.04%)</title><rect x="547.9" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="550.89" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;values&quot;)]} (id 3690) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (752 Î¼s, 0.01%)</title><rect x="513.3" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="516.28" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Resolver.MavenRepository]{type Repr = V} (expanded macros 3)   (2,538 Î¼s, 0.04%)</title><rect x="988.5" y="133" width="0.5" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="991.53" y="143.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.Dependency] (expanded macros 0)  (1,911 Î¼s, 0.03%)</title><rect x="462.6" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="465.56" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitea.GiteaApiAlg.PayloadCommit]{type Repr = V} (expanded macros 3)   (2,112 Î¼s, 0.03%)</title><rect x="603.0" y="197" width="0.4" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="606.02" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Update.ForGroupId]{type Repr = V} (id 2440) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (2,664 Î¼s, 0.04%)</title><rect x="679.8" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="682.77" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.data.Dependency] (expanded macros 0)  (68,330 Î¼s, 1.11%)</title><rect x="468.0" y="229" width="13.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="470.99" y="239.5" ></text>
</g>
<g >
<title>org.http4s.EntityDecoder[[_]F[_],Unit] (expanded macros 0)  (2,820 Î¼s, 0.05%)</title><rect x="393.3" y="245" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="396.26" y="255.5" ></text>
</g>
<g >
<title>eu.timepit.refined.internal.WitnessAs['f',Char] (expanded macros 0)  (1,704 Î¼s, 0.03%)</title><rect x="355.3" y="133" width="0.3" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="358.26" y="143.5" ></text>
</g>
<g >
<title>io.circe.Decoder[List[A]] (expanded macros 0)  (847 Î¼s, 0.01%)</title><rect x="732.0" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="735.02" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (1,654 Î¼s, 0.03%)</title><rect x="979.0" y="101" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="982.01" y="111.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.update.artifact.ArtifactChanges]{type Repr = V} (id 8835) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,418 Î¼s, 0.02%)</title><rect x="1170.2" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1173.22" y="207.5" ></text>
</g>
<g >
<title>resolvers.type =&gt; ?{def traverseFilter: ?} (expanded macros 0)  (2,834 Î¼s, 0.05%)</title><rect x="412.0" y="245" width="0.5" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="415.00" y="255.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.data.Resolver]{type Repr = R} (expanded macros 0)  (18,585 Î¼s, 0.30%)</title><rect x="920.6" y="213" width="3.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="923.59" y="223.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.repoconfig.PullRequestGroup]] (id 7358) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (16,017 Î¼s, 0.26%)</title><rect x="888.0" y="245" width="3.0" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="890.97" y="255.5" ></text>
</g>
<g >
<title>cats.Foldable[org.scalasteward.core.util.Nel] (expanded macros 0)  (1,717 Î¼s, 0.03%)</title><rect x="178.8" y="229" width="0.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="181.85" y="239.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Dependency]{type Repr = V} (expanded macros 3)   (3,888 Î¼s, 0.06%)</title><rect x="469.7" y="197" width="0.7" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="472.68" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[org.scalasteward.core.repoconfig.VersionPattern]] (expanded macros 0)  (1,319 Î¼s, 0.02%)</title><rect x="665.4" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="668.36" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;filter&quot;)]} (id 7369) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (591 Î¼s, 0.01%)</title><rect x="890.0" y="149" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="892.95" y="159.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.nurture.PullRequestRepository.Entry]{type Repr = R} (expanded macros 0)  (25,777 Î¼s, 0.42%)</title><rect x="635.3" y="213" width="4.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="638.29" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;runAfterUpgrading&quot;)] :: shapeless.HNil,List]{type Lub = Symbol} (expanded macros 0)  (1,112 Î¼s, 0.02%)</title><rect x="1079.1" y="213" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1082.09" y="223.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)]} (id 2069) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (943 Î¼s, 0.02%)</title><rect x="972.6" y="85" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="975.61" y="95.5" ></text>
</g>
<g >
<title>F[org.typelevel.log4cats.SelfAwareStructuredLogger[F]] =&gt; ?{def map: ?} (expanded macros 0)  (1,806 Î¼s, 0.03%)</title><rect x="149.7" y="245" width="0.3" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="152.67" y="255.5" ></text>
</g>
<g >
<title>repo.type =&gt; ?{def -&gt; : ?} (expanded macros 0)  (598 Î¼s, 0.01%)</title><rect x="411.1" y="245" width="0.1" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="414.06" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.git.Sha1] (expanded macros 0)  (1,064 Î¼s, 0.02%)</title><rect x="656.2" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="659.22" y="191.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Resolver]{type Out = K} (id 2170) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,724 Î¼s, 0.03%)</title><rect x="918.7" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="921.70" y="207.5" ></text>
</g>
<g >
<title>mr.mergeStatus.type =&gt; ?{def === : ?} (expanded macros 0)  (568 Î¼s, 0.01%)</title><rect x="391.9" y="245" width="0.1" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="394.91" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[org.scalasteward.core.data.Dependency with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;dependency&quot;)],org.scalasteward.core.data.Dependency] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;filesContainingVersion&quot;)],List[String]] :: shapeless.HNil]] (id 1602) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (18,642 Î¼s, 0.30%)</title><rect x="461.1" y="213" width="3.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="464.06" y="223.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucketserver.Json.Ref]{type Out = K} (id 4155) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,131 Î¼s, 0.02%)</title><rect x="854.7" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="857.68" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[String] (expanded macros 0)  (1,008 Î¼s, 0.02%)</title><rect x="1118.4" y="213" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1121.36" y="223.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.ReprAsObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;namespace&quot;)],String] :: shapeless.HNil]] (id 5406) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (2,893 Î¼s, 0.05%)</title><rect x="878.7" y="213" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="881.66" y="223.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.decoding.ConfiguredDecoder[org.scalasteward.core.update.artifact.ArtifactChange] (expanded macros 0)  (55,901 Î¼s, 0.91%)</title><rect x="1156.9" y="229" width="10.7" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1159.87" y="239.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = 40} (id 6041) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (641 Î¼s, 0.01%)</title><rect x="356.7" y="165" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="359.68" y="175.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;base&quot;)]} (id 4740) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,255 Î¼s, 0.02%)</title><rect x="575.9" y="149" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="578.95" y="159.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.data.CommitOut]{type Out = K} (id 4313) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,207 Î¼s, 0.02%)</title><rect x="743.4" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="746.42" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.codec.ConfiguredAsObjectCodec[org.scalasteward.core.repoconfig.RepoConfig] (expanded macros 0)  (158,306 Î¼s, 2.57%)</title><rect x="1044.6" y="229" width="30.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1047.61" y="239.5" >io..</text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.repoconfig.PullRequestsConfig] (expanded macros 0)  (871 Î¼s, 0.01%)</title><rect x="660.6" y="181" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="663.65" y="191.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.update.artifact.ArtifactChanges]{type Out = Labels} (id 8863) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (604 Î¼s, 0.01%)</title><rect x="1168.8" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1171.83" y="207.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Resolver.Credentials]{type Repr = V} (id 1643) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (2,482 Î¼s, 0.04%)</title><rect x="484.0" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="486.97" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)]} (id 1759) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,327 Î¼s, 0.02%)</title><rect x="949.2" y="133" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="952.18" y="143.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;assignee_ids&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewer_ids&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;target_project_id&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;remove_source_branch&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;source_branch&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;target_branch&quot;)] :: shapeless.HNil,Option[List[Int]] :: Option[List[Int]] :: Long :: Option[Boolean] :: String :: org.scalasteward.core.git.Branch :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (10,098 Î¼s, 0.16%)</title><rect x="884.3" y="133" width="1.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="887.26" y="143.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.bitbucketserver.Json.Repository]{type Repr = R} (expanded macros 0)  (8,525 Î¼s, 0.14%)</title><rect x="857.7" y="213" width="1.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="860.69" y="223.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.github.RepositoriesOut]{type Repr = R} (expanded macros 0)  (95,854 Î¼s, 1.55%)</title><rect x="764.3" y="213" width="18.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="767.28" y="223.5" ></text>
</g>
<g >
<title>x.reviewers.type =&gt; ?{def |+| : ?} (expanded macros 0)  (540 Î¼s, 0.01%)</title><rect x="1189.6" y="245" width="0.1" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="1192.58" y="255.5" ></text>
</g>
<g >
<title>F[(Unit, F[org.scalasteward.core.forge.data.AuthenticatedUser], org.scalasteward.core.update.artifact.ArtifactMigrationsLoader[F])] =&gt; ?{def flatMap: ?} (expanded macros 0)  (5,393 Î¼s, 0.09%)</title><rect x="45.1" y="245" width="1.0" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="48.09" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitea.GiteaApiAlg.EditPullRequestOption]{type Out = K} (id 4705) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,548 Î¼s, 0.03%)</title><rect x="584.3" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="587.31" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[cats.data.NonEmptyList[String]] (expanded macros 0)  (756 Î¼s, 0.01%)</title><rect x="703.0" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="705.99" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;location&quot;)]} (id 1957) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (893 Î¼s, 0.01%)</title><rect x="986.8" y="101" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="989.83" y="111.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;scalaVersion&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;configurations&quot;)] :: shapeless.HNil,Option[org.scalasteward.core.buildtool.sbt.data.ScalaVersion] :: Option[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (5,392 Î¼s, 0.09%)</title><rect x="472.8" y="133" width="1.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="475.82" y="143.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.data.DependencyInfo] (expanded macros 0)  (1,835 Î¼s, 0.03%)</title><rect x="657.1" y="133" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="660.08" y="143.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: shapeless.HNil,String :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (4,036 Î¼s, 0.07%)</title><rect x="591.8" y="181" width="0.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="594.80" y="191.5" ></text>
</g>
<g >
<title>io.circe.Decoder[String] (expanded macros 0)  (702 Î¼s, 0.01%)</title><rect x="563.1" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="566.10" y="191.5" ></text>
</g>
<g >
<title>shapeless.Lub[Symbol with shapeless.tag.Tagged[String(&quot;allowPreReleases&quot;)],Symbol with shapeless.tag.Tagged[_ &gt;: String(&quot;fileExtensions&quot;) with String(&quot;limit&quot;) with String(&quot;ignore&quot;) &lt;: String],Lub0] (expanded macros 0)  (924 Î¼s, 0.01%)</title><rect x="1104.2" y="165" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1107.22" y="175.5" ></text>
</g>
<g >
<title>cats.kernel.Monoid[cats.effect.kernel.Resource[F,Unit]] (expanded macros 0)  (14,512 Î¼s, 0.24%)</title><rect x="282.6" y="245" width="2.7" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="285.57" y="255.5" ></text>
</g>
<g >
<title>state.type =&gt; ?{def === : ?} (expanded macros 0)  (2,810 Î¼s, 0.05%)</title><rect x="1173.6" y="245" width="0.5" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="1176.61" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Int] (expanded macros 0)  (1,157 Î¼s, 0.02%)</title><rect x="330.3" y="245" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="333.32" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;commit&quot;)]} (id 5547) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (739 Î¼s, 0.01%)</title><rect x="741.3" y="165" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="744.32" y="175.5" ></text>
</g>
<g >
<title>ScalafixMigration.this.rewriteRules.type =&gt; ?{def mkString_(x$1: ? &gt;: String(&quot;, &quot;)): ?} (expanded macros 0)  (651 Î¼s, 0.01%)</title><rect x="178.1" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="181.14" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.repoconfig.PullRequestGroup] (expanded macros 0)  (1,735 Î¼s, 0.03%)</title><rect x="1033.5" y="165" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1036.47" y="175.5" ></text>
</g>
<g >
<title>(=&gt; Long) =&gt; Int (expanded macros 0)   (636 Î¼s, 0.01%)</title><rect x="22.6" y="245" width="0.1" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text  x="25.55" y="255.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.data.ArtifactId]{type Repr = R} (expanded macros 0)  (21,737 Î¼s, 0.35%)</title><rect x="450.5" y="213" width="4.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="453.48" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.nat.ToInt[shapeless._0] (expanded macros 3)  (4,191 Î¼s, 0.07%)</title><rect x="314.2" y="213" width="0.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="317.22" y="223.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[org.scalasteward.core.forge.bitbucket.CommentContent with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;content&quot;)],org.scalasteward.core.forge.bitbucket.CommentContent] :: shapeless.HNil]] (id 3635) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (3,893 Î¼s, 0.06%)</title><rect x="509.8" y="213" width="0.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="512.80" y="223.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.repoconfig.BuildRootConfig] (expanded macros 0)  (828 Î¼s, 0.01%)</title><rect x="1064.3" y="149" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1067.27" y="159.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[cats.data.NonEmptyList[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;command&quot;)],cats.data.NonEmptyList[String]] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;commitMessage&quot;)],String] :: Option[Boolean] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;addToGitBlameIgnoreRevs&quot;)],Option[Boolean]] :: shapeless.HNil] (expanded macros 0)  (3,373 Î¼s, 0.05%)</title><rect x="1017.0" y="181" width="0.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1019.98" y="191.5" ></text>
</g>
<g >
<title>F[Unit] =&gt; ?{def map: ?} (expanded macros 0)  (48,373 Î¼s, 0.78%)</title><rect x="107.7" y="245" width="9.3" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="110.72" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.codec.ConfiguredAsObjectCodec[org.scalasteward.core.repoconfig.PullRequestsConfig] (expanded macros 0)  (111,260 Î¼s, 1.80%)</title><rect x="1019.8" y="229" width="21.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1022.85" y="239.5" >i..</text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;body&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)] :: shapeless.HNil,String :: Long :: shapeless.HNil]{type Out = R} (expanded macros 0)  (11,101 Î¼s, 0.18%)</title><rect x="549.8" y="197" width="2.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="552.82" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;artifactIdBefore&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;artifactIdAfter&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (2,723 Î¼s, 0.04%)</title><rect x="1163.4" y="181" width="0.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1166.45" y="191.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.update.artifact.ArtifactChange]{type Repr = R} (expanded macros 0)  (7,064 Î¼s, 0.11%)</title><rect x="1159.8" y="213" width="1.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1162.75" y="223.5" ></text>
</g>
<g >
<title>org.scalasteward.core.util.DateTimeAlg[F] (expanded macros 0)  (1,297 Î¼s, 0.02%)</title><rect x="407.1" y="245" width="0.3" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="410.12" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)]} (id 4741) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,278 Î¼s, 0.02%)</title><rect x="575.4" y="165" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="578.44" y="175.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;commits&quot;)]} (id 7630) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (534 Î¼s, 0.01%)</title><rect x="1053.1" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1056.05" y="191.5" ></text>
</g>
<g >
<title>io.circe.Encoder[List[org.scalasteward.core.forge.bitbucket.Reviewer]] (expanded macros 0)  (2,067 Î¼s, 0.03%)</title><rect x="514.5" y="181" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="517.55" y="191.5" ></text>
</g>
<g >
<title>io.circe.Decoder[List[String]] (expanded macros 0)  (737 Î¼s, 0.01%)</title><rect x="1098.6" y="165" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1101.58" y="175.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.update.artifact.ArtifactChange]{type Repr = V} (id 8719) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (903 Î¼s, 0.01%)</title><rect x="1158.9" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1161.92" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.git.Branch] (expanded macros 0)  (1,579 Î¼s, 0.03%)</title><rect x="758.7" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="761.75" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,List[org.scalasteward.core.data.Resolver.Header] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (2,236 Î¼s, 0.04%)</title><rect x="959.5" y="85" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="962.47" y="95.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.ReprDecoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)],Option[String]] :: List[org.scalasteward.core.data.Update.ForArtifactId] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)],List[org.scalasteward.core.data.Update.ForArtifactId]] :: shapeless.HNil] (id 2488) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveDecoder`)  (7,304 Î¼s, 0.12%)</title><rect x="689.0" y="197" width="1.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="691.99" y="207.5" ></text>
</g>
<g >
<title>F[(List[String], String, List[String], List[String], org.scalasteward.core.forge.data.NewPullRequestData)] =&gt; ?{def map: ?} (expanded macros 0)  (795 Î¼s, 0.01%)</title><rect x="42.1" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="45.13" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;pattern&quot;)]} (id 2115) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (917 Î¼s, 0.01%)</title><rect x="981.9" y="117" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="984.91" y="127.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.codec.ConfiguredAsObjectCodec[org.scalasteward.core.data.Resolver]] (id 1671) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (541,867 Î¼s, 8.79%)</title><rect x="894.3" y="245" width="103.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="897.34" y="255.5" >shapeless.La..</text>
</g>
<g >
<title>io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.github.TokenOut] (expanded macros 0)  (9,207 Î¼s, 0.15%)</title><rect x="786.0" y="229" width="1.8" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="789.04" y="239.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.codec.ConfiguredAsObjectCodec[org.scalasteward.core.repoconfig.UpdatesConfig] (expanded macros 0)  (138,956 Î¼s, 2.25%)</title><rect x="1081.8" y="229" width="26.6" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1084.83" y="239.5" >i..</text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;resolvers&quot;)] :: shapeless.HNil,List[org.scalasteward.core.data.Resolver] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (7,100 Î¼s, 0.12%)</title><rect x="499.8" y="181" width="1.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="502.80" y="191.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.persistence.JsonKeyValueStore[F,org.scalasteward.core.data.Repo,org.scalasteward.core.repocache.RepoCache]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (3,464 Î¼s, 0.06%)</title><rect x="144.2" y="245" width="0.6" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="147.15" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.data.Update.ForArtifactId]] (id 2348) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (55,063 Î¼s, 0.89%)</title><rect x="665.8" y="245" width="10.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="668.76" y="255.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.github.Repository]{type Repr = R} (expanded macros 0)  (5,593 Î¼s, 0.09%)</title><rect x="784.0" y="213" width="1.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="787.02" y="223.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.nurture.PullRequestRepository.Entry] (expanded macros 0)   (935 Î¼s, 0.02%)</title><rect x="342.6" y="213" width="0.2" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="345.62" y="223.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.buildtool.sbt.data.ScalaVersion] (expanded macros 0)  (2,077 Î¼s, 0.03%)</title><rect x="479.6" y="165" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="482.57" y="175.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Int] (expanded macros 0)  (700 Î¼s, 0.01%)</title><rect x="593.6" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="596.55" y="191.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.repocache.RepoCache] (expanded macros 0)  (37,167 Î¼s, 0.60%)</title><rect x="650.9" y="229" width="7.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="653.89" y="239.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.repoconfig.UpdatePattern] (expanded macros 0)   (620 Î¼s, 0.01%)</title><rect x="1100.0" y="149" width="0.2" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="1103.04" y="159.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.data.Version] (expanded macros 0)   (1,156 Î¼s, 0.02%)</title><rect x="811.9" y="149" width="0.2" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="814.85" y="159.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.repocache.RepoCache] (expanded macros 0)  (3,994 Î¼s, 0.06%)</title><rect x="388.1" y="245" width="0.8" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="391.11" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[org.scalasteward.core.git.Branch with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],org.scalasteward.core.git.Branch] :: org.scalasteward.core.forge.data.CommitOut with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;commit&quot;)],org.scalasteward.core.forge.data.CommitOut] :: shapeless.HNil]] (id 5550) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (3,808 Î¼s, 0.06%)</title><rect x="741.5" y="213" width="0.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="744.52" y="223.5" ></text>
</g>
<g >
<title>cats.Contravariant[cats.kernel.Order] (expanded macros 0)  (1,026 Î¼s, 0.02%)</title><rect x="291.0" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="293.99" y="239.5" ></text>
</g>
<g >
<title>cats.Functor[io.circe.Decoder] (expanded macros 0)  (1,754 Î¼s, 0.03%)</title><rect x="241.9" y="245" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="244.91" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[cats.data.NonEmptyList[org.scalasteward.core.data.Dependency]] (expanded macros 0)  (3,276 Î¼s, 0.05%)</title><rect x="1121.6" y="213" width="0.6" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1124.60" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;newerVersions&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;newerGroupId&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;newerArtifactId&quot;)] :: shapeless.HNil,cats.data.NonEmptyList[org.scalasteward.core.data.Version] :: Option[org.scalasteward.core.data.GroupId] :: Option[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (10,136 Î¼s, 0.16%)</title><rect x="670.9" y="181" width="2.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="673.93" y="191.5" ></text>
</g>
<g >
<title>shapeless.Annotations[io.circe.generic.extras.JsonKey,org.scalasteward.core.edit.scalafix.ScalafixMigrations]{type Out = K} (id 2891) (expanded macros 3) (tree from `shapeless.AnnotationMacros.materializeVariableAnnotations`)  (968 Î¼s, 0.02%)</title><rect x="1150.0" y="213" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1152.97" y="223.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)]} (id 3994) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (934 Î¼s, 0.02%)</title><rect x="714.0" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="716.96" y="191.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucketserver.Json.DefaultReviewer]{type Out = K} (id 4003) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,136 Î¼s, 0.02%)</title><rect x="716.0" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="719.02" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.bitbucket.DefaultReviewers] (expanded macros 0)  (18,962 Î¼s, 0.31%)</title><rect x="511.3" y="229" width="3.6" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="514.32" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;commitMessage&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;addToGitBlameIgnoreRevs&quot;)] :: shapeless.HNil,String :: Option[Boolean] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,990 Î¼s, 0.03%)</title><rect x="1011.2" y="149" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1014.16" y="159.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;allowPreReleases&quot;)]} (id 8345) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,143 Î¼s, 0.02%)</title><rect x="1107.1" y="165" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1110.07" y="175.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (2,898 Î¼s, 0.05%)</title><rect x="993.7" y="117" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="996.67" y="127.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[org.scalasteward.core.data.Dependency with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;dependency&quot;)],org.scalasteward.core.data.Dependency] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;filesContainingVersion&quot;)],List[String]] :: shapeless.HNil] (id 1603) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (17,701 Î¼s, 0.29%)</title><rect x="461.2" y="197" width="3.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="464.24" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.data.GroupId] (expanded macros 0)  (1,762 Î¼s, 0.03%)</title><rect x="480.3" y="181" width="0.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="483.32" y="191.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.forge.data.PullRequestState] (expanded macros 0)  (1,165 Î¼s, 0.02%)</title><rect x="371.9" y="245" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="374.93" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (977 Î¼s, 0.02%)</title><rect x="604.4" y="181" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="607.44" y="191.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.forge.data.PullRequestState] (expanded macros 0)  (1,266 Î¼s, 0.02%)</title><rect x="751.8" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="754.81" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,List[org.scalasteward.core.data.Resolver.Header] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (2,311 Î¼s, 0.04%)</title><rect x="987.3" y="85" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="990.32" y="95.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[org.scalasteward.core.forge.gitea.GiteaApiAlg.PayloadCommit with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;commit&quot;)],org.scalasteward.core.forge.gitea.GiteaApiAlg.PayloadCommit] :: shapeless.HNil]] (id 4624) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (5,135 Î¼s, 0.08%)</title><rect x="545.4" y="213" width="1.0" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="548.37" y="223.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.repoconfig.PullRequestFrequency] (expanded macros 0)  (1,733 Î¼s, 0.03%)</title><rect x="1035.1" y="165" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1038.11" y="175.5" ></text>
</g>
<g >
<title>io.circe.Encoder[String] (expanded macros 0)  (524 Î¼s, 0.01%)</title><rect x="879.1" y="181" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="882.11" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;repository&quot;)] :: shapeless.HNil,String :: org.scalasteward.core.forge.bitbucketserver.Json.Repository :: shapeless.HNil]{type Out = R} (expanded macros 0)  (2,734 Î¼s, 0.04%)</title><rect x="855.7" y="197" width="0.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="858.73" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;base&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;head&quot;)] :: shapeless.HNil,org.scalasteward.core.forge.gitea.GiteaApiAlg.PRBranchInfo :: org.scalasteward.core.forge.gitea.GiteaApiAlg.PRBranchInfo :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (6,418 Î¼s, 0.10%)</title><rect x="612.7" y="133" width="1.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="615.66" y="143.5" ></text>
</g>
<g >
<title>Ordering[org.scalasteward.core.data.Version] (expanded macros 0)  (3,465 Î¼s, 0.06%)</title><rect x="176.2" y="245" width="0.7" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="179.20" y="255.5" ></text>
</g>
<g >
<title>cats.Functor[io.circe.Decoder] (expanded macros 0)  (623 Î¼s, 0.01%)</title><rect x="402.7" y="229" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="405.68" y="239.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.bitbucketserver.Json.Repo]{type Repr = R} (expanded macros 0)  (9,085 Î¼s, 0.15%)</title><rect x="733.0" y="213" width="1.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="736.00" y="223.5" ></text>
</g>
<g >
<title>F[_1] =&gt; ?{def map: ?} (expanded macros 0)  (926 Î¼s, 0.02%)</title><rect x="119.3" y="245" width="0.2" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="122.30" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (992 Î¼s, 0.02%)</title><rect x="613.7" y="101" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="616.70" y="111.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.data.BranchOut]{type Repr = R} (expanded macros 0)  (8,286 Î¼s, 0.13%)</title><rect x="739.9" y="213" width="1.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="742.94" y="223.5" ></text>
</g>
<g >
<title>F[(Unit, String, org.scalasteward.core.git.CommitMsg)] =&gt; ?{def flatMap: ?} (expanded macros 0)  (1,135 Î¼s, 0.02%)</title><rect x="46.9" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="49.87" y="255.5" ></text>
</g>
<g >
<title>F[List[String]] =&gt; ?{def attempt: ?} (expanded macros 0)  (589 Î¼s, 0.01%)</title><rect x="60.2" y="245" width="0.1" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="63.23" y="255.5" ></text>
</g>
<g >
<title>F[org.http4s.Status] =&gt; ?{def map: ?} (expanded macros 0)  (572 Î¼s, 0.01%)</title><rect x="129.1" y="245" width="0.1" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="132.12" y="255.5" ></text>
</g>
<g >
<title>((com.monovore.decline.Opts[List[org.http4s.Uri]], com.monovore.decline.Opts[Boolean])) =&gt; ?{def mapN: ?} (expanded macros 0)  (5,206 Î¼s, 0.08%)</title><rect x="17.0" y="245" width="1.0" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="20.03" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;artifactIdAfter&quot;)]} (id 8740) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (740 Î¼s, 0.01%)</title><rect x="1160.9" y="133" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1163.92" y="143.5" ></text>
</g>
<g >
<title>Float =&gt; Int (expanded macros 0)   (2,249 Î¼s, 0.04%)</title><rect x="150.7" y="245" width="0.5" height="15.0" fill="rgb(241,110,110)" rx="2" ry="2" />
<text  x="153.75" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;key&quot;)],String] :: shapeless.HNil] (id 4147) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (3,620 Î¼s, 0.06%)</title><rect x="524.2" y="197" width="0.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="527.19" y="207.5" ></text>
</g>
<g >
<title>cats.kernel.Order[List[org.scalasteward.core.data.Version.Component]] (expanded macros 0)  (1,395 Î¼s, 0.02%)</title><rect x="210.4" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="213.38" y="239.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Resolver]{type Repr = V} (expanded macros 3)   (1,649 Î¼s, 0.03%)</title><rect x="922.3" y="197" width="0.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="925.26" y="207.5" ></text>
</g>
<g >
<title>x$1.type =&gt; ?{def sequence: ?} (expanded macros 0)  (2,805 Î¼s, 0.05%)</title><rect x="1181.3" y="245" width="0.5" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="1184.31" y="255.5" ></text>
</g>
<g >
<title>&quot;), x$2: ? &gt;: String(&quot; (2,635 Î¼s, 0.04%)</title><rect x="413.8" y="229" width="0.5" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="416.81" y="239.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.gitea.GiteaApiAlg.CommentResp]{type Repr = V} (id 4787) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (2,151 Î¼s, 0.03%)</title><rect x="549.4" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="552.41" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;login&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)] :: shapeless.HNil,String :: Long :: shapeless.HNil]{type Out = R} (expanded macros 0)  (6,844 Î¼s, 0.11%)</title><rect x="631.3" y="197" width="1.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="634.32" y="207.5" ></text>
</g>
<g >
<title>org.scalasteward.core.data.GroupId with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;groupId&quot;)],org.scalasteward.core.data.GroupId] :: cats.data.NonEmptyList[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;artifactIds&quot;)],cats.data.NonEmptyList[String]] :: org.scalasteward.core.data.Version with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;newVersion&quot;)],org.scalasteward.core.data.Version] :: cats.data.NonEmptyList[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;rewriteRules&quot;)],cats.data.NonEmptyList[String]] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;doc&quot;)],Option[String]] :: Option[cats.data.NonEmptyList[String]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;scalacOptions&quot;)],Option[cats.data.NonEmptyList[String]]] :: Option[cats.data.NonEmptyList[org.scalasteward.core.git.Author]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;authors&quot;)],Option[cats.data.NonEmptyList[org.scalasteward.core.git.Author]]] :: Option[org.scalasteward.core.edit.scalafix.ScalafixMigration.Target] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;target&quot;)],Option[org.scalasteward.core.edit.scalafix.ScalafixMigration.Target]] :: Option[org.scalasteward.core.edit.scalafix.ScalafixMigration.ExecutionOrder] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;executionOrder&quot;)],Option[org.scalasteward.core.edit.scalafix.ScalafixMigration.ExecutionOrder]] :: shapeless.HNil &lt;:&lt; (org.scalasteward.core.data.GroupId :: cats.data.NonEmptyList[String] :: org.scalasteward.core.data.Version :: cats.data.NonEmptyList[String] :: Option[String] :: Option[cats.data.NonEmptyList[String]] :: Option[cats.data.NonEmptyList[org.scalasteward.core.git.Author]] :: Option[org.scalasteward.core.edit.scalafix.ScalafixMigration.Target] :: Option[org.scalasteward.core.edit.scalafix.ScalafixMigration.ExecutionOrder] :: shapeless.HNil) (expanded macros 0)  (626 Î¼s, 0.01%)</title><rect x="693.4" y="197" width="0.1" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="696.42" y="207.5" ></text>
</g>
<g >
<title>F[Map[(org.scalasteward.core.data.GroupId, String),org.scalasteward.core.util.Timestamp]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (658 Î¼s, 0.01%)</title><rect x="78.1" y="245" width="0.1" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="81.08" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)]} (id 1887) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (972 Î¼s, 0.02%)</title><rect x="946.7" y="133" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="949.71" y="143.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.repoconfig.PullRequestGroup] (expanded macros 0)  (13,190 Î¼s, 0.21%)</title><rect x="888.5" y="229" width="2.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="891.51" y="239.5" ></text>
</g>
<g >
<title>Array[String] =&gt; ?{def toList: ?} (expanded macros 0)  (19,924 Î¼s, 0.32%)</title><rect x="25.8" y="245" width="3.8" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="28.83" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;customLabels&quot;)]} (id 7466) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,375 Î¼s, 0.02%)</title><rect x="1031.3" y="133" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1034.33" y="143.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.ReprDecoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: org.scalasteward.core.forge.data.UserOut with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;owner&quot;)],org.scalasteward.core.forge.data.UserOut] :: Option[org.scalasteward.core.forge.data.RepoOut] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;parent&quot;)],Option[org.scalasteward.core.forge.data.RepoOut]] :: org.http4s.Uri with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;clone_url&quot;)],org.http4s.Uri] :: org.scalasteward.core.git.Branch with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;default_branch&quot;)],org.scalasteward.core.git.Branch] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;archived&quot;)],Boolean] :: shapeless.HNil] (id 4440) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveDecoder`)  (9,039 Î¼s, 0.15%)</title><rect x="757.3" y="197" width="1.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="760.32" y="207.5" ></text>
</g>
<g >
<title>cats.effect.kernel.Resource[F,Option[better.files.File]] =&gt; ?{def void: ?} (expanded macros 0)  (3,393 Î¼s, 0.06%)</title><rect x="268.3" y="245" width="0.6" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="271.27" y="255.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.repoconfig.PullRequestGroup]{type Repr = R} (expanded macros 0)  (7,990 Î¼s, 0.13%)</title><rect x="888.6" y="213" width="1.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="891.58" y="223.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;commit&quot;)]} (id 4622) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,564 Î¼s, 0.03%)</title><rect x="544.9" y="181" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="547.88" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;maybeRepoConfig&quot;)]} (id 6856) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (794 Î¼s, 0.01%)</title><rect x="653.2" y="149" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="656.23" y="159.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.git.Branch] (expanded macros 0)   (545 Î¼s, 0.01%)</title><rect x="644.3" y="149" width="0.1" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="647.27" y="159.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)]} (id 4683) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,326 Î¼s, 0.02%)</title><rect x="612.4" y="133" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="615.41" y="143.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.buildtool.mill.MillModule] (expanded macros 0)  (2,777 Î¼s, 0.05%)</title><rect x="331.4" y="229" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="334.41" y="239.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.bitbucketserver.Json.User] (expanded macros 0)  (25,804 Î¼s, 0.42%)</title><rect x="528.4" y="229" width="5.0" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="531.45" y="239.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitlab.MergeRequestPayload]{type Out = K} (id 5467) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (2,308 Î¼s, 0.04%)</title><rect x="881.6" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="884.64" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;slug&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;project&quot;)] :: shapeless.HNil,String :: org.scalasteward.core.forge.bitbucketserver.Json.Project :: shapeless.HNil]{type Out = R} (expanded macros 0)  (2,667 Î¼s, 0.04%)</title><rect x="858.8" y="197" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="861.81" y="207.5" ></text>
</g>
<g >
<title>String =&gt; Iterable[_] (expanded macros 0)  (694 Î¼s, 0.01%)</title><rect x="356.4" y="197" width="0.1" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="359.40" y="207.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]]] (expanded macros 0)  (1,500 Î¼s, 0.02%)</title><rect x="1062.3" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1065.31" y="191.5" ></text>
</g>
<g >
<title>cats.Functor[F] (expanded macros 0)  (3,800 Î¼s, 0.06%)</title><rect x="99.7" y="229" width="0.7" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="102.68" y="239.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;body&quot;)]} (id 4792) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,492 Î¼s, 0.02%)</title><rect x="550.2" y="181" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="553.18" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.forge.github.GitHubLabels]{type Repr = V} (id 5287) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (1,105 Î¼s, 0.02%)</title><rect x="872.2" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="875.19" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Resolver]{type Out = K} (id 1682) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,502 Î¼s, 0.02%)</title><rect x="922.0" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="924.98" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.GroupRepoConfig]{type Out = K} (id 7110) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (630 Î¼s, 0.01%)</title><rect x="659.0" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="662.04" y="207.5" ></text>
</g>
<g >
<title>shapeless.Default[org.scalasteward.core.update.artifact.ArtifactChanges]{type Out = Options} (id 8862) (expanded macros 3) (tree from `shapeless.DefaultMacros.materialize`)  (1,174 Î¼s, 0.02%)</title><rect x="1168.9" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1171.94" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;fork&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;owner&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;archived&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;clone_url&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;default_branch&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;parent&quot;)] :: shapeless.HNil,Boolean :: Long :: org.scalasteward.core.forge.gitea.GiteaApiAlg.User :: String :: Boolean :: org.http4s.Uri :: String :: Option[org.scalasteward.core.forge.gitea.GiteaApiAlg.Repository] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (22,971 Î¼s, 0.37%)</title><rect x="621.1" y="197" width="4.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="624.12" y="207.5" ></text>
</g>
<g >
<title>cats.kernel.Order[List[org.scalasteward.core.data.Resolver]] (expanded macros 0)  (1,011 Î¼s, 0.02%)</title><rect x="285.5" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="288.53" y="239.5" ></text>
</g>
<g >
<title>names.type =&gt; ?{def mkString_: ?} (expanded macros 0)   (1,657 Î¼s, 0.03%)</title><rect x="392.2" y="245" width="0.3" height="15.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text  x="395.22" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.data.Resolver.Credentials] (expanded macros 0)  (1,605 Î¼s, 0.03%)</title><rect x="977.7" y="101" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="980.71" y="111.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.git.Sha1] (expanded macros 0)  (3,130 Î¼s, 0.05%)</title><rect x="374.9" y="245" width="0.6" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="377.91" y="255.5" ></text>
</g>
<g >
<title>F[(org.scalasteward.core.git.Branch, (List[org.scalasteward.core.data.Update.Grouped], List[org.scalasteward.core.data.Update.ForArtifactId]), List[Product with org.scalasteward.core.data.Update with java.io.Serializable])] =&gt; ?{def flatMap: ?} (expanded macros 0)  (682 Î¼s, 0.01%)</title><rect x="50.9" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="53.94" y="255.5" ></text>
</g>
<g >
<title>F[java.util.concurrent.Executor] =&gt; ?{def flatMap: ?} (expanded macros 0)  (3,169 Î¼s, 0.05%)</title><rect x="128.3" y="245" width="0.6" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="131.31" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;pullRequests&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependency&quot;)] :: shapeless.HNil,org.scalasteward.core.repoconfig.PullRequestsConfig :: org.scalasteward.core.repoconfig.UpdatePattern :: shapeless.HNil]{type Out = R} (expanded macros 0)  (2,794 Î¼s, 0.05%)</title><rect x="659.5" y="197" width="0.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="662.53" y="207.5" ></text>
</g>
<g >
<title>fs2.Compiler.Target[[x]F[x]] (expanded macros 0)  (10,316 Î¼s, 0.17%)</title><rect x="321.1" y="229" width="2.0" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="324.12" y="239.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Resolver]{type Out = K} (id 2162) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,703 Î¼s, 0.03%)</title><rect x="918.4" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="921.37" y="207.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[Int] (expanded macros 0)  (820 Î¼s, 0.01%)</title><rect x="303.6" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="306.59" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)],Option[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]]]] :: Option[List[String]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)],Option[List[String]]] :: shapeless.HNil] (expanded macros 0)  (4,028 Î¼s, 0.07%)</title><rect x="1107.6" y="149" width="0.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1110.64" y="159.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;artifactIdAfter&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (1,101 Î¼s, 0.02%)</title><rect x="1163.8" y="165" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1166.76" y="175.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;pattern&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (8,921 Î¼s, 0.14%)</title><rect x="979.6" y="133" width="1.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="982.64" y="143.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.ReprAsObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)],Option[String]] :: cats.data.NonEmptyList[org.scalasteward.core.repoconfig.PullRequestUpdateFilter] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;filter&quot;)],cats.data.NonEmptyList[org.scalasteward.core.repoconfig.PullRequestUpdateFilter]] :: shapeless.HNil]] (id 7373) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (4,851 Î¼s, 0.08%)</title><rect x="890.1" y="213" width="0.9" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="893.10" y="223.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.ReprAsObjectEncoder[List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;labels&quot;)],List[String]] :: shapeless.HNil]] (id 5292) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (4,619 Î¼s, 0.07%)</title><rect x="872.8" y="213" width="0.9" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="875.79" y="223.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[List[org.scalasteward.core.forge.bitbucketserver.Json.DefaultReviewer] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)],List[org.scalasteward.core.forge.bitbucketserver.Json.DefaultReviewer]] :: shapeless.HNil]] (id 3996) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (3,498 Î¼s, 0.06%)</title><rect x="714.2" y="213" width="0.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="717.19" y="223.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.data.BranchOut] (expanded macros 0)  (15,312 Î¼s, 0.25%)</title><rect x="736.3" y="229" width="3.0" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="739.33" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[shapeless.HNil,shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,094 Î¼s, 0.02%)</title><rect x="681.3" y="181" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="684.28" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;filter&quot;)]} (id 7339) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (640 Î¼s, 0.01%)</title><rect x="795.2" y="149" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="798.21" y="159.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.forge.data.PullRequestState] (expanded macros 0)  (1,496 Î¼s, 0.02%)</title><rect x="853.1" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="856.13" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.update.artifact.ArtifactChanges]{type Repr = V} (id 8844) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (955 Î¼s, 0.02%)</title><rect x="1171.4" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1174.37" y="207.5" ></text>
</g>
<g >
<title>from.major.type =&gt; ?{def =!= : ?} (expanded macros 0)  (1,853 Î¼s, 0.03%)</title><rect x="317.9" y="245" width="0.3" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="320.89" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.git.Sha1] (expanded macros 0)  (1,533 Î¼s, 0.02%)</title><rect x="643.0" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="646.02" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;rewriteRules&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;doc&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;scalacOptions&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;authors&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;target&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;executionOrder&quot;)] :: shapeless.HNil,cats.data.NonEmptyList[String] :: Option[String] :: Option[cats.data.NonEmptyList[String]] :: Option[cats.data.NonEmptyList[org.scalasteward.core.git.Author]] :: Option[org.scalasteward.core.edit.scalafix.ScalafixMigration.Target] :: Option[org.scalasteward.core.edit.scalafix.ScalafixMigration.ExecutionOrder] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (13,173 Î¼s, 0.21%)</title><rect x="697.4" y="149" width="2.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="700.37" y="159.5" ></text>
</g>
<g >
<title>from.preRelease.type =&gt; ?{def =!= : ?} (expanded macros 0)  (1,180 Î¼s, 0.02%)</title><rect x="319.0" y="245" width="0.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="322.00" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)]} (id 7884) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (674 Î¼s, 0.01%)</title><rect x="1074.7" y="53" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1077.72" y="63.5" ></text>
</g>
<g >
<title>(=&gt; String) =&gt; Int (expanded macros 0)   (703 Î¼s, 0.01%)</title><rect x="22.7" y="245" width="0.2" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text  x="25.74" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Update.Grouped]{type Repr = V} (id 2455) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (2,486 Î¼s, 0.04%)</title><rect x="824.1" y="197" width="0.5" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="827.14" y="207.5" ></text>
</g>
<g >
<title>F[List[org.scalasteward.core.edit.update.data.VersionPosition]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (967 Î¼s, 0.02%)</title><rect x="74.5" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="77.55" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;clone_url&quot;)]} (id 4434) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,067 Î¼s, 0.02%)</title><rect x="756.4" y="133" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="759.36" y="143.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.codec.ConfiguredAsObjectCodec[org.scalasteward.core.data.Resolver] (expanded macros 0)  (421,771 Î¼s, 6.84%)</title><rect x="917.3" y="229" width="80.7" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="920.31" y="239.5" >io.circe...</text>
</g>
<g >
<title>io.circe.Encoder[Option[String]] (expanded macros 0)  (1,694 Î¼s, 0.03%)</title><rect x="810.1" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="813.11" y="191.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucketserver.Json.Repository]{type Out = K} (id 4192) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (926 Î¼s, 0.02%)</title><rect x="858.1" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="861.13" y="207.5" ></text>
</g>
<g >
<title>cats.Foldable[F] (expanded macros 0)   (1,735 Î¼s, 0.03%)</title><rect x="394.6" y="229" width="0.4" height="15.0" fill="rgb(220,80,80)" rx="2" ry="2" />
<text  x="397.64" y="239.5" ></text>
</g>
<g >
<title>x$1.sha1.type =&gt; ?{def === : ?} (expanded macros 0)  (1,089 Î¼s, 0.02%)</title><rect x="1180.4" y="245" width="0.2" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="1183.42" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[org.scalasteward.core.buildtool.sbt.data.ScalaVersion]] (expanded macros 0)  (2,646 Î¼s, 0.04%)</title><rect x="479.5" y="181" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="482.46" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;version&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;sbtVersion&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;scalaVersion&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;configurations&quot;)] :: shapeless.HNil,org.scalasteward.core.data.Version :: Option[org.scalasteward.core.buildtool.sbt.data.SbtVersion] :: Option[org.scalasteward.core.buildtool.sbt.data.ScalaVersion] :: Option[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (9,810 Î¼s, 0.16%)</title><rect x="472.0" y="165" width="1.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="474.98" y="175.5" ></text>
</g>
<g >
<title>String =&gt; ?{def stripMargin: ?} (expanded macros 0)  (6,589 Î¼s, 0.11%)</title><rect x="182.7" y="245" width="1.3" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="185.71" y="255.5" ></text>
</g>
<g >
<title>F[Either[Throwable,List[org.scalasteward.core.data.Version]]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (1,550 Î¼s, 0.03%)</title><rect x="56.1" y="245" width="0.3" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="59.12" y="255.5" ></text>
</g>
<g >
<title>shapeless.Default.AsRecord.Helper[None.type :: None.type :: None.type :: None.type :: shapeless.HNil,Symbol with shapeless.tag.Tagged[String(&quot;groupIdBefore&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;groupIdAfter&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;artifactIdBefore&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;artifactIdAfter&quot;)] :: shapeless.HNil]{type Out = Rec} (expanded macros 0)  (1,329 Î¼s, 0.02%)</title><rect x="1157.4" y="197" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1160.42" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.ReprAsObjectEncoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)],String] :: String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;description&quot;)],String] :: org.scalasteward.core.forge.data.PullRequestState with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)],org.scalasteward.core.forge.data.PullRequestState] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;open&quot;)],Boolean] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;closed&quot;)],Boolean] :: org.scalasteward.core.forge.bitbucketserver.Json.Ref with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;fromRef&quot;)],org.scalasteward.core.forge.bitbucketserver.Json.Ref] :: org.scalasteward.core.forge.bitbucketserver.Json.Ref with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;toRef&quot;)],org.scalasteward.core.forge.bitbucketserver.Json.Ref] :: Boolean with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;locked&quot;)],Boolean] :: List[org.scalasteward.core.forge.bitbucketserver.Json.Reviewer] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)],List[org.scalasteward.core.forge.bitbucketserver.Json.Reviewer]] :: shapeless.HNil]] (id 4059) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (8,874 Î¼s, 0.14%)</title><rect x="851.7" y="213" width="1.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="854.72" y="223.5" ></text>
</g>
<g >
<title>shapeless.Lub[Symbol with shapeless.tag.Tagged[String(&quot;includeMatchedLabels&quot;)],Symbol with shapeless.tag.Tagged[String(&quot;customLabels&quot;)],Lub0] (expanded macros 0)  (754 Î¼s, 0.01%)</title><rect x="1038.9" y="165" width="0.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1041.87" y="175.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.repoconfig.UpdatePattern] (expanded macros 0)  (1,289 Î¼s, 0.02%)</title><rect x="660.8" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="663.81" y="191.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.codec.UnwrappedCodec[org.scalasteward.core.util.Timestamp] (expanded macros 0)  (2,966 Î¼s, 0.05%)</title><rect x="1147.8" y="229" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1150.78" y="239.5" ></text>
</g>
<g >
<title>cats.kernel.Order[(cats.data.NonEmptyList[org.scalasteward.core.data.CrossDependency], cats.data.NonEmptyList[org.scalasteward.core.data.Version])] (expanded macros 0)  (2,508 Î¼s, 0.04%)</title><rect x="286.8" y="245" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="289.84" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;pattern&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (9,104 Î¼s, 0.15%)</title><rect x="944.7" y="133" width="1.8" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="947.74" y="143.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.ReprDecoder[org.scalasteward.core.git.Sha1 with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;sha&quot;)],org.scalasteward.core.git.Sha1] :: shapeless.HNil] (id 4322) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveDecoder`)  (6,447 Î¼s, 0.10%)</title><rect x="745.4" y="197" width="1.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="748.37" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;artifactIdAfter&quot;)] :: shapeless.HNil,String :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,261 Î¼s, 0.02%)</title><rect x="1160.9" y="149" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1163.86" y="159.5" ></text>
</g>
<g >
<title>fa.type =&gt; ?{def attempt: ?} (expanded macros 0)  (540 Î¼s, 0.01%)</title><rect x="317.1" y="245" width="0.1" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="320.07" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil,org.scalasteward.core.repoconfig.UpdatesConfig :: Option[List[org.scalasteward.core.repoconfig.PostUpdateHookConfig]] :: Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy] :: Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]] :: List[String] :: List[String] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (12,003 Î¼s, 0.19%)</title><rect x="1053.7" y="149" width="2.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1056.75" y="159.5" ></text>
</g>
<g >
<title>cats.data.NonEmptyList[org.scalasteward.core.data.Update.ForArtifactId] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;forArtifactIds&quot;)],cats.data.NonEmptyList[org.scalasteward.core.data.Update.ForArtifactId]] :: shapeless.HNil &lt;:&lt; (cats.data.NonEmptyList[org.scalasteward.core.data.Update.ForArtifactId] :: shapeless.HNil) (expanded macros 0)  (794 Î¼s, 0.01%)</title><rect x="814.2" y="197" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="817.22" y="207.5" ></text>
</g>
<g >
<title>F[List[org.scalasteward.core.data.Repo]] =&gt; ?{def map: ?} (expanded macros 0)  (1,316 Î¼s, 0.02%)</title><rect x="69.0" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="71.97" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.Resolver.MavenRepository] (expanded macros 0)   (2,527 Î¼s, 0.04%)</title><rect x="928.9" y="181" width="0.5" height="15.0" fill="rgb(236,103,103)" rx="2" ry="2" />
<text  x="931.94" y="191.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repocache.RepoCache]{type Repr = V} (expanded macros 3)   (1,924 Î¼s, 0.03%)</title><rect x="651.7" y="197" width="0.4" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="654.73" y="207.5" ></text>
</g>
<g >
<title>cats.parse.Parser[String] =&gt; ?{def filterNot: ?} (expanded macros 0)  (2,284 Î¼s, 0.04%)</title><rect x="295.3" y="245" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="298.32" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;body&quot;)]} (id 4739) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,354 Î¼s, 0.02%)</title><rect x="576.4" y="133" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="579.44" y="143.5" ></text>
</g>
<g >
<title>repoConfig.dependencyOverrides.type =&gt; ?{def collectFirstSome: ?} (expanded macros 0)  (571 Î¼s, 0.01%)</title><rect x="411.2" y="245" width="0.1" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="414.17" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)]} (id 7622) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (973 Î¼s, 0.02%)</title><rect x="1055.4" y="53" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1058.36" y="63.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;postUpdateHooks&quot;)]} (id 7653) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (562 Î¼s, 0.01%)</title><rect x="1058.6" y="117" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1061.62" y="127.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.edit.scalafix.ScalafixMigrations] (expanded macros 0)  (1,573 Î¼s, 0.03%)</title><rect x="361.0" y="245" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="364.02" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;pattern&quot;)]} (id 2085) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (972 Î¼s, 0.02%)</title><rect x="975.2" y="101" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="978.19" y="111.5" ></text>
</g>
<g >
<title>RepoConfig.this.type =&gt; ?{def asJson: ?} (expanded macros 0)  (772 Î¼s, 0.01%)</title><rect x="177.5" y="245" width="0.2" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="180.51" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = shapeless._0} (expanded macros 0)  (7,287 Î¼s, 0.12%)</title><rect x="161.5" y="197" width="1.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="164.45" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;description&quot;)] :: shapeless.HNil,String :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,963 Î¼s, 0.03%)</title><rect x="842.4" y="133" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="845.42" y="143.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;base&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;body&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;due_date&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;head&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;labels&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;milestone&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)] :: shapeless.HNil,Option[Vector[String]] :: Option[String] :: Option[String] :: Option[String] :: Option[String] :: Option[Vector[Int]] :: Option[Int] :: Option[String] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (22,598 Î¼s, 0.37%)</title><rect x="575.2" y="181" width="4.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="578.17" y="191.5" ></text>
</g>
<g >
<title>x$48.updates.type =&gt; ?{def flatTraverse: ?} (expanded macros 0)  (529 Î¼s, 0.01%)</title><rect x="1186.8" y="245" width="0.1" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="1189.78" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;runAfterUpgrading&quot;)]} (id 8136) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (527 Î¼s, 0.01%)</title><rect x="1078.1" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1081.06" y="191.5" ></text>
</g>
<g >
<title>cats.effect.std.Console[cats.effect.IO] (expanded macros 0)  (2,292 Î¼s, 0.04%)</title><rect x="271.2" y="245" width="0.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="274.18" y="255.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.git.Sha1] (expanded macros 0)   (562 Î¼s, 0.01%)</title><rect x="643.2" y="165" width="0.1" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="646.19" y="175.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;pullRequests&quot;)]} (id 7868) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (594 Î¼s, 0.01%)</title><rect x="1072.6" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1075.60" y="191.5" ></text>
</g>
<g >
<title>F[List[String]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (7,294 Î¼s, 0.12%)</title><rect x="60.3" y="245" width="1.4" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="63.35" y="255.5" ></text>
</g>
<g >
<title>F[Option[org.scalasteward.core.git.Commit]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (967 Î¼s, 0.02%)</title><rect x="85.5" y="245" width="0.2" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="88.52" y="255.5" ></text>
</g>
<g >
<title>(=&gt; Float) =&gt; Int (expanded macros 0)   (674 Î¼s, 0.01%)</title><rect x="22.4" y="245" width="0.1" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text  x="25.36" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy] (expanded macros 0)  (809 Î¼s, 0.01%)</title><rect x="1064.8" y="165" width="0.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1067.78" y="175.5" ></text>
</g>
<g >
<title>shapeless.Lub[Symbol with shapeless.tag.Tagged[String(&quot;grouping&quot;)],Symbol with shapeless.tag.Tagged[_ &gt;: String(&quot;customLabels&quot;) with String(&quot;includeMatchedLabels&quot;) &lt;: String],Lub0] (expanded macros 0)  (965 Î¼s, 0.02%)</title><rect x="1038.3" y="181" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1041.27" y="191.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;body&quot;)],String] :: shapeless.HNil] (id 4778) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (4,026 Î¼s, 0.07%)</title><rect x="562.6" y="197" width="0.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="565.58" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.edit.scalafix.ScalafixMigration] (expanded macros 0)  (56,262 Î¼s, 0.91%)</title><rect x="692.9" y="229" width="10.7" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="695.86" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;base&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;draft&quot;)] :: shapeless.HNil,org.scalasteward.core.git.Branch :: Boolean :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (2,562 Î¼s, 0.04%)</title><rect x="865.8" y="149" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="868.81" y="159.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Scope[A]]{type Repr = V} (id 2194) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (4,148 Î¼s, 0.07%)</title><rect x="497.8" y="197" width="0.8" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="500.78" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;groupId&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;artifactId&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;command&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;commitMessage&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;addToGitBlameIgnoreRevs&quot;)] :: shapeless.HNil,Option[org.scalasteward.core.data.GroupId] :: Option[String] :: cats.data.NonEmptyList[String] :: String :: Option[Boolean] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (4,700 Î¼s, 0.08%)</title><rect x="1010.6" y="197" width="0.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1013.64" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.github.RepositoriesOut] (expanded macros 0)  (100,675 Î¼s, 1.63%)</title><rect x="764.2" y="229" width="19.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="767.19" y="239.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)]} (id 1883) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,119 Î¼s, 0.02%)</title><rect x="930.8" y="133" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="933.83" y="143.5" ></text>
</g>
<g >
<title>ValueOf[org.scalasteward.core.git.Sha1] (expanded macros 0)   (708 Î¼s, 0.01%)</title><rect x="605.6" y="165" width="0.1" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="608.56" y="175.5" ></text>
</g>
<g >
<title>F[(better.files.File, better.files.File)] =&gt; ?{def flatMap: ?} (expanded macros 0)  (1,845 Î¼s, 0.03%)</title><rect x="48.4" y="245" width="0.3" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="51.39" y="255.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.forge.data.RepoOut] =&gt; ?{def flatTap: ?} (expanded macros 0)  (1,142 Î¼s, 0.02%)</title><rect x="136.1" y="245" width="0.2" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="139.05" y="255.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.forge.bitbucket.CommentContent]{type Repr = R} (expanded macros 0)  (7,193 Î¼s, 0.12%)</title><rect x="505.2" y="213" width="1.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="508.15" y="223.5" ></text>
</g>
<g >
<title>cats.kernel.Eq[org.scalasteward.core.git.Sha1] (expanded macros 0)  (669 Î¼s, 0.01%)</title><rect x="280.3" y="245" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="283.31" y="255.5" ></text>
</g>
<g >
<title>org.http4s.QueryParamEncoder[Int] (expanded macros 0)  (887 Î¼s, 0.01%)</title><rect x="395.8" y="245" width="0.2" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="398.82" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.codec.ReprAsObjectCodec[org.scalasteward.core.data.Resolver.IvyRepository with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;IvyRepository&quot;)],org.scalasteward.core.data.Resolver.IvyRepository] :+: org.scalasteward.core.data.Resolver.MavenRepository with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;MavenRepository&quot;)],org.scalasteward.core.data.Resolver.MavenRepository] :+: shapeless.CNil]] (id 1684) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (386,046 Î¼s, 6.26%)</title><rect x="924.1" y="213" width="73.9" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="927.15" y="223.5" >shapeles..</text>
</g>
<g >
<title>F[org.scalasteward.core.forge.gitlab.MergeRequestApprovalsOut] =&gt; ?{def map: ?} (expanded macros 0)  (750 Î¼s, 0.01%)</title><rect x="139.0" y="245" width="0.1" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="141.95" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.forge.github.UpdatePullRequestPayload]] (id 5365) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (12,543 Î¼s, 0.20%)</title><rect x="873.7" y="245" width="2.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="876.67" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.github.UpdatePullRequestPayload]{type Out = K} (id 5370) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (769 Î¼s, 0.01%)</title><rect x="874.6" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="877.64" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.data.Resolver.MavenRepository]{type Out = Labels} (id 1752) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,796 Î¼s, 0.03%)</title><rect x="951.7" y="133" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="954.72" y="143.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.RepoConfig]{type Out = K} (id 7606) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,993 Î¼s, 0.03%)</title><rect x="1050.7" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1053.73" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;commit&quot;)] :: shapeless.HNil,org.scalasteward.core.forge.data.CommitOut :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,558 Î¼s, 0.03%)</title><rect x="741.2" y="181" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="744.23" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)]} (id 4055) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (988 Î¼s, 0.02%)</title><rect x="849.7" y="149" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="852.67" y="159.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: None.type :: None.type :: shapeless.HNil,List]{type Lub = Option[io.circe.generic.extras.JsonKey]} (expanded macros 0)  (5,641 Î¼s, 0.09%)</title><rect x="993.1" y="149" width="1.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="996.14" y="159.5" ></text>
</g>
<g >
<title>F[Option[cats.data.NonEmptyList[org.scalasteward.core.update.data.UpdateState.WithUpdate]]] =&gt; ?{def map: ?} (expanded macros 0)  (799 Î¼s, 0.01%)</title><rect x="83.0" y="245" width="0.2" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="86.04" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[Option[String]] (expanded macros 0)  (2,887 Î¼s, 0.05%)</title><rect x="344.8" y="245" width="0.6" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="347.80" y="255.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.data.Update.ForGroupId]{type Repr = V} (expanded macros 3)   (2,398 Î¼s, 0.04%)</title><rect x="815.1" y="197" width="0.5" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="818.12" y="207.5" ></text>
</g>
<g >
<title>List[org.scalasteward.core.coursier.DependencyMetadata] =&gt; ?{def traverse: ?} (expanded macros 0)  (579 Î¼s, 0.01%)</title><rect x="170.5" y="245" width="0.1" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="173.49" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (5,103 Î¼s, 0.08%)</title><rect x="963.1" y="133" width="1.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="966.08" y="143.5" ></text>
</g>
<g >
<title>F[List[org.scalasteward.core.forge.bitbucketserver.Json.Condition]] =&gt; ?{def map: ?} (expanded macros 0)  (1,378 Î¼s, 0.02%)</title><rect x="74.7" y="245" width="0.3" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="77.73" y="255.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.bitbucketserver.Json.Reviewer]{type Out = K} (id 4211) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (677 Î¼s, 0.01%)</title><rect x="526.1" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="529.06" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;comments&quot;)]} (id 3447) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (664 Î¼s, 0.01%)</title><rect x="836.2" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="839.21" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;pass&quot;)] :: shapeless.HNil,String :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (2,108 Î¼s, 0.03%)</title><rect x="484.8" y="181" width="0.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="487.80" y="191.5" ></text>
</g>
<g >
<title>F[(better.files.File, String, cats.data.NonEmptyList[String], scala.collection.immutable.Set[org.scalasteward.core.io.process.SlurpOption])] =&gt; ?{def flatMap: ?} (expanded macros 0)  (1,223 Î¼s, 0.02%)</title><rect x="48.2" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="51.16" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)]} (id 7882) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (661 Î¼s, 0.01%)</title><rect x="1074.4" y="69" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1077.42" y="79.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.Validate[Int,eu.timepit.refined.boolean.Not[eu.timepit.refined.numeric.Less[shapeless._0]]] (expanded macros 0)  (3,975 Î¼s, 0.06%)</title><rect x="1098.9" y="149" width="0.8" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="1101.89" y="159.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.VersionPattern]{type Out = K} (id 8467) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,206 Î¼s, 0.02%)</title><rect x="797.3" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="800.33" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)]} (id 5457) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (783 Î¼s, 0.01%)</title><rect x="792.2" y="181" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="795.20" y="191.5" ></text>
</g>
<g >
<title>shapeless.Default[org.scalasteward.core.repoconfig.CommitsConfig]{type Out = Options} (id 7085) (expanded macros 3) (tree from `shapeless.DefaultMacros.materialize`)  (816 Î¼s, 0.01%)</title><rect x="999.6" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1002.65" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.forge.github.CreatePullRequestPayload] (expanded macros 0)  (18,961 Î¼s, 0.31%)</title><rect x="863.7" y="229" width="3.6" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="866.71" y="239.5" ></text>
</g>
<g >
<title>io.circe.Encoder[org.scalasteward.core.data.Scope[List[org.scalasteward.core.data.DependencyInfo]]] (expanded macros 0)  (5,069 Î¼s, 0.08%)</title><rect x="656.5" y="165" width="1.0" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="659.50" y="175.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;state&quot;)],String] :: shapeless.HNil]] (id 4713) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (4,689 Î¼s, 0.08%)</title><rect x="586.4" y="213" width="0.9" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="589.38" y="223.5" ></text>
</g>
<g >
<title>shapeless.Generic[org.scalasteward.core.repoconfig.UpdatePattern]{type Repr = V} (id 8180) (expanded macros 3) (tree from `shapeless.GenericMacros.materialize`)  (960 Î¼s, 0.02%)</title><rect x="663.0" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="666.02" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.extras.codec.ConfiguredAsObjectCodec[org.scalasteward.core.repoconfig.UpdatesConfig]] (id 8233) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (151,038 Î¼s, 2.45%)</title><rect x="1079.5" y="245" width="28.9" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1082.52" y="255.5" >sh..</text>
</g>
<g >
<title>io.circe.generic.extras.util.RecordToMap[Option[Boolean] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;addToGitBlameIgnoreRevs&quot;)],Option[Boolean]] :: shapeless.HNil] (expanded macros 0)  (948 Î¼s, 0.02%)</title><rect x="1005.5" y="213" width="0.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1008.52" y="223.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.update.artifact.ArtifactChange]{type Out = Labels} (id 8771) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (677 Î¼s, 0.01%)</title><rect x="1157.7" y="197" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1160.67" y="207.5" ></text>
</g>
<g >
<title>dependencies.type =&gt; ?{def parTraverseFilter: ?} (expanded macros 0)  (579 Î¼s, 0.01%)</title><rect x="304.5" y="245" width="0.1" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="307.48" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[shapeless.Generic[org.scalasteward.core.data.CrossDependency]{type Repr = R :: shapeless.HNil}] (id 1421) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (5,939 Î¼s, 0.10%)</title><rect x="1122.2" y="213" width="1.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1125.23" y="223.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;slug&quot;)],String] :: scala.collection.immutable.Map[String,cats.data.NonEmptyList[org.scalasteward.core.forge.bitbucketserver.Json.Link]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;links&quot;)],scala.collection.immutable.Map[String,cats.data.NonEmptyList[org.scalasteward.core.forge.bitbucketserver.Json.Link]]] :: shapeless.HNil]] (id 4180) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (4,439 Î¼s, 0.07%)</title><rect x="734.7" y="213" width="0.9" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="737.74" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.record.Keys[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;location&quot;)],String] :: Option[org.scalasteward.core.data.Resolver.Credentials] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)],Option[org.scalasteward.core.data.Resolver.Credentials]] :: List[org.scalasteward.core.data.Resolver.Header] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)],List[org.scalasteward.core.data.Resolver.Header]] :: shapeless.HNil] (expanded macros 0)  (5,734 Î¼s, 0.09%)</title><rect x="996.9" y="133" width="1.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="999.92" y="143.5" ></text>
</g>
<g >
<title>F[Option[org.scalasteward.core.repocache.RefreshErrorAlg.Entry]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (544 Î¼s, 0.01%)</title><rect x="86.9" y="245" width="0.1" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="89.89" y="255.5" ></text>
</g>
<g >
<title>Array[String] =&gt; ?{def last: ?} (expanded macros 0)  (1,598 Î¼s, 0.03%)</title><rect x="24.9" y="245" width="0.3" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="27.87" y="255.5" ></text>
</g>
<g >
<title>cats.Functor[F] (expanded macros 0)  (736 Î¼s, 0.01%)</title><rect x="67.2" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="70.23" y="239.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;body&quot;)] :: shapeless.HNil,String :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,094 Î¼s, 0.02%)</title><rect x="875.4" y="181" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="878.39" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;groupIdBefore&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;groupIdAfter&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;artifactIdBefore&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;artifactIdAfter&quot;)] :: shapeless.HNil,List]{type Lub = Symbol} (expanded macros 0)  (5,702 Î¼s, 0.09%)</title><rect x="1162.9" y="213" width="1.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1165.88" y="223.5" ></text>
</g>
<g >
<title>String =&gt; Int (expanded macros 0)   (1,935 Î¼s, 0.03%)</title><rect x="184.3" y="245" width="0.4" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="187.30" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;project&quot;)] :: shapeless.HNil,org.scalasteward.core.forge.bitbucketserver.Json.Project :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,479 Î¼s, 0.02%)</title><rect x="859.0" y="181" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="862.04" y="191.5" ></text>
</g>
<g >
<title>F[List[(org.scalasteward.core.data.Dependency, org.scalasteward.core.coursier.DependencyMetadata)]] =&gt; ?{def map: ?} (expanded macros 0)  (995 Î¼s, 0.02%)</title><rect x="59.4" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="62.42" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: None.type :: None.type :: shapeless.HNil,List]{type Lub = Option[io.circe.generic.extras.JsonKey]} (expanded macros 0)  (6,725 Î¼s, 0.11%)</title><rect x="962.8" y="149" width="1.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="965.77" y="159.5" ></text>
</g>
<g >
<title>io.circe.Decoder[String] (expanded macros 0)  (1,438 Î¼s, 0.02%)</title><rect x="1113.6" y="213" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1116.65" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: None.type :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (7,534 Î¼s, 0.12%)</title><rect x="1066.4" y="165" width="1.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1069.38" y="175.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;limit&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;fileExtensions&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (5,251 Î¼s, 0.09%)</title><rect x="1105.0" y="149" width="1.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1107.98" y="159.5" ></text>
</g>
<g >
<title>F[org.scalasteward.core.forge.bitbucket.RepositoryResponse] =&gt; ?{def recoverWith: ?} (expanded macros 0)  (788 Î¼s, 0.01%)</title><rect x="132.7" y="245" width="0.2" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="135.74" y="255.5" ></text>
</g>
<g >
<title>io.circe.Encoder[List[org.scalasteward.core.data.Resolver]] (expanded macros 0)  (4,377 Î¼s, 0.07%)</title><rect x="503.4" y="181" width="0.9" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="506.44" y="191.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;sha1&quot;)]} (id 6858) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (866 Î¼s, 0.01%)</title><rect x="652.7" y="181" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="655.69" y="191.5" ></text>
</g>
<g >
<title>shapeless.LabelledGeneric[org.scalasteward.core.edit.scalafix.ScalafixMigration]{type Repr = R} (expanded macros 0)  (35,943 Î¼s, 0.58%)</title><rect x="693.0" y="213" width="6.9" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="696.02" y="223.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.data.RepoOut]{type Out = K} (id 4423) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,437 Î¼s, 0.02%)</title><rect x="754.2" y="197" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="757.24" y="207.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.gitea.GiteaApiAlg.PRBranchInfo]] (id 4630) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (36,846 Î¼s, 0.60%)</title><rect x="594.1" y="245" width="7.0" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="597.09" y="255.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.Validate[Int,eu.timepit.refined.numeric.Less[shapeless._0]]{type R = R} (expanded macros 0)  (3,462 Î¼s, 0.06%)</title><rect x="311.8" y="229" width="0.6" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="314.78" y="239.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.VersionPattern]{type Out = K} (id 8469) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (1,028 Î¼s, 0.02%)</title><rect x="797.6" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="800.56" y="207.5" ></text>
</g>
<g >
<title>cats.data.NonEmptyList[String] =&gt; ?{def contains_: ?} (expanded macros 0)  (726 Î¼s, 0.01%)</title><rect x="253.3" y="245" width="0.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="256.30" y="255.5" ></text>
</g>
<g >
<title>eu.timepit.refined.api.Validate[Int,eu.timepit.refined.numeric.Greater[shapeless._0]] (expanded macros 0)  (13,499 Î¼s, 0.22%)</title><rect x="312.4" y="245" width="2.6" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="315.44" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[org.scalasteward.core.git.Branch with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],org.scalasteward.core.git.Branch] :: org.scalasteward.core.forge.data.CommitOut with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;commit&quot;)],org.scalasteward.core.forge.data.CommitOut] :: shapeless.HNil]] (id 4275) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (5,475 Î¼s, 0.09%)</title><rect x="738.2" y="213" width="1.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="741.21" y="223.5" ></text>
</g>
<g >
<title>F[(Unit, String, F[Option[org.scalasteward.core.git.Commit]])] =&gt; ?{def flatMap: ?} (expanded macros 0)  (1,123 Î¼s, 0.02%)</title><rect x="46.5" y="245" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="49.50" y="255.5" ></text>
</g>
<g >
<title>io.circe.Decoder[org.scalasteward.core.data.Version] (expanded macros 0)  (3,715 Î¼s, 0.06%)</title><rect x="353.6" y="229" width="0.7" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="356.62" y="239.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.ReprAsObjectCodec[A with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;value&quot;)],A] :: List[org.scalasteward.core.data.Resolver] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;resolvers&quot;)],List[org.scalasteward.core.data.Resolver]] :: shapeless.HNil] (id 2202) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveCodec`)  (15,106 Î¼s, 0.24%)</title><rect x="501.4" y="197" width="2.9" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="504.39" y="207.5" ></text>
</g>
<g >
<title>F[io.circe.Json] =&gt; ?{def flatMap: ?} (expanded macros 0)  (730 Î¼s, 0.01%)</title><rect x="127.2" y="245" width="0.1" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="130.19" y="255.5" ></text>
</g>
<g >
<title>io.circe.generic.decoding.ReprDecoder[org.scalasteward.core.git.Branch with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],org.scalasteward.core.git.Branch] :: org.scalasteward.core.forge.data.CommitOut with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;commit&quot;)],org.scalasteward.core.forge.data.CommitOut] :: shapeless.HNil] (id 5551) (expanded macros 3) (tree from `io.circe.generic.Deriver.deriveDecoder`)  (3,281 Î¼s, 0.05%)</title><rect x="741.6" y="197" width="0.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="744.63" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;id&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: shapeless.HNil,Int :: String :: shapeless.HNil]{type Out = R} (expanded macros 0)  (7,549 Î¼s, 0.12%)</title><rect x="591.1" y="197" width="1.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="594.13" y="207.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;crossDependency&quot;)]} (id 2363) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,821 Î¼s, 0.03%)</title><rect x="670.6" y="181" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="673.58" y="191.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;login&quot;)] :: shapeless.HNil,String :: shapeless.HNil]{type Out = R} (expanded macros 0)  (1,537 Î¼s, 0.02%)</title><rect x="760.8" y="197" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="763.82" y="207.5" ></text>
</g>
<g >
<title>io.circe.generic.codec.DerivedAsObjectCodec[org.scalasteward.core.forge.bitbucket.CommentContent] (expanded macros 0)  (12,169 Î¼s, 0.20%)</title><rect x="505.0" y="229" width="2.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="507.99" y="239.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.DerivedDecoder[org.scalasteward.core.forge.data.BranchOut]] (id 4262) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (19,194 Î¼s, 0.31%)</title><rect x="735.6" y="245" width="3.7" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="738.59" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil,[+A]List[A]]{type Lub = LubT} (expanded macros 0)  (10,538 Î¼s, 0.17%)</title><rect x="1070.1" y="133" width="2.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1073.14" y="143.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.forge.gitea.GiteaApiAlg.CreateForkOption]{type Out = K} (id 4506) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (2,033 Î¼s, 0.03%)</title><rect x="554.9" y="197" width="0.4" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="557.91" y="207.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)] :: shapeless.HNil,List[org.scalasteward.core.repoconfig.GroupRepoConfig] :: shapeless.HNil]{type Out = ZwkOut} (expanded macros 0)  (1,789 Î¼s, 0.03%)</title><rect x="1059.7" y="53" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1062.65" y="63.5" ></text>
</g>
<g >
<title>F[List[coursier.core.Repository]] =&gt; ?{def flatMap: ?} (expanded macros 0)  (1,930 Î¼s, 0.03%)</title><rect x="67.6" y="245" width="0.4" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="70.59" y="255.5" ></text>
</g>
<g >
<title>F[(Map[String,Int], org.scalasteward.core.forge.gitlab.MergeRequestPayload)] =&gt; ?{def flatMap: ?} (expanded macros 0)  (596 Î¼s, 0.01%)</title><rect x="43.7" y="245" width="0.1" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="46.68" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;content&quot;)]} (id 3633) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (1,173 Î¼s, 0.02%)</title><rect x="509.5" y="181" width="0.3" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="512.53" y="191.5" ></text>
</g>
<g >
<title>scala.collection.immutable.Vector[String] =&gt; ?{def traverse: ?} (expanded macros 0)  (706 Î¼s, 0.01%)</title><rect x="416.0" y="245" width="0.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="419.05" y="255.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ZipWithKeys[Symbol with shapeless.tag.Tagged[String(&quot;message&quot;)] :: shapeless.HNil,Option[String] :: shapeless.HNil]{type Out = R} (expanded macros 0)  (1,030 Î¼s, 0.02%)</title><rect x="1001.5" y="197" width="0.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1004.51" y="207.5" ></text>
</g>
<g >
<title>shapeless.DefaultSymbolicLabelling[org.scalasteward.core.repoconfig.CommitsConfig]{type Out = K} (id 7061) (expanded macros 3) (tree from `shapeless.LabelledMacros.mkDefaultSymbolicLabellingImpl`)  (780 Î¼s, 0.01%)</title><rect x="1000.1" y="197" width="0.2" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1003.11" y="207.5" ></text>
</g>
<g >
<title>io.circe.Encoder[Option[Vector[String]]] (expanded macros 0)  (1,400 Î¼s, 0.02%)</title><rect x="582.8" y="181" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="585.80" y="191.5" ></text>
</g>
<g >
<title>io.circe.generic.extras.util.RecordToMap[Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;updatePullRequests&quot;)],Option[org.scalasteward.core.repoconfig.PullRequestUpdateStrategy]] :: Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;buildRoots&quot;)],Option[List[org.scalasteward.core.repoconfig.BuildRootConfig]]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;assignees&quot;)],List[String]] :: List[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;reviewers&quot;)],List[String]] :: List[org.scalasteward.core.repoconfig.GroupRepoConfig] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;dependencyOverrides&quot;)],List[org.scalasteward.core.repoconfig.GroupRepoConfig]] :: shapeless.HNil] (expanded macros 0)  (5,155 Î¼s, 0.08%)</title><rect x="1045.7" y="133" width="1.0" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1048.70" y="143.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.decoding.ReprDecoder[String with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)],String] :: Option[String] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;title&quot;)],Option[String]] :: List[org.scalasteward.core.data.Update.ForArtifactId] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;updates&quot;)],List[org.scalasteward.core.data.Update.ForArtifactId]] :: shapeless.HNil]] (id 2487) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (8,228 Î¼s, 0.13%)</title><rect x="688.8" y="213" width="1.6" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="691.81" y="223.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.encoding.DerivedAsObjectEncoder[org.scalasteward.core.forge.azurerepos.PullRequestCommentPayload]] (id 3436) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (20,102 Î¼s, 0.33%)</title><rect x="833.7" y="245" width="3.9" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="836.71" y="255.5" ></text>
</g>
<g >
<title>shapeless.Lazy[io.circe.generic.codec.ReprAsObjectCodec[A with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;value&quot;)],A] :: List[org.scalasteward.core.data.Resolver] with shapeless.labelled.KeyTag[Symbol with shapeless.tag.Tagged[String(&quot;resolvers&quot;)],List[org.scalasteward.core.data.Resolver]] :: shapeless.HNil]] (id 2201) (expanded macros 3) (tree from `shapeless.LazyMacros.mkLazyImpl`)  (16,293 Î¼s, 0.26%)</title><rect x="501.2" y="213" width="3.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="504.16" y="223.5" ></text>
</g>
<g >
<title>shapeless.ops.hlist.ToTraversable[Symbol with shapeless.tag.Tagged[String(&quot;name&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;pattern&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;credentials&quot;)] :: Symbol with shapeless.tag.Tagged[String(&quot;headers&quot;)] :: shapeless.HNil,List]{type Lub = Symbol} (expanded macros 0)  (10,927 Î¼s, 0.18%)</title><rect x="944.4" y="149" width="2.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="947.39" y="159.5" ></text>
</g>
<g >
<title>scala.util.Either[org.http4s.ParseFailure,org.http4s.Uri] =&gt; ?{def leftMap: ?} (expanded macros 0)  (7,273 Î¼s, 0.12%)</title><rect x="418.3" y="245" width="1.3" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="421.26" y="255.5" ></text>
</g>
<g >
<title>shapeless.Witness{type T = Symbol with shapeless.tag.Tagged[String(&quot;scalafmt&quot;)]} (id 7870) (expanded macros 3) (tree from `shapeless.SingletonTypeMacros.materializeImpl`)  (613 Î¼s, 0.01%)</title><rect x="1072.9" y="165" width="0.1" height="15.0" fill="rgb(0,199,169)" rx="2" ry="2" />
<text  x="1075.85" y="175.5" ></text>
</g>
</g>
</svg>
